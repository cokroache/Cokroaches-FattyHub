local Players = game:GetService("Players")
		local UserInputService = game:GetService("UserInputService")
		local RunService = game:GetService("RunService")
		local StarterPlayer = game:GetService("StarterPlayer")

		local player = Players.LocalPlayer
		local playerGui = player:WaitForChild("PlayerGui")

		local humanoid
		local rootPart


		local keysDown = {
			W = false,
			A = false,
			S = false,
			D = false,
		}


		local function removeTouchControls()
			local touchGui = playerGui:FindFirstChild("TouchGui")
			touchGui:Destroy() 
		end

		removeTouchControls()
		playerGui.ChildAdded:Connect(function(child)
			if child.Name == "TouchGui" then
				removeTouchControls()
			end
		end)

		
		if UserInputService.TouchEnabled then
			pcall(function()
				UserInputService:SetPlatformUserInputOverride(Enum.UserInputType.Keyboard)
			end)
		end

		local function onCharacterAdded(character)
			humanoid = character:WaitForChild("Humanoid")
			rootPart = character:WaitForChild("HumanoidRootPart")
		end

		if player.Character then
			onCharacterAdded(player.Character)
		end

		player.CharacterAdded:Connect(onCharacterAdded)

		UserInputService.InputBegan:Connect(function(input, gameProcessed)
			if gameProcessed then return end
			if input.UserInputType == Enum.UserInputType.Keyboard then
				local key = input.KeyCode.Name
				if keysDown[key] ~= nil then
					keysDown[key] = true
				end
			end
		end)

		UserInputService.InputEnded:Connect(function(input, gameProcessed)
			if gameProcessed then return end
			if input.UserInputType == Enum.UserInputType.Keyboard then
				local key = input.KeyCode.Name
				if keysDown[key] ~= nil then
					keysDown[key] = false
				end
			end
		end)

		RunService.RenderStepped:Connect(function()
			if not (humanoid and rootPart) then return end

			local cam = workspace.CurrentCamera
			local lookVector = cam.CFrame.LookVector
			local camForward = Vector3.new(lookVector.X, 0, lookVector.Z)
			if camForward.Magnitude > 0 then
				camForward = camForward.Unit
			end
			local camRight = Vector3.new(cam.CFrame.RightVector.X, 0, cam.CFrame.RightVector.Z)
			if camRight.Magnitude > 0 then
				camRight = camRight.Unit
			end

			local moveDir = Vector3.new(0, 0, 0)
			if keysDown.W then moveDir = moveDir + camForward end
			if keysDown.S then moveDir = moveDir - camForward end
			if keysDown.A then moveDir = moveDir - camRight end
			if keysDown.D then moveDir = moveDir + camRight end

			if moveDir.Magnitude > 0 then
				humanoid:Move(moveDir.Unit, false)
			else
				humanoid:Move(Vector3.new(0, 0, 0), false)
			end
		end)
